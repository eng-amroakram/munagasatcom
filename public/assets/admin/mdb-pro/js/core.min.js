/*!
 * Version: MDB PRO 7.2.0
 *
 * Copyright: Material Design for Bootstrap
 * https://mdbootstrap.com/
 *
 * If you don't have a PRO license, you can purchase one here:
 * https://mdbootstrap.com/docs/standard/pro/
 *
 * Enterprise quotations, standard license & license customization:
 * https://mdbootstrap.com/general/license/
 *
 * Documentation:
 * https://mdbootstrap.com/docs/standard/
 *
 * Support:
 * https://mdbootstrap.com/support/
 *
 * Contact:
 * contact@mdbootstrap.com
 */

!(function (t, e) {
    "object" == typeof exports && "undefined" != typeof module
        ? (module.exports = e())
        : "function" == typeof define && define.amd
        ? define(e)
        : ((t = "undefined" != typeof globalThis ? globalThis : t || self).mdb =
              e());
})(this, function () {
    "use strict";
    var t,
        e = Object.defineProperty,
        n = (t, n, i) => (
            ((t, n, i) => {
                n in t
                    ? e(t, n, {
                          enumerable: !0,
                          configurable: !0,
                          writable: !0,
                          value: i,
                      })
                    : (t[n] = i);
            })(t, "symbol" != typeof n ? n + "" : n, i),
            i
        );
    globalThis,
        (t = function () {
            return (function (t) {
                function e(i) {
                    if (n[i]) return n[i].exports;
                    var s = (n[i] = { i: i, l: !1, exports: {} });
                    return (
                        t[i].call(s.exports, s, s.exports, e),
                        (s.l = !0),
                        s.exports
                    );
                }
                var n = {};
                return (
                    (e.m = t),
                    (e.c = n),
                    (e.i = function (t) {
                        return t;
                    }),
                    (e.d = function (t, n, i) {
                        e.o(t, n) ||
                            Object.defineProperty(t, n, {
                                configurable: !1,
                                enumerable: !0,
                                get: i,
                            });
                    }),
                    (e.n = function (t) {
                        var n =
                            t && t.__esModule
                                ? function () {
                                      return t.default;
                                  }
                                : function () {
                                      return t;
                                  };
                        return e.d(n, "a", n), n;
                    }),
                    (e.o = function (t, e) {
                        return Object.prototype.hasOwnProperty.call(t, e);
                    }),
                    (e.p = ""),
                    e((e.s = 3))
                );
            })([
                function (t, e, n) {
                    var i, s, o;
                    (s = [t, n(7)]),
                        (i = function (t, e) {
                            function n(t, e) {
                                if (!(t instanceof e))
                                    throw new TypeError(
                                        "Cannot call a class as a function"
                                    );
                            }
                            var i,
                                s =
                                    (i = e) && i.__esModule
                                        ? i
                                        : { default: i },
                                o =
                                    "function" == typeof Symbol &&
                                    "symbol" == typeof Symbol.iterator
                                        ? function (t) {
                                              return typeof t;
                                          }
                                        : function (t) {
                                              return t &&
                                                  "function" == typeof Symbol &&
                                                  t.constructor === Symbol &&
                                                  t !== Symbol.prototype
                                                  ? "symbol"
                                                  : typeof t;
                                          },
                                r = (function () {
                                    function t(t, e) {
                                        for (var n = 0; n < e.length; n++) {
                                            var i = e[n];
                                            (i.enumerable = i.enumerable || !1),
                                                (i.configurable = !0),
                                                "value" in i &&
                                                    (i.writable = !0),
                                                Object.defineProperty(
                                                    t,
                                                    i.key,
                                                    i
                                                );
                                        }
                                    }
                                    return function (e, n, i) {
                                        return (
                                            n && t(e.prototype, n),
                                            i && t(e, i),
                                            e
                                        );
                                    };
                                })(),
                                a = (function () {
                                    function t(e) {
                                        n(this, t),
                                            this.resolveOptions(e),
                                            this.initSelection();
                                    }
                                    return (
                                        r(t, [
                                            {
                                                key: "resolveOptions",
                                                value: function () {
                                                    var t =
                                                        arguments.length > 0 &&
                                                        void 0 !== arguments[0]
                                                            ? arguments[0]
                                                            : {};
                                                    (this.action = t.action),
                                                        (this.container =
                                                            t.container),
                                                        (this.emitter =
                                                            t.emitter),
                                                        (this.target =
                                                            t.target),
                                                        (this.text = t.text),
                                                        (this.trigger =
                                                            t.trigger),
                                                        (this.selectedText =
                                                            "");
                                                },
                                            },
                                            {
                                                key: "initSelection",
                                                value: function () {
                                                    this.text
                                                        ? this.selectFake()
                                                        : this.target &&
                                                          this.selectTarget();
                                                },
                                            },
                                            {
                                                key: "selectFake",
                                                value: function () {
                                                    var t = this,
                                                        e =
                                                            "rtl" ==
                                                            document.documentElement.getAttribute(
                                                                "dir"
                                                            );
                                                    this.removeFake(),
                                                        (this.fakeHandlerCallback =
                                                            function () {
                                                                return t.removeFake();
                                                            }),
                                                        (this.fakeHandler =
                                                            this.container.addEventListener(
                                                                "click",
                                                                this
                                                                    .fakeHandlerCallback
                                                            ) || !0),
                                                        (this.fakeElem =
                                                            document.createElement(
                                                                "textarea"
                                                            )),
                                                        (this.fakeElem.style.fontSize =
                                                            "12pt"),
                                                        (this.fakeElem.style.border =
                                                            "0"),
                                                        (this.fakeElem.style.padding =
                                                            "0"),
                                                        (this.fakeElem.style.margin =
                                                            "0"),
                                                        (this.fakeElem.style.position =
                                                            "absolute"),
                                                        (this.fakeElem.style[
                                                            e ? "right" : "left"
                                                        ] = "-9999px");
                                                    var n =
                                                        window.pageYOffset ||
                                                        document.documentElement
                                                            .scrollTop;
                                                    (this.fakeElem.style.top =
                                                        n + "px"),
                                                        this.fakeElem.setAttribute(
                                                            "readonly",
                                                            ""
                                                        ),
                                                        (this.fakeElem.value =
                                                            this.text),
                                                        this.container.appendChild(
                                                            this.fakeElem
                                                        ),
                                                        (this.selectedText = (0,
                                                        s.default)(
                                                            this.fakeElem
                                                        )),
                                                        this.copyText();
                                                },
                                            },
                                            {
                                                key: "removeFake",
                                                value: function () {
                                                    this.fakeHandler &&
                                                        (this.container.removeEventListener(
                                                            "click",
                                                            this
                                                                .fakeHandlerCallback
                                                        ),
                                                        (this.fakeHandler =
                                                            null),
                                                        (this.fakeHandlerCallback =
                                                            null)),
                                                        this.fakeElem &&
                                                            (this.container.removeChild(
                                                                this.fakeElem
                                                            ),
                                                            (this.fakeElem =
                                                                null));
                                                },
                                            },
                                            {
                                                key: "selectTarget",
                                                value: function () {
                                                    (this.selectedText = (0,
                                                    s.default)(this.target)),
                                                        this.copyText();
                                                },
                                            },
                                            {
                                                key: "copyText",
                                                value: function () {
                                                    var t = void 0;
                                                    try {
                                                        t =
                                                            document.execCommand(
                                                                this.action
                                                            );
                                                    } catch (e) {
                                                        t = !1;
                                                    }
                                                    this.handleResult(t);
                                                },
                                            },
                                            {
                                                key: "handleResult",
                                                value: function (t) {
                                                    this.emitter.emit(
                                                        t ? "success" : "error",
                                                        {
                                                            action: this.action,
                                                            text: this
                                                                .selectedText,
                                                            trigger:
                                                                this.trigger,
                                                            clearSelection:
                                                                this.clearSelection.bind(
                                                                    this
                                                                ),
                                                        }
                                                    );
                                                },
                                            },
                                            {
                                                key: "clearSelection",
                                                value: function () {
                                                    this.trigger &&
                                                        this.trigger.focus(),
                                                        window
                                                            .getSelection()
                                                            .removeAllRanges();
                                                },
                                            },
                                            {
                                                key: "destroy",
                                                value: function () {
                                                    this.removeFake();
                                                },
                                            },
                                            {
                                                key: "action",
                                                set: function () {
                                                    var t =
                                                        arguments.length > 0 &&
                                                        void 0 !== arguments[0]
                                                            ? arguments[0]
                                                            : "copy";
                                                    if (
                                                        ((this._action = t),
                                                        "copy" !==
                                                            this._action &&
                                                            "cut" !==
                                                                this._action)
                                                    )
                                                        throw new Error(
                                                            'Invalid "action" value, use either "copy" or "cut"'
                                                        );
                                                },
                                                get: function () {
                                                    return this._action;
                                                },
                                            },
                                            {
                                                key: "target",
                                                set: function (t) {
                                                    if (void 0 !== t) {
                                                        if (
                                                            !t ||
                                                            "object" !==
                                                                (void 0 === t
                                                                    ? "undefined"
                                                                    : o(t)) ||
                                                            1 !== t.nodeType
                                                        )
                                                            throw new Error(
                                                                'Invalid "target" value, use a valid Element'
                                                            );
                                                        if (
                                                            "copy" ===
                                                                this.action &&
                                                            t.hasAttribute(
                                                                "disabled"
                                                            )
                                                        )
                                                            throw new Error(
                                                                'Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute'
                                                            );
                                                        if (
                                                            "cut" ===
                                                                this.action &&
                                                            (t.hasAttribute(
                                                                "readonly"
                                                            ) ||
                                                                t.hasAttribute(
                                                                    "disabled"
                                                                ))
                                                        )
                                                            throw new Error(
                                                                'Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes'
                                                            );
                                                        this._target = t;
                                                    }
                                                },
                                                get: function () {
                                                    return this._target;
                                                },
                                            },
                                        ]),
                                        t
                                    );
                                })();
                            t.exports = a;
                        }),
                        void 0 !==
                            (o = "function" == typeof i ? i.apply(e, s) : i) &&
                            (t.exports = o);
                },
                function (t, e, n) {
                    var i = n(6),
                        s = n(5);
                    t.exports = function (t, e, n) {
                        if (!t && !e && !n)
                            throw new Error("Missing required arguments");
                        if (!i.string(e))
                            throw new TypeError(
                                "Second argument must be a String"
                            );
                        if (!i.fn(n))
                            throw new TypeError(
                                "Third argument must be a Function"
                            );
                        if (i.node(t))
                            return (function (t, e, n) {
                                return (
                                    t.addEventListener(e, n),
                                    {
                                        destroy: function () {
                                            t.removeEventListener(e, n);
                                        },
                                    }
                                );
                            })(t, e, n);
                        if (i.nodeList(t))
                            return (function (t, e, n) {
                                return (
                                    Array.prototype.forEach.call(
                                        t,
                                        function (t) {
                                            t.addEventListener(e, n);
                                        }
                                    ),
                                    {
                                        destroy: function () {
                                            Array.prototype.forEach.call(
                                                t,
                                                function (t) {
                                                    t.removeEventListener(e, n);
                                                }
                                            );
                                        },
                                    }
                                );
                            })(t, e, n);
                        if (i.string(t))
                            return (function (t, e, n) {
                                return s(document.body, t, e, n);
                            })(t, e, n);
                        throw new TypeError(
                            "First argument must be a String, HTMLElement, HTMLCollection, or NodeList"
                        );
                    };
                },
                function (t, e) {
                    function n() {}
                    (n.prototype = {
                        on: function (t, e, n) {
                            var i = this.e || (this.e = {});
                            return (
                                (i[t] || (i[t] = [])).push({ fn: e, ctx: n }),
                                this
                            );
                        },
                        once: function (t, e, n) {
                            function i() {
                                s.off(t, i), e.apply(n, arguments);
                            }
                            var s = this;
                            return (i._ = e), this.on(t, i, n);
                        },
                        emit: function (t) {
                            for (
                                var e = [].slice.call(arguments, 1),
                                    n = (
                                        (this.e || (this.e = {}))[t] || []
                                    ).slice(),
                                    i = 0,
                                    s = n.length;
                                i < s;
                                i++
                            )
                                n[i].fn.apply(n[i].ctx, e);
                            return this;
                        },
                        off: function (t, e) {
                            var n = this.e || (this.e = {}),
                                i = n[t],
                                s = [];
                            if (i && e)
                                for (var o = 0, r = i.length; o < r; o++)
                                    i[o].fn !== e &&
                                        i[o].fn._ !== e &&
                                        s.push(i[o]);
                            return s.length ? (n[t] = s) : delete n[t], this;
                        },
                    }),
                        (t.exports = n);
                },
                function (t, e, n) {
                    var i, s, o;
                    (s = [t, n(0), n(2), n(1)]),
                        (i = function (t, e, n, i) {
                            function s(t) {
                                return t && t.__esModule ? t : { default: t };
                            }
                            function o(t, e) {
                                if (!(t instanceof e))
                                    throw new TypeError(
                                        "Cannot call a class as a function"
                                    );
                            }
                            function r(t, e) {
                                if (!t)
                                    throw new ReferenceError(
                                        "this hasn't been initialised - super() hasn't been called"
                                    );
                                return !e ||
                                    ("object" != typeof e &&
                                        "function" != typeof e)
                                    ? t
                                    : e;
                            }
                            function a(t, e) {
                                if ("function" != typeof e && null !== e)
                                    throw new TypeError(
                                        "Super expression must either be null or a function, not " +
                                            typeof e
                                    );
                                (t.prototype = Object.create(e && e.prototype, {
                                    constructor: {
                                        value: t,
                                        enumerable: !1,
                                        writable: !0,
                                        configurable: !0,
                                    },
                                })),
                                    e &&
                                        (Object.setPrototypeOf
                                            ? Object.setPrototypeOf(t, e)
                                            : (t.__proto__ = e));
                            }
                            function l(t, e) {
                                var n = "data-clipboard-" + t;
                                if (e.hasAttribute(n)) return e.getAttribute(n);
                            }
                            var c = s(e),
                                d = s(n),
                                u = s(i),
                                h =
                                    "function" == typeof Symbol &&
                                    "symbol" == typeof Symbol.iterator
                                        ? function (t) {
                                              return typeof t;
                                          }
                                        : function (t) {
                                              return t &&
                                                  "function" == typeof Symbol &&
                                                  t.constructor === Symbol &&
                                                  t !== Symbol.prototype
                                                  ? "symbol"
                                                  : typeof t;
                                          },
                                p = (function () {
                                    function t(t, e) {
                                        for (var n = 0; n < e.length; n++) {
                                            var i = e[n];
                                            (i.enumerable = i.enumerable || !1),
                                                (i.configurable = !0),
                                                "value" in i &&
                                                    (i.writable = !0),
                                                Object.defineProperty(
                                                    t,
                                                    i.key,
                                                    i
                                                );
                                        }
                                    }
                                    return function (e, n, i) {
                                        return (
                                            n && t(e.prototype, n),
                                            i && t(e, i),
                                            e
                                        );
                                    };
                                })(),
                                f = (function (t) {
                                    function e(t, n) {
                                        o(this, e);
                                        var i = r(
                                            this,
                                            (
                                                e.__proto__ ||
                                                Object.getPrototypeOf(e)
                                            ).call(this)
                                        );
                                        return (
                                            i.resolveOptions(n),
                                            i.listenClick(t),
                                            i
                                        );
                                    }
                                    return (
                                        a(e, t),
                                        p(
                                            e,
                                            [
                                                {
                                                    key: "resolveOptions",
                                                    value: function () {
                                                        var t =
                                                            arguments.length >
                                                                0 &&
                                                            void 0 !==
                                                                arguments[0]
                                                                ? arguments[0]
                                                                : {};
                                                        (this.action =
                                                            "function" ==
                                                            typeof t.action
                                                                ? t.action
                                                                : this
                                                                      .defaultAction),
                                                            (this.target =
                                                                "function" ==
                                                                typeof t.target
                                                                    ? t.target
                                                                    : this
                                                                          .defaultTarget),
                                                            (this.text =
                                                                "function" ==
                                                                typeof t.text
                                                                    ? t.text
                                                                    : this
                                                                          .defaultText),
                                                            (this.container =
                                                                "object" ===
                                                                h(t.container)
                                                                    ? t.container
                                                                    : document.body);
                                                    },
                                                },
                                                {
                                                    key: "listenClick",
                                                    value: function (t) {
                                                        var e = this;
                                                        this.listener = (0,
                                                        u.default)(
                                                            t,
                                                            "click",
                                                            function (t) {
                                                                return e.onClick(
                                                                    t
                                                                );
                                                            }
                                                        );
                                                    },
                                                },
                                                {
                                                    key: "onClick",
                                                    value: function (t) {
                                                        var e =
                                                            t.delegateTarget ||
                                                            t.currentTarget;
                                                        this.clipboardAction &&
                                                            (this.clipboardAction =
                                                                null),
                                                            (this.clipboardAction =
                                                                new c.default({
                                                                    action: this.action(
                                                                        e
                                                                    ),
                                                                    target: this.target(
                                                                        e
                                                                    ),
                                                                    text: this.text(
                                                                        e
                                                                    ),
                                                                    container:
                                                                        this
                                                                            .container,
                                                                    trigger: e,
                                                                    emitter:
                                                                        this,
                                                                }));
                                                    },
                                                },
                                                {
                                                    key: "defaultAction",
                                                    value: function (t) {
                                                        return l("action", t);
                                                    },
                                                },
                                                {
                                                    key: "defaultTarget",
                                                    value: function (t) {
                                                        var e = l("target", t);
                                                        if (e)
                                                            return document.querySelector(
                                                                e
                                                            );
                                                    },
                                                },
                                                {
                                                    key: "defaultText",
                                                    value: function (t) {
                                                        return l("text", t);
                                                    },
                                                },
                                                {
                                                    key: "destroy",
                                                    value: function () {
                                                        this.listener.destroy(),
                                                            this
                                                                .clipboardAction &&
                                                                (this.clipboardAction.destroy(),
                                                                (this.clipboardAction =
                                                                    null));
                                                    },
                                                },
                                            ],
                                            [
                                                {
                                                    key: "isSupported",
                                                    value: function () {
                                                        var t =
                                                                arguments.length >
                                                                    0 &&
                                                                void 0 !==
                                                                    arguments[0]
                                                                    ? arguments[0]
                                                                    : [
                                                                          "copy",
                                                                          "cut",
                                                                      ],
                                                            e =
                                                                "string" ==
                                                                typeof t
                                                                    ? [t]
                                                                    : t,
                                                            n =
                                                                !!document.queryCommandSupported;
                                                        return (
                                                            e.forEach(function (
                                                                t
                                                            ) {
                                                                n =
                                                                    n &&
                                                                    !!document.queryCommandSupported(
                                                                        t
                                                                    );
                                                            }),
                                                            n
                                                        );
                                                    },
                                                },
                                            ]
                                        ),
                                        e
                                    );
                                })(d.default);
                            t.exports = f;
                        }),
                        void 0 !==
                            (o = "function" == typeof i ? i.apply(e, s) : i) &&
                            (t.exports = o);
                },
                function (t, e) {
                    var n = 9;
                    if (
                        "undefined" != typeof Element &&
                        !Element.prototype.matches
                    ) {
                        var i = Element.prototype;
                        i.matches =
                            i.matchesSelector ||
                            i.mozMatchesSelector ||
                            i.msMatchesSelector ||
                            i.oMatchesSelector ||
                            i.webkitMatchesSelector;
                    }
                    t.exports = function (t, e) {
                        for (; t && t.nodeType !== n; ) {
                            if ("function" == typeof t.matches && t.matches(e))
                                return t;
                            t = t.parentNode;
                        }
                    };
                },
                function (t, e, n) {
                    function i(t, e, n, i, o) {
                        var r = s.apply(this, arguments);
                        return (
                            t.addEventListener(n, r, o),
                            {
                                destroy: function () {
                                    t.removeEventListener(n, r, o);
                                },
                            }
                        );
                    }
                    function s(t, e, n, i) {
                        return function (n) {
                            (n.delegateTarget = o(n.target, e)),
                                n.delegateTarget && i.call(t, n);
                        };
                    }
                    var o = n(4);
                    t.exports = function (t, e, n, s, o) {
                        return "function" == typeof t.addEventListener
                            ? i.apply(null, arguments)
                            : "function" == typeof n
                            ? i.bind(null, document).apply(null, arguments)
                            : ("string" == typeof t &&
                                  (t = document.querySelectorAll(t)),
                              Array.prototype.map.call(t, function (t) {
                                  return i(t, e, n, s, o);
                              }));
                    };
                },
                function (t, e) {
                    (e.node = function (t) {
                        return (
                            void 0 !== t &&
                            t instanceof HTMLElement &&
                            1 === t.nodeType
                        );
                    }),
                        (e.nodeList = function (t) {
                            var n = Object.prototype.toString.call(t);
                            return (
                                void 0 !== t &&
                                ("[object NodeList]" === n ||
                                    "[object HTMLCollection]" === n) &&
                                "length" in t &&
                                (0 === t.length || e.node(t[0]))
                            );
                        }),
                        (e.string = function (t) {
                            return "string" == typeof t || t instanceof String;
                        }),
                        (e.fn = function (t) {
                            return (
                                "[object Function]" ===
                                Object.prototype.toString.call(t)
                            );
                        });
                },
                function (t, e) {
                    t.exports = function (t) {
                        var e;
                        if ("SELECT" === t.nodeName) t.focus(), (e = t.value);
                        else if (
                            "INPUT" === t.nodeName ||
                            "TEXTAREA" === t.nodeName
                        ) {
                            var n = t.hasAttribute("readonly");
                            n || t.setAttribute("readonly", ""),
                                t.select(),
                                t.setSelectionRange(0, t.value.length),
                                n || t.removeAttribute("readonly"),
                                (e = t.value);
                        } else {
                            t.hasAttribute("contenteditable") && t.focus();
                            var i = window.getSelection(),
                                s = document.createRange();
                            s.selectNodeContents(t),
                                i.removeAllRanges(),
                                i.addRange(s),
                                (e = i.toString());
                        }
                        return e;
                    };
                },
            ]);
        }),
        "object" == typeof exports && "object" == typeof module
            ? (module.exports = t())
            : "function" == typeof define && define.amd
            ? define([], t)
            : "object" == typeof exports
            ? (exports.ClipboardJS = t())
            : (window.ClipboardJS = t()),
        (function (t) {
            var e = {};
            function n(i) {
                var s;
                return (
                    e[i] ||
                    ((s = e[i] = { i: i, l: !1, exports: {} }),
                    t[i].call(s.exports, s, s.exports, n),
                    (s.l = !0),
                    s)
                ).exports;
            }
            (n.m = t),
                (n.c = e),
                (n.d = function (t, e, i) {
                    n.o(t, e) ||
                        Object.defineProperty(t, e, { enumerable: !0, get: i });
                }),
                (n.r = function (t) {
                    "undefined" != typeof Symbol &&
                        Symbol.toStringTag &&
                        Object.defineProperty(t, Symbol.toStringTag, {
                            value: "Module",
                        }),
                        Object.defineProperty(t, "__esModule", { value: !0 });
                }),
                (n.t = function (t, e) {
                    if ((1 & e && (t = n(t)), 8 & e)) return t;
                    if (4 & e && "object" == typeof t && t && t.__esModule)
                        return t;
                    var i = Object.create(null);
                    if (
                        (n.r(i),
                        Object.defineProperty(i, "default", {
                            enumerable: !0,
                            value: t,
                        }),
                        2 & e && "string" != typeof t)
                    )
                        for (var s in t)
                            n.d(
                                i,
                                s,
                                function (e) {
                                    return t[e];
                                }.bind(null, s)
                            );
                    return i;
                }),
                (n.n = function (t) {
                    var e =
                        t && t.__esModule
                            ? function () {
                                  return t.default;
                              }
                            : function () {
                                  return t;
                              };
                    return n.d(e, "a", e), e;
                }),
                (n.o = function (t, e) {
                    return Object.prototype.hasOwnProperty.call(t, e);
                }),
                (n.p = ""),
                n((n.s = 68));
        })([
            function (t, e) {
                t.exports = function (t) {
                    try {
                        return !!t();
                    } catch (e) {
                        return !0;
                    }
                };
            },
            function (t, e, n) {
                n = n(21);
                var i = (s = Function.prototype).call,
                    s = n && s.bind.bind(i, i);
                t.exports = n
                    ? s
                    : function (t) {
                          return function () {
                              return i.apply(t, arguments);
                          };
                      };
            },
            function (t, e, n) {
                var i = (n = n(39)).all;
                t.exports = n.IS_HTMLDDA
                    ? function (t) {
                          return "function" == typeof t || t === i;
                      }
                    : function (t) {
                          return "function" == typeof t;
                      };
            },
            function (t, e, n) {
                (function (e) {
                    function n(t) {
                        return t && t.Math == Math && t;
                    }
                    t.exports =
                        n("object" == typeof globalThis && globalThis) ||
                        n("object" == typeof window && window) ||
                        n("object" == typeof self && self) ||
                        n("object" == typeof e && e) ||
                        (function () {
                            return this;
                        })() ||
                        Function("return this")();
                }).call(this, n(36));
            },
            function (t, e, n) {
                (n = n(0)),
                    (t.exports = !n(function () {
                        return (
                            7 !=
                            Object.defineProperty({}, 1, {
                                get: function () {
                                    return 7;
                                },
                            })[1]
                        );
                    }));
            },
            function (t, e, n) {
                var i = n(1),
                    s = n(29),
                    o = i({}.hasOwnProperty);
                t.exports =
                    Object.hasOwn ||
                    function (t, e) {
                        return o(s(t), e);
                    };
            },
            function (t, e, n) {
                var i = n(3),
                    s = n(26),
                    o = n(5),
                    r = n(47),
                    a = n(42),
                    l = n(41),
                    c = s("wks"),
                    d = i.Symbol,
                    u = d && d.for,
                    h = l ? d : (d && d.withoutSetter) || r;
                t.exports = function (t) {
                    var e;
                    return (
                        (o(c, t) && (a || "string" == typeof c[t])) ||
                            ((e = "Symbol." + t),
                            a && o(d, t)
                                ? (c[t] = d[t])
                                : (c[t] = (l && u ? u : h)(e))),
                        c[t]
                    );
                };
            },
            function (t, e, n) {
                var i = n(9),
                    s = String,
                    o = TypeError;
                t.exports = function (t) {
                    if (i(t)) return t;
                    throw o(s(t) + " is not an object");
                };
            },
            function (t, e, n) {
                n = n(21);
                var i = Function.prototype.call;
                t.exports = n
                    ? i.bind(i)
                    : function () {
                          return i.apply(i, arguments);
                      };
            },
            function (t, e, n) {
                var i = n(2),
                    s = (n = n(39)).all;
                t.exports = n.IS_HTMLDDA
                    ? function (t) {
                          return "object" == typeof t
                              ? null !== t
                              : i(t) || t === s;
                      }
                    : function (t) {
                          return "object" == typeof t ? null !== t : i(t);
                      };
            },
            function (t, e, n) {
                var i = n(4),
                    s = n(48),
                    o = n(50),
                    r = n(7),
                    a = n(24),
                    l = TypeError,
                    c = Object.defineProperty,
                    d = Object.getOwnPropertyDescriptor,
                    u = "enumerable",
                    h = "configurable",
                    p = "writable";
                e.f = i
                    ? o
                        ? function (t, e, n) {
                              var i;
                              return (
                                  r(t),
                                  (e = a(e)),
                                  r(n),
                                  "function" == typeof t &&
                                      "prototype" === e &&
                                      "value" in n &&
                                      p in n &&
                                      !n[p] &&
                                      (i = d(t, e)) &&
                                      i[p] &&
                                      ((t[e] = n.value),
                                      (n = {
                                          configurable: (h in n ? n : i)[h],
                                          enumerable: (u in n ? n : i)[u],
                                          writable: !1,
                                      })),
                                  c(t, e, n)
                              );
                          }
                        : c
                    : function (t, e, n) {
                          if ((r(t), (e = a(e)), r(n), s))
                              try {
                                  return c(t, e, n);
                              } catch (i) {}
                          if ("get" in n || "set" in n)
                              throw l("Accessors not supported");
                          return "value" in n && (t[e] = n.value), t;
                      };
            },
            function (t, e, n) {
                var i = n(83),
                    s = String;
                t.exports = function (t) {
                    if ("Symbol" === i(t))
                        throw TypeError(
                            "Cannot convert a Symbol value to a string"
                        );
                    return s(t);
                };
            },
            function (t, e, n) {
                var i = (n = n(1))({}.toString),
                    s = n("".slice);
                t.exports = function (t) {
                    return s(i(t), 8, -1);
                };
            },
            function (t, e, n) {
                var i = n(23),
                    s = TypeError;
                t.exports = function (t) {
                    if (i(t)) throw s("Can't call method on " + t);
                    return t;
                };
            },
            function (t, e, n) {
                var i = n(3),
                    s = n(2);
                t.exports = function (t, e) {
                    return arguments.length < 2
                        ? ((n = i[t]), s(n) ? n : void 0)
                        : i[t] && i[t][e];
                    var n;
                };
            },
            function (t, e, n) {
                var i = n(71),
                    s = n(13);
                t.exports = function (t) {
                    return i(s(t));
                };
            },
            function (t, e, n) {
                (n = n(14)), (t.exports = n("navigator", "userAgent") || "");
            },
            function (t, e, n) {
                var i = n(4),
                    s = n(10),
                    o = n(22);
                t.exports = i
                    ? function (t, e, n) {
                          return s.f(t, e, o(1, n));
                      }
                    : function (t, e, n) {
                          return (t[e] = n), t;
                      };
            },
            function (t, e, n) {
                var i = n(81);
                t.exports = function (t) {
                    return (t = +t) != t || 0 == t ? 0 : i(t);
                };
            },
            ,
            function (t, e, n) {
                var i = n(3),
                    s = n(38).f,
                    o = n(17),
                    r = n(30),
                    a = n(28),
                    l = n(78),
                    c = n(57);
                t.exports = function (t, e) {
                    var n,
                        d,
                        u,
                        h = t.target,
                        p = t.global,
                        f = t.stat,
                        g = p
                            ? i
                            : f
                            ? i[h] || a(h, {})
                            : (i[h] || {}).prototype;
                    if (g)
                        for (n in e) {
                            if (
                                ((d = e[n]),
                                (u = t.dontCallGetSet
                                    ? (u = s(g, n)) && u.value
                                    : g[n]),
                                !c(p ? n : h + (f ? "." : "#") + n, t.forced) &&
                                    void 0 !== u)
                            ) {
                                if (typeof d == typeof u) continue;
                                l(d, u);
                            }
                            (t.sham || (u && u.sham)) && o(d, "sham", !0),
                                r(g, n, d, t);
                        }
                };
            },
            function (t, e, n) {
                (n = n(0)),
                    (t.exports = !n(function () {
                        var t = function () {}.bind();
                        return (
                            "function" != typeof t ||
                            t.hasOwnProperty("prototype")
                        );
                    }));
            },
            function (t, e) {
                t.exports = function (t, e) {
                    return {
                        enumerable: !(1 & t),
                        configurable: !(2 & t),
                        writable: !(4 & t),
                        value: e,
                    };
                };
            },
            function (t, e) {
                t.exports = function (t) {
                    return null == t;
                };
            },
            function (t, e, n) {
                var i = n(72),
                    s = n(40);
                t.exports = function (t) {
                    return (t = i(t, "string")), s(t) ? t : t + "";
                };
            },
            function (t, e, n) {
                (n = n(1)), (t.exports = n({}.isPrototypeOf));
            },
            function (t, e, n) {
                var i = n(74),
                    s = n(27);
                (t.exports = function (t, e) {
                    return s[t] || (s[t] = void 0 !== e ? e : {});
                })("versions", []).push({
                    version: "3.26.1",
                    mode: i ? "pure" : "global",
                    copyright: "Â© 2014-2022 Denis Pushkarev (zloirock.ru)",
                    license:
                        "https://github.com/zloirock/core-js/blob/v3.26.1/LICENSE",
                    source: "https://github.com/zloirock/core-js",
                });
            },
            function (t, e, n) {
                var i = n(3),
                    s = ((n = n(28)), "__core-js_shared__");
                i = i[s] || n(s, {});
                t.exports = i;
            },
            function (t, e, n) {
                var i = n(3),
                    s = Object.defineProperty;
                t.exports = function (t, e) {
                    try {
                        s(i, t, { value: e, configurable: !0, writable: !0 });
                    } catch (n) {
                        i[t] = e;
                    }
                    return e;
                };
            },
            function (t, e, n) {
                var i = n(13),
                    s = Object;
                t.exports = function (t) {
                    return s(i(t));
                };
            },
            function (t, e, n) {
                var i = n(2),
                    s = n(10),
                    o = n(75),
                    r = n(28);
                t.exports = function (t, e, n, a) {
                    var l = (a = a || {}).enumerable,
                        c = void 0 !== a.name ? a.name : e;
                    if ((i(n) && o(n, c, a), a.global))
                        l ? (t[e] = n) : r(e, n);
                    else {
                        try {
                            a.unsafe ? t[e] && (l = !0) : delete t[e];
                        } catch (d) {}
                        l
                            ? (t[e] = n)
                            : s.f(t, e, {
                                  value: n,
                                  enumerable: !1,
                                  configurable: !a.nonConfigurable,
                                  writable: !a.nonWritable,
                              });
                    }
                    return t;
                };
            },
            function (t, e, n) {
                var i,
                    s,
                    o,
                    r,
                    a = n(77),
                    l = n(3),
                    c = n(9),
                    d = n(17),
                    u = n(5),
                    h = n(27),
                    p = n(52),
                    f = ((n = n(32)), "Object already initialized"),
                    g = l.TypeError,
                    m =
                        ((l = l.WeakMap),
                        a || h.state
                            ? (((o = h.state || (h.state = new l())).get =
                                  o.get),
                              (o.has = o.has),
                              (o.set = o.set),
                              (i = function (t, e) {
                                  if (o.has(t)) throw g(f);
                                  return (e.facade = t), o.set(t, e), e;
                              }),
                              (s = function (t) {
                                  return o.get(t) || {};
                              }),
                              function (t) {
                                  return o.has(t);
                              })
                            : ((n[(r = p("state"))] = !0),
                              (i = function (t, e) {
                                  if (u(t, r)) throw g(f);
                                  return (e.facade = t), d(t, r, e), e;
                              }),
                              (s = function (t) {
                                  return u(t, r) ? t[r] : {};
                              }),
                              function (t) {
                                  return u(t, r);
                              }));
                t.exports = {
                    set: i,
                    get: s,
                    has: m,
                    enforce: function (t) {
                        return m(t) ? s(t) : i(t, {});
                    },
                    getterFor: function (t) {
                        return function (e) {
                            if (c(e) && (e = s(e)).type === t) return e;
                            throw g(
                                "Incompatible receiver, " + t + " required"
                            );
                        };
                    },
                };
            },
            function (t, e) {
                t.exports = {};
            },
            function (t, e, n) {
                var i = n(56);
                t.exports = function (t) {
                    return i(t.length);
                };
            },
            function (t, e) {
                t.exports = [
                    "constructor",
                    "hasOwnProperty",
                    "isPrototypeOf",
                    "propertyIsEnumerable",
                    "toLocaleString",
                    "toString",
                    "valueOf",
                ];
            },
            function (t, e, n) {
                var i = n(8),
                    s = n(1),
                    o = n(11),
                    r = n(58),
                    a = n(59),
                    l = n(26),
                    c = n(85),
                    d = n(31).get,
                    u = n(60),
                    h =
                        ((n = n(61)),
                        l("native-string-replace", String.prototype.replace)),
                    p = RegExp.prototype.exec,
                    f = p,
                    g = s("".charAt),
                    m = s("".indexOf),
                    b = s("".replace),
                    _ = s("".slice),
                    v =
                        ((l = /b*/g),
                        i(p, (s = /a/), "a"),
                        i(p, l, "a"),
                        0 !== s.lastIndex || 0 !== l.lastIndex),
                    y = a.BROKEN_CARET,
                    w = void 0 !== /()??/.exec("")[1];
                (v || w || y || u || n) &&
                    (f = function (t) {
                        var e,
                            n,
                            s,
                            a,
                            l,
                            u,
                            C = this,
                            E = d(C);
                        t = o(t);
                        if ((S = E.raw))
                            return (
                                (S.lastIndex = C.lastIndex),
                                (k = i(f, S, t)),
                                (C.lastIndex = S.lastIndex),
                                k
                            );
                        var A = E.groups,
                            S = y && C.sticky,
                            k = i(r, C),
                            x = ((E = C.source), 0),
                            T = t;
                        if (
                            (S &&
                                ((k = b(k, "y", "")),
                                -1 === m(k, "g") && (k += "g"),
                                (T = _(t, C.lastIndex)),
                                0 < C.lastIndex &&
                                    (!C.multiline ||
                                        (C.multiline &&
                                            "\n" !== g(t, C.lastIndex - 1))) &&
                                    ((E = "(?: " + E + ")"),
                                    (T = " " + T),
                                    x++),
                                (e = new RegExp("^(?:" + E + ")", k))),
                            w && (e = new RegExp("^" + E + "$(?!\\s)", k)),
                            v && (n = C.lastIndex),
                            (s = i(p, S ? e : C, T)),
                            S
                                ? s
                                    ? ((s.input = _(s.input, x)),
                                      (s[0] = _(s[0], x)),
                                      (s.index = C.lastIndex),
                                      (C.lastIndex += s[0].length))
                                    : (C.lastIndex = 0)
                                : v &&
                                  s &&
                                  (C.lastIndex = C.global
                                      ? s.index + s[0].length
                                      : n),
                            w &&
                                s &&
                                1 < s.length &&
                                i(h, s[0], e, function () {
                                    for (a = 1; a < arguments.length - 2; a++)
                                        void 0 === arguments[a] &&
                                            (s[a] = void 0);
                                }),
                            s && A)
                        )
                            for (
                                s.groups = l = c(null), a = 0;
                                a < A.length;
                                a++
                            )
                                l[(u = A[a])[0]] = s[u[1]];
                        return s;
                    }),
                    (t.exports = f);
            },
            function (t, e) {
                var n = (function () {
                    return this;
                })();
                try {
                    n = n || new Function("return this")();
                } catch (i) {
                    "object" == typeof window && (n = window);
                }
                t.exports = n;
            },
            function (t, e, n) {
                var i = n(20);
                n = n(35);
                i(
                    { target: "RegExp", proto: !0, forced: /./.exec !== n },
                    { exec: n }
                );
            },
            function (t, e, n) {
                var i = n(4),
                    s = n(8),
                    o = n(70),
                    r = n(22),
                    a = n(15),
                    l = n(24),
                    c = n(5),
                    d = n(48),
                    u = Object.getOwnPropertyDescriptor;
                e.f = i
                    ? u
                    : function (t, e) {
                          if (((t = a(t)), (e = l(e)), d))
                              try {
                                  return u(t, e);
                              } catch (n) {}
                          if (c(t, e)) return r(!s(o.f, t, e), t[e]);
                      };
            },
            function (t, e) {
                var n = "object" == typeof document && document.all;
                t.exports = {
                    all: n,
                    IS_HTMLDDA: void 0 === n && void 0 !== n,
                };
            },
            function (t, e, n) {
                var i = n(14),
                    s = n(2),
                    o = n(25),
                    r = ((n = n(41)), Object);
                t.exports = n
                    ? function (t) {
                          return "symbol" == typeof t;
                      }
                    : function (t) {
                          var e = i("Symbol");
                          return s(e) && o(e.prototype, r(t));
                      };
            },
            function (t, e, n) {
                (n = n(42)),
                    (t.exports =
                        n &&
                        !Symbol.sham &&
                        "symbol" == typeof Symbol.iterator);
            },
            function (t, e, n) {
                var i = n(43);
                n = n(0);
                t.exports =
                    !!Object.getOwnPropertySymbols &&
                    !n(function () {
                        var t = Symbol();
                        return (
                            !String(t) ||
                            !(Object(t) instanceof Symbol) ||
                            (!Symbol.sham && i && i < 41)
                        );
                    });
            },
            function (t, e, n) {
                var i,
                    s,
                    o = n(3),
                    r = ((n = n(16)), o.process);
                o = o.Deno;
                !(s = (o = (r = (r && r.versions) || (o && o.version)) && r.v8)
                    ? 0 < (i = o.split("."))[0] && i[0] < 4
                        ? 1
                        : +(i[0] + i[1])
                    : s) &&
                    n &&
                    (!(i = n.match(/Edge\/(\d+)/)) || 74 <= i[1]) &&
                    (i = n.match(/Chrome\/(\d+)/)) &&
                    (s = +i[1]),
                    (t.exports = s);
            },
            function (t, e, n) {
                var i = n(45),
                    s = n(23);
                t.exports = function (t, e) {
                    return (t = t[e]), s(t) ? void 0 : i(t);
                };
            },
            function (t, e, n) {
                var i = n(2),
                    s = n(46),
                    o = TypeError;
                t.exports = function (t) {
                    if (i(t)) return t;
                    throw o(s(t) + " is not a function");
                };
            },
            function (t, e) {
                var n = String;
                t.exports = function (t) {
                    try {
                        return n(t);
                    } catch (e) {
                        return "Object";
                    }
                };
            },
            function (t, e, n) {
                n = n(1);
                var i = 0,
                    s = Math.random(),
                    o = n((1).toString);
                t.exports = function (t) {
                    return (
                        "Symbol(" +
                        (void 0 === t ? "" : t) +
                        ")_" +
                        o(++i + s, 36)
                    );
                };
            },
            function (t, e, n) {
                var i = n(4),
                    s = n(0),
                    o = n(49);
                t.exports =
                    !i &&
                    !s(function () {
                        return (
                            7 !=
                            Object.defineProperty(o("div"), "a", {
                                get: function () {
                                    return 7;
                                },
                            }).a
                        );
                    });
            },
            function (t, e, n) {
                var i = n(3),
                    s = ((n = n(9)), i.document),
                    o = n(s) && n(s.createElement);
                t.exports = function (t) {
                    return o ? s.createElement(t) : {};
                };
            },
            function (t, e, n) {
                var i = n(4);
                n = n(0);
                t.exports =
                    i &&
                    n(function () {
                        return (
                            42 !=
                            Object.defineProperty(function () {}, "prototype", {
                                value: 42,
                                writable: !1,
                            }).prototype
                        );
                    });
            },
            function (t, e, n) {
                var i = n(4),
                    s = ((n = n(5)), Function.prototype),
                    o = i && Object.getOwnPropertyDescriptor,
                    r =
                        (n = n(s, "name")) &&
                        "something" === function () {}.name;
                i = n && (!i || o(s, "name").configurable);
                t.exports = { EXISTS: n, PROPER: r, CONFIGURABLE: i };
            },
            function (t, e, n) {
                var i = n(26),
                    s = n(47),
                    o = i("keys");
                t.exports = function (t) {
                    return o[t] || (o[t] = s(t));
                };
            },
            function (t, e, n) {
                var i = n(54),
                    s = n(34).concat("length", "prototype");
                e.f =
                    Object.getOwnPropertyNames ||
                    function (t) {
                        return i(t, s);
                    };
            },
            function (t, e, n) {
                var i = n(1),
                    s = n(5),
                    o = n(15),
                    r = n(80).indexOf,
                    a = n(32),
                    l = i([].push);
                t.exports = function (t, e) {
                    var n,
                        i = o(t),
                        c = 0,
                        d = [];
                    for (n in i) !s(a, n) && s(i, n) && l(d, n);
                    for (; e.length > c; )
                        !s(i, (n = e[c++])) || ~r(d, n) || l(d, n);
                    return d;
                };
            },
            function (t, e, n) {
                var i = n(18),
                    s = Math.max,
                    o = Math.min;
                t.exports = function (t, e) {
                    return (t = i(t)) < 0 ? s(t + e, 0) : o(t, e);
                };
            },
            function (t, e, n) {
                var i = n(18),
                    s = Math.min;
                t.exports = function (t) {
                    return 0 < t ? s(i(t), 9007199254740991) : 0;
                };
            },
            function (t, e, n) {
                function i(t, e) {
                    return (
                        (t = l[a(t)]) == d || (t != c && (o(e) ? s(e) : !!e))
                    );
                }
                var s = n(0),
                    o = n(2),
                    r = /#|\.prototype\./,
                    a = (i.normalize = function (t) {
                        return String(t).replace(r, ".").toLowerCase();
                    }),
                    l = (i.data = {}),
                    c = (i.NATIVE = "N"),
                    d = (i.POLYFILL = "P");
                t.exports = i;
            },
            function (t, e, n) {
                var i = n(7);
                t.exports = function () {
                    var t = i(this),
                        e = "";
                    return (
                        t.hasIndices && (e += "d"),
                        t.global && (e += "g"),
                        t.ignoreCase && (e += "i"),
                        t.multiline && (e += "m"),
                        t.dotAll && (e += "s"),
                        t.unicode && (e += "u"),
                        t.unicodeSets && (e += "v"),
                        t.sticky && (e += "y"),
                        e
                    );
                };
            },
            function (t, e, n) {
                var i = n(0),
                    s = n(3).RegExp,
                    o =
                        (n = i(function () {
                            var t = s("a", "y");
                            return (t.lastIndex = 2), null != t.exec("abcd");
                        })) ||
                        i(function () {
                            return !s("a", "y").sticky;
                        });
                i =
                    n ||
                    i(function () {
                        var t = s("^r", "gy");
                        return (t.lastIndex = 2), null != t.exec("str");
                    });
                t.exports = {
                    BROKEN_CARET: i,
                    MISSED_STICKY: o,
                    UNSUPPORTED_Y: n,
                };
            },
            function (t, e, n) {
                var i = n(0),
                    s = n(3).RegExp;
                t.exports = i(function () {
                    var t = s(".", "s");
                    return !(t.dotAll && t.exec("\n") && "s" === t.flags);
                });
            },
            function (t, e, n) {
                var i = n(0),
                    s = n(3).RegExp;
                t.exports = i(function () {
                    var t = s("(?<a>b)", "g");
                    return (
                        "b" !== t.exec("b").groups.a ||
                        "bc" !== "b".replace(t, "$<a>c")
                    );
                });
            },
            function (t, e) {
                t.exports =
                    "\t\n\v\f\r Â áš€â€€â€â€‚â€ƒâ€„â€…â€†â€‡â€ˆâ€‰â€Šâ€¯âŸã€€\u2028\u2029\ufeff";
            },
            ,
            ,
            ,
            ,
            ,
            function (t, e, n) {
                n.r(e),
                    function (t, e) {
                        n(37), n(89), n(97), n(105), n(108);
                        var i,
                            s,
                            o,
                            r,
                            a,
                            l,
                            c,
                            d,
                            u,
                            h,
                            p,
                            f,
                            g,
                            m,
                            b,
                            _,
                            v,
                            y,
                            w,
                            C,
                            E,
                            A,
                            S,
                            k,
                            x,
                            T,
                            O,
                            L,
                            M,
                            D,
                            N,
                            $,
                            R,
                            P,
                            I =
                                "undefined" != typeof window
                                    ? window
                                    : "undefined" != typeof WorkerGlobalScope &&
                                      self instanceof WorkerGlobalScope
                                    ? self
                                    : {},
                            j =
                                ((i = /\blang(?:uage)?-([\w-]+)\b/i),
                                (s = 0),
                                (o = I.Prism =
                                    {
                                        manual: I.Prism && I.Prism.manual,
                                        disableWorkerMessageHandler:
                                            I.Prism &&
                                            I.Prism.disableWorkerMessageHandler,
                                        util: {
                                            encode: function (t) {
                                                return t instanceof r
                                                    ? new r(
                                                          t.type,
                                                          o.util.encode(
                                                              t.content
                                                          ),
                                                          t.alias
                                                      )
                                                    : "Array" === o.util.type(t)
                                                    ? t.map(o.util.encode)
                                                    : t
                                                          .replace(
                                                              /&/g,
                                                              "&amp;"
                                                          )
                                                          .replace(/</g, "&lt;")
                                                          .replace(
                                                              /\u00a0/g,
                                                              " "
                                                          );
                                            },
                                            type: function (t) {
                                                return Object.prototype.toString
                                                    .call(t)
                                                    .match(
                                                        /\[object (\w+)\]/
                                                    )[1];
                                            },
                                            objId: function (t) {
                                                return (
                                                    t.__id ||
                                                        Object.defineProperty(
                                                            t,
                                                            "__id",
                                                            { value: ++s }
                                                        ),
                                                    t.__id
                                                );
                                            },
                                            clone: function (t, e) {
                                                var n = o.util.type(t);
                                                switch (((e = e || {}), n)) {
                                                    case "Object":
                                                        if (e[o.util.objId(t)])
                                                            return e[
                                                                o.util.objId(t)
                                                            ];
                                                        var i,
                                                            s = {};
                                                        for (i in ((e[
                                                            o.util.objId(t)
                                                        ] = s),
                                                        t))
                                                            t.hasOwnProperty(
                                                                i
                                                            ) &&
                                                                (s[i] =
                                                                    o.util.clone(
                                                                        t[i],
                                                                        e
                                                                    ));
                                                        return s;
                                                    case "Array":
                                                        return e[
                                                            o.util.objId(t)
                                                        ]
                                                            ? e[o.util.objId(t)]
                                                            : ((s = []),
                                                              (e[
                                                                  o.util.objId(
                                                                      t
                                                                  )
                                                              ] = s),
                                                              t.forEach(
                                                                  function (
                                                                      t,
                                                                      n
                                                                  ) {
                                                                      s[n] =
                                                                          o.util.clone(
                                                                              t,
                                                                              e
                                                                          );
                                                                  }
                                                              ),
                                                              s);
                                                }
                                                return t;
                                            },
                                        },
                                        languages: {
                                            extend: function (t, e) {
                                                var n,
                                                    i = o.util.clone(
                                                        o.languages[t]
                                                    );
                                                for (n in e) i[n] = e[n];
                                                return i;
                                            },
                                            insertBefore: function (
                                                t,
                                                e,
                                                n,
                                                i
                                            ) {
                                                var s = (i = i || o.languages)[
                                                    t
                                                ];
                                                if (2 == arguments.length) {
                                                    for (var r in (n = e))
                                                        n.hasOwnProperty(r) &&
                                                            (s[r] = n[r]);
                                                    return s;
                                                }
                                                var a,
                                                    l = {};
                                                for (a in s)
                                                    if (s.hasOwnProperty(a)) {
                                                        if (a == e)
                                                            for (var r in n)
                                                                n.hasOwnProperty(
                                                                    r
                                                                ) &&
                                                                    (l[r] =
                                                                        n[r]);
                                                        l[a] = s[a];
                                                    }
                                                return (
                                                    o.languages.DFS(
                                                        o.languages,
                                                        function (e, n) {
                                                            n === i[t] &&
                                                                e != t &&
                                                                (this[e] = l);
                                                        }
                                                    ),
                                                    (i[t] = l)
                                                );
                                            },
                                            DFS: function (t, e, n, i) {
                                                for (var s in ((i = i || {}),
                                                t))
                                                    t.hasOwnProperty(s) &&
                                                        (e.call(
                                                            t,
                                                            s,
                                                            t[s],
                                                            n || s
                                                        ),
                                                        "Object" !==
                                                            o.util.type(t[s]) ||
                                                        i[o.util.objId(t[s])]
                                                            ? "Array" !==
                                                                  o.util.type(
                                                                      t[s]
                                                                  ) ||
                                                              i[
                                                                  o.util.objId(
                                                                      t[s]
                                                                  )
                                                              ] ||
                                                              ((i[
                                                                  o.util.objId(
                                                                      t[s]
                                                                  )
                                                              ] = !0),
                                                              o.languages.DFS(
                                                                  t[s],
                                                                  e,
                                                                  s,
                                                                  i
                                                              ))
                                                            : ((i[
                                                                  o.util.objId(
                                                                      t[s]
                                                                  )
                                                              ] = !0),
                                                              o.languages.DFS(
                                                                  t[s],
                                                                  e,
                                                                  null,
                                                                  i
                                                              )));
                                            },
                                        },
                                        plugins: {},
                                        highlightAll: function (t, e) {
                                            o.highlightAllUnder(document, t, e);
                                        },
                                        highlightAllUnder: function (t, e, n) {
                                            for (
                                                var i,
                                                    s = {
                                                        callback: n,
                                                        selector:
                                                            'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code',
                                                    },
                                                    r =
                                                        (o.hooks.run(
                                                            "before-highlightall",
                                                            s
                                                        ),
                                                        s.elements ||
                                                            t.querySelectorAll(
                                                                s.selector
                                                            )),
                                                    a = 0;
                                                (i = r[a++]);

                                            )
                                                o.highlightElement(
                                                    i,
                                                    !0 === e,
                                                    s.callback
                                                );
                                        },
                                        highlightElement: function (t, e, n) {
                                            for (
                                                var s, r = t;
                                                r && !i.test(r.className);

                                            )
                                                r = r.parentNode;
                                            r &&
                                                ((a = (r.className.match(i) || [
                                                    ,
                                                    "",
                                                ])[1].toLowerCase()),
                                                (s = o.languages[a])),
                                                (t.className =
                                                    t.className
                                                        .replace(i, "")
                                                        .replace(/\s+/g, " ") +
                                                    " language-" +
                                                    a),
                                                t.parentNode &&
                                                    ((r = t.parentNode),
                                                    /pre/i.test(r.nodeName)) &&
                                                    (r.className =
                                                        r.className
                                                            .replace(i, "")
                                                            .replace(
                                                                /\s+/g,
                                                                " "
                                                            ) +
                                                        " language-" +
                                                        a);
                                            var a,
                                                l = {
                                                    element: t,
                                                    language: a,
                                                    grammar: s,
                                                    code: t.textContent,
                                                };
                                            o.hooks.run(
                                                "before-sanity-check",
                                                l
                                            ),
                                                l.code && l.grammar
                                                    ? (o.hooks.run(
                                                          "before-highlight",
                                                          l
                                                      ),
                                                      e && I.Worker
                                                          ? (((a = new Worker(
                                                                o.filename
                                                            )).onmessage =
                                                                function (t) {
                                                                    (l.highlightedCode =
                                                                        t.data),
                                                                        o.hooks.run(
                                                                            "before-insert",
                                                                            l
                                                                        ),
                                                                        (l.element.innerHTML =
                                                                            l.highlightedCode),
                                                                        n &&
                                                                            n.call(
                                                                                l.element
                                                                            ),
                                                                        o.hooks.run(
                                                                            "after-highlight",
                                                                            l
                                                                        ),
                                                                        o.hooks.run(
                                                                            "complete",
                                                                            l
                                                                        );
                                                                }),
                                                            a.postMessage(
                                                                JSON.stringify({
                                                                    language:
                                                                        l.language,
                                                                    code: l.code,
                                                                    immediateClose:
                                                                        !0,
                                                                })
                                                            ))
                                                          : ((l.highlightedCode =
                                                                o.highlight(
                                                                    l.code,
                                                                    l.grammar,
                                                                    l.language
                                                                )),
                                                            o.hooks.run(
                                                                "before-insert",
                                                                l
                                                            ),
                                                            (l.element.innerHTML =
                                                                l.highlightedCode),
                                                            n && n.call(t),
                                                            o.hooks.run(
                                                                "after-highlight",
                                                                l
                                                            ),
                                                            o.hooks.run(
                                                                "complete",
                                                                l
                                                            )))
                                                    : (l.code &&
                                                          (o.hooks.run(
                                                              "before-highlight",
                                                              l
                                                          ),
                                                          (l.element.textContent =
                                                              l.code),
                                                          o.hooks.run(
                                                              "after-highlight",
                                                              l
                                                          )),
                                                      o.hooks.run(
                                                          "complete",
                                                          l
                                                      ));
                                        },
                                        highlight: function (t, e, n) {
                                            return (
                                                (t = {
                                                    code: t,
                                                    grammar: e,
                                                    language: n,
                                                }),
                                                o.hooks.run(
                                                    "before-tokenize",
                                                    t
                                                ),
                                                (t.tokens = o.tokenize(
                                                    t.code,
                                                    t.grammar
                                                )),
                                                o.hooks.run(
                                                    "after-tokenize",
                                                    t
                                                ),
                                                r.stringify(
                                                    o.util.encode(t.tokens),
                                                    t.language
                                                )
                                            );
                                        },
                                        matchGrammar: function (
                                            t,
                                            e,
                                            n,
                                            i,
                                            s,
                                            r,
                                            a
                                        ) {
                                            var l,
                                                c = o.Token;
                                            for (l in n)
                                                if (
                                                    n.hasOwnProperty(l) &&
                                                    n[l]
                                                ) {
                                                    if (l == a) return;
                                                    for (
                                                        var d = n[l],
                                                            u =
                                                                ((d =
                                                                    "Array" ===
                                                                    o.util.type(
                                                                        d
                                                                    )
                                                                        ? d
                                                                        : [d]),
                                                                0);
                                                        u < d.length;
                                                        ++u
                                                    ) {
                                                        var h,
                                                            p = (_ = d[u])
                                                                .inside,
                                                            f = !!_.lookbehind,
                                                            g = !!_.greedy,
                                                            m = 0,
                                                            b = _.alias;
                                                        g &&
                                                            !_.pattern.global &&
                                                            ((h = _.pattern
                                                                .toString()
                                                                .match(
                                                                    /[imuy]*$/
                                                                )[0]),
                                                            (_.pattern = RegExp(
                                                                _.pattern
                                                                    .source,
                                                                h + "g"
                                                            )));
                                                        for (
                                                            var _ =
                                                                    _.pattern ||
                                                                    _,
                                                                v = i,
                                                                y = s;
                                                            v < e.length;
                                                            y += e[v].length,
                                                                ++v
                                                        ) {
                                                            var w = e[v];
                                                            if (
                                                                e.length >
                                                                t.length
                                                            )
                                                                return;
                                                            if (
                                                                !(
                                                                    w instanceof
                                                                    c
                                                                )
                                                            ) {
                                                                if (
                                                                    g &&
                                                                    v !=
                                                                        e.length -
                                                                            1
                                                                ) {
                                                                    if (
                                                                        ((_.lastIndex =
                                                                            y),
                                                                        !(x =
                                                                            _.exec(
                                                                                t
                                                                            )))
                                                                    )
                                                                        break;
                                                                    for (
                                                                        var C =
                                                                                x.index +
                                                                                (f
                                                                                    ? x[1]
                                                                                          .length
                                                                                    : 0),
                                                                            E =
                                                                                x.index +
                                                                                x[0]
                                                                                    .length,
                                                                            A =
                                                                                v,
                                                                            S =
                                                                                y,
                                                                            k =
                                                                                e.length;
                                                                        A < k &&
                                                                        (S <
                                                                            E ||
                                                                            (!e[
                                                                                A
                                                                            ]
                                                                                .type &&
                                                                                !e[
                                                                                    A -
                                                                                        1
                                                                                ]
                                                                                    .greedy));
                                                                        ++A
                                                                    )
                                                                        (S +=
                                                                            e[A]
                                                                                .length) <=
                                                                            C &&
                                                                            (++v,
                                                                            (y =
                                                                                S));
                                                                    if (
                                                                        e[
                                                                            v
                                                                        ] instanceof
                                                                        c
                                                                    )
                                                                        continue;
                                                                    (T = A - v),
                                                                        (w =
                                                                            t.slice(
                                                                                y,
                                                                                S
                                                                            )),
                                                                        (x.index -=
                                                                            y);
                                                                } else {
                                                                    _.lastIndex = 0;
                                                                    var x =
                                                                            _.exec(
                                                                                w
                                                                            ),
                                                                        T = 1;
                                                                }
                                                                if (x) {
                                                                    f &&
                                                                        (m =
                                                                            x[1]
                                                                                ? x[1]
                                                                                      .length
                                                                                : 0);
                                                                    E =
                                                                        (C =
                                                                            x.index +
                                                                            m) +
                                                                        (x =
                                                                            x[0].slice(
                                                                                m
                                                                            ))
                                                                            .length;
                                                                    var O =
                                                                            w.slice(
                                                                                0,
                                                                                C
                                                                            ),
                                                                        L =
                                                                            ((w =
                                                                                w.slice(
                                                                                    E
                                                                                )),
                                                                            [
                                                                                v,
                                                                                T,
                                                                            ]);
                                                                    O =
                                                                        (O &&
                                                                            (++v,
                                                                            (y +=
                                                                                O.length),
                                                                            L.push(
                                                                                O
                                                                            )),
                                                                        new c(
                                                                            l,
                                                                            p
                                                                                ? o.tokenize(
                                                                                      x,
                                                                                      p
                                                                                  )
                                                                                : x,
                                                                            b,
                                                                            x,
                                                                            g
                                                                        ));
                                                                    if (
                                                                        (L.push(
                                                                            O
                                                                        ),
                                                                        w &&
                                                                            L.push(
                                                                                w
                                                                            ),
                                                                        Array.prototype.splice.apply(
                                                                            e,
                                                                            L
                                                                        ),
                                                                        1 !=
                                                                            T &&
                                                                            o.matchGrammar(
                                                                                t,
                                                                                e,
                                                                                n,
                                                                                v,
                                                                                y,
                                                                                !0,
                                                                                l
                                                                            ),
                                                                        r)
                                                                    )
                                                                        break;
                                                                } else if (r)
                                                                    break;
                                                            }
                                                        }
                                                    }
                                                }
                                        },
                                        tokenize: function (t, e, n) {
                                            var i = [t],
                                                s = e.rest;
                                            if (s) {
                                                for (var r in s) e[r] = s[r];
                                                delete e.rest;
                                            }
                                            return (
                                                o.matchGrammar(
                                                    t,
                                                    i,
                                                    e,
                                                    0,
                                                    0,
                                                    !1
                                                ),
                                                i
                                            );
                                        },
                                        hooks: {
                                            all: {},
                                            add: function (t, e) {
                                                var n = o.hooks.all;
                                                (n[t] = n[t] || []),
                                                    n[t].push(e);
                                            },
                                            run: function (t, e) {
                                                var n = o.hooks.all[t];
                                                if (n && n.length)
                                                    for (
                                                        var i, s = 0;
                                                        (i = n[s++]);

                                                    )
                                                        i(e);
                                            },
                                        },
                                    }),
                                ((r = o.Token =
                                    function (t, e, n, i, s) {
                                        (this.type = t),
                                            (this.content = e),
                                            (this.alias = n),
                                            (this.length =
                                                0 | (i || "").length),
                                            (this.greedy = !!s);
                                    }).stringify = function (t, e, n) {
                                    var i;
                                    return "string" == typeof t
                                        ? t
                                        : "Array" === o.util.type(t)
                                        ? t
                                              .map(function (n) {
                                                  return r.stringify(n, e, t);
                                              })
                                              .join("")
                                        : ((i = {
                                              type: t.type,
                                              content: r.stringify(
                                                  t.content,
                                                  e,
                                                  n
                                              ),
                                              tag: "span",
                                              classes: ["token", t.type],
                                              attributes: {},
                                              language: e,
                                              parent: n,
                                          }),
                                          t.alias &&
                                              ((n =
                                                  "Array" ===
                                                  o.util.type(t.alias)
                                                      ? t.alias
                                                      : [t.alias]),
                                              Array.prototype.push.apply(
                                                  i.classes,
                                                  n
                                              )),
                                          o.hooks.run("wrap", i),
                                          (n = Object.keys(i.attributes)
                                              .map(function (t) {
                                                  return (
                                                      t +
                                                      '="' +
                                                      (
                                                          i.attributes[t] || ""
                                                      ).replace(
                                                          /"/g,
                                                          "&quot;"
                                                      ) +
                                                      '"'
                                                  );
                                              })
                                              .join(" ")),
                                          "<" +
                                              i.tag +
                                              ' class="' +
                                              i.classes.join(" ") +
                                              '"' +
                                              (n ? " " + n : "") +
                                              ">" +
                                              i.content +
                                              "</" +
                                              i.tag +
                                              ">");
                                }),
                                I.document
                                    ? (l =
                                          document.currentScript ||
                                          [].slice
                                              .call(
                                                  document.getElementsByTagName(
                                                      "script"
                                                  )
                                              )
                                              .pop()) &&
                                      ((o.filename = l.src),
                                      o.manual ||
                                          l.hasAttribute("data-manual") ||
                                          ("loading" !== document.readyState
                                              ? window.requestAnimationFrame
                                                  ? window.requestAnimationFrame(
                                                        o.highlightAll
                                                    )
                                                  : window.setTimeout(
                                                        o.highlightAll,
                                                        16
                                                    )
                                              : document.addEventListener(
                                                    "DOMContentLoaded",
                                                    o.highlightAll
                                                )))
                                    : I.addEventListener &&
                                      !o.disableWorkerMessageHandler &&
                                      I.addEventListener(
                                          "message",
                                          function (t) {
                                              var e = (t = JSON.parse(t.data))
                                                      .language,
                                                  n = t.code;
                                              t = t.immediateClose;
                                              I.postMessage(
                                                  o.highlight(
                                                      n,
                                                      o.languages[e],
                                                      e
                                                  )
                                              ),
                                                  t && I.close();
                                          },
                                          !1
                                      ),
                                I.Prism);
                        function W(t, e) {
                            return (
                                (t = t
                                    .replace(/<S>/g, function () {
                                        return c;
                                    })
                                    .replace(/<BRACES>/g, function () {
                                        return d;
                                    })
                                    .replace(/<SPREAD>/g, function () {
                                        return u;
                                    })),
                                RegExp(t, e)
                            );
                        }
                        function B(t) {
                            for (var e = [], n = 0; n < t.length; n++) {
                                var i = t[n],
                                    s = !1;
                                "string" != typeof i &&
                                    ("tag" === i.type &&
                                    i.content[0] &&
                                    "tag" === i.content[0].type
                                        ? "</" ===
                                          i.content[0].content[0].content
                                            ? 0 < e.length &&
                                              e[e.length - 1].tagName ===
                                                  h(i.content[0].content[1]) &&
                                              e.pop()
                                            : "/>" !==
                                                  i.content[
                                                      i.content.length - 1
                                                  ].content &&
                                              e.push({
                                                  tagName: h(
                                                      i.content[0].content[1]
                                                  ),
                                                  openedBraces: 0,
                                              })
                                        : 0 < e.length &&
                                          "punctuation" === i.type &&
                                          "{" === i.content
                                        ? e[e.length - 1].openedBraces++
                                        : 0 < e.length &&
                                          0 < e[e.length - 1].openedBraces &&
                                          "punctuation" === i.type &&
                                          "}" === i.content
                                        ? e[e.length - 1].openedBraces--
                                        : (s = !0)),
                                    (s || "string" == typeof i) &&
                                        0 < e.length &&
                                        0 === e[e.length - 1].openedBraces &&
                                        ((s = h(i)),
                                        n < t.length - 1 &&
                                            ("string" == typeof t[n + 1] ||
                                                "plain-text" ===
                                                    t[n + 1].type) &&
                                            ((s += h(t[n + 1])),
                                            t.splice(n + 1, 1)),
                                        0 < n &&
                                            ("string" == typeof t[n - 1] ||
                                                "plain-text" ===
                                                    t[n - 1].type) &&
                                            ((s = h(t[n - 1]) + s),
                                            t.splice(n - 1, 1),
                                            n--),
                                        (t[n] = new a.Token(
                                            "plain-text",
                                            s,
                                            null,
                                            s
                                        ))),
                                    i.content &&
                                        "string" != typeof i.content &&
                                        B(i.content);
                            }
                        }
                        function H(t, e) {
                            return t.replace(/<<(\d+)>>/g, function (t, n) {
                                return "(?:" + e[+n] + ")";
                            });
                        }
                        function Y(t, e, n) {
                            return RegExp(H(t, e), n || "");
                        }
                        function F(t, e) {
                            for (var n = 0; n < e; n++)
                                t = t.replace(/<<self>>/g, function () {
                                    return "(?:" + t + ")";
                                });
                            return t.replace(/<<self>>/g, "[^\\s\\S]");
                        }
                        function X(t) {
                            return (
                                "\\b(?:" + t.trim().replace(/ /g, "|") + ")\\b"
                            );
                        }
                        function z(t, e) {
                            return {
                                interpolation: {
                                    pattern: Y(
                                        /((?:^|[^{])(?:\{\{)*)<<0>>/.source,
                                        [t]
                                    ),
                                    lookbehind: !0,
                                    inside: {
                                        "format-string": {
                                            pattern: Y(
                                                /(^\{(?:(?![}:])<<0>>)*)<<1>>(?=\}$)/
                                                    .source,
                                                [e, _]
                                            ),
                                            lookbehind: !0,
                                            inside: { punctuation: /^:/ },
                                        },
                                        punctuation: /^\{|\}$/,
                                        expression: {
                                            pattern: /[\s\S]+/,
                                            alias: "language-csharp",
                                            inside: p.languages.csharp,
                                        },
                                    },
                                },
                                string: /[\s\S]+/,
                            };
                        }
                        if (
                            (t.exports && (t.exports = j),
                            void 0 !== e && (e.Prism = j),
                            (j.languages.markup = {
                                comment: /<!--[\s\S]*?-->/,
                                prolog: /<\?[\s\S]+?\?>/,
                                doctype: /<!DOCTYPE[\s\S]+?>/i,
                                cdata: /<!\[CDATA\[[\s\S]*?]]>/i,
                                tag: {
                                    pattern:
                                        /<\/?(?!\d)[^\s>\/=$<%]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i,
                                    greedy: !0,
                                    inside: {
                                        tag: {
                                            pattern: /^<\/?[^\s>\/]+/i,
                                            inside: {
                                                punctuation: /^<\/?/,
                                                namespace: /^[^\s>\/:]+:/,
                                            },
                                        },
                                        "special-attr": [],
                                        "attr-value": {
                                            pattern:
                                                /=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+)/i,
                                            inside: {
                                                punctuation: [
                                                    /^=/,
                                                    {
                                                        pattern:
                                                            /(^|[^\\])["']/,
                                                        lookbehind: !0,
                                                    },
                                                ],
                                            },
                                        },
                                        punctuation: /\/?>/,
                                        "attr-name": {
                                            pattern: /[^\s>\/]+/,
                                            inside: {
                                                namespace: /^[^\s>\/:]+:/,
                                            },
                                        },
                                    },
                                },
                                entity: /&#?[\da-z]{1,8};/i,
                            }),
                            (j.languages.markup.tag.inside[
                                "attr-value"
                            ].inside.entity = j.languages.markup.entity),
                            j.hooks.add("wrap", function (t) {
                                "entity" === t.type &&
                                    (t.attributes.title = t.content.replace(
                                        /&amp;/,
                                        "&"
                                    ));
                            }),
                            (j.languages.xml = j.languages.markup),
                            (j.languages.html = j.languages.markup),
                            (j.languages.mathml = j.languages.markup),
                            (j.languages.svg = j.languages.markup),
                            (j.languages.css = {
                                comment: /\/\*[\s\S]*?\*\//,
                                atrule: {
                                    pattern: /@[\w-]+?.*?(?:;|(?=\s*\{))/i,
                                    inside: { rule: /@[\w-]+/ },
                                },
                                url: /url\((?:(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|.*?)\)/i,
                                selector: /[^{}\s][^{};]*?(?=\s*\{)/,
                                string: {
                                    pattern:
                                        /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                                    greedy: !0,
                                },
                                property:
                                    /[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i,
                                important: /\B!important\b/i,
                                function: /[-a-z0-9]+(?=\()/i,
                                punctuation: /[(){};:]/,
                            }),
                            (j.languages.css.atrule.inside.rest =
                                j.languages.css),
                            j.languages.markup &&
                                (j.languages.insertBefore("markup", "tag", {
                                    style: {
                                        pattern:
                                            /(<style[\s\S]*?>)[\s\S]*?(?=<\/style>)/i,
                                        lookbehind: !0,
                                        inside: j.languages.css,
                                        alias: "language-css",
                                        greedy: !0,
                                    },
                                }),
                                j.languages.insertBefore(
                                    "inside",
                                    "attr-value",
                                    {
                                        "style-attr": {
                                            pattern:
                                                /\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i,
                                            inside: {
                                                "attr-name": {
                                                    pattern: /^\s*style/i,
                                                    inside: j.languages.markup
                                                        .tag.inside,
                                                },
                                                punctuation:
                                                    /^\s*=\s*['"]|['"]\s*$/,
                                                "attr-value": {
                                                    pattern: /.+/i,
                                                    inside: j.languages.css,
                                                },
                                            },
                                            alias: "language-css",
                                        },
                                    },
                                    j.languages.markup.tag
                                )),
                            (j.languages.clike = {
                                comment: [
                                    {
                                        pattern:
                                            /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
                                        lookbehind: !0,
                                    },
                                    {
                                        pattern: /(^|[^\\:])\/\/.*/,
                                        lookbehind: !0,
                                        greedy: !0,
                                    },
                                ],
                                string: {
                                    pattern:
                                        /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                                    greedy: !0,
                                },
                                "class-name": {
                                    pattern:
                                        /((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i,
                                    lookbehind: !0,
                                    inside: { punctuation: /[.\\]/ },
                                },
                                keyword:
                                    /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
                                boolean: /\b(?:true|false)\b/,
                                function: /[a-z0-9_]+(?=\()/i,
                                number: /\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,
                                operator:
                                    /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,
                                punctuation: /[{}[\];(),.:]/,
                            }),
                            (j.languages.javascript = j.languages.extend(
                                "clike",
                                {
                                    "class-name": [
                                        j.languages.clike["class-name"],
                                        {
                                            pattern:
                                                /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,
                                            lookbehind: !0,
                                        },
                                    ],
                                    keyword:
                                        /\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/,
                                    number: /\b(?:0[xX][\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,
                                    function:
                                        /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*\()/i,
                                    operator:
                                        /-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/,
                                }
                            )),
                            (j.languages.javascript["class-name"][0].pattern =
                                /(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/),
                            j.languages.insertBefore("javascript", "keyword", {
                                regex: {
                                    pattern:
                                        /((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(\[[^\]\r\n]+]|\\.|[^/\\\[\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})\]]))/,
                                    lookbehind: !0,
                                    greedy: !0,
                                    inside: {
                                        "regex-source": {
                                            pattern:
                                                /^(\/)[\s\S]+(?=\/[a-z]*$)/,
                                            lookbehind: !0,
                                            alias: "language-regex",
                                            inside: j.languages.regex,
                                        },
                                        "regex-delimiter": /^\/|\/$/,
                                        "regex-flags": /^[a-z]+$/,
                                    },
                                },
                                "function-variable": {
                                    pattern:
                                        /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=\s*(?:function\b|(?:\([^()]*\)|[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/i,
                                    alias: "function",
                                },
                                constant: /\b[A-Z][A-Z\d_]*\b/,
                            }),
                            j.languages.insertBefore("javascript", "string", {
                                hashbang: {
                                    pattern: /^#!.*/,
                                    greedy: !0,
                                    alias: "comment",
                                },
                                "string-property": {
                                    pattern:
                                        /((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,
                                    lookbehind: !0,
                                    greedy: !0,
                                    alias: "property",
                                },
                                "template-string": {
                                    pattern: /`(?:\\[\s\S]|\${[^}]+}|[^\\`])*`/,
                                    greedy: !0,
                                    inside: {
                                        interpolation: {
                                            pattern: /\${[^}]+}/,
                                            inside: {
                                                "interpolation-punctuation": {
                                                    pattern: /^\${|}$/,
                                                    alias: "punctuation",
                                                },
                                                rest: null,
                                            },
                                        },
                                        string: /[\s\S]+/,
                                    },
                                },
                            }),
                            j.languages.insertBefore("javascript", "operator", {
                                "literal-property": {
                                    pattern:
                                        /((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,
                                    lookbehind: !0,
                                    alias: "property",
                                },
                            }),
                            (j.languages.javascript[
                                "template-string"
                            ].inside.interpolation.inside.rest =
                                j.languages.javascript),
                            Object.defineProperty(
                                j.languages.markup.tag,
                                "addInlined",
                                {
                                    value: function (t, e) {
                                        var n;
                                        ((e =
                                            (((n =
                                                (((n = {})["language-" + e] = {
                                                    pattern:
                                                        /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
                                                    lookbehind: !0,
                                                    inside: j.languages[e],
                                                }),
                                                (n.cdata =
                                                    /^<!\[CDATA\[|\]\]>$/i),
                                                {
                                                    "included-cdata": {
                                                        pattern:
                                                            /<!\[CDATA\[[\s\S]*?\]\]>/i,
                                                        inside: n,
                                                    },
                                                }))["language-" + e] = {
                                                pattern: /[\s\S]+/,
                                                inside: j.languages[e],
                                            }),
                                            {}))[t] = {
                                            pattern: RegExp(
                                                /(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(
                                                    /__/g,
                                                    function () {
                                                        return t;
                                                    }
                                                ),
                                                "i"
                                            ),
                                            lookbehind: !0,
                                            greedy: !0,
                                            inside: n,
                                        }),
                                            j.languages.insertBefore(
                                                "markup",
                                                "cdata",
                                                e
                                            );
                                    },
                                }
                            ),
                            Object.defineProperty(
                                j.languages.markup.tag,
                                "addAttribute",
                                {
                                    value: function (t, e) {
                                        j.languages.markup.tag.inside[
                                            "special-attr"
                                        ].push({
                                            pattern: RegExp(
                                                /(^|["'\s])/.source +
                                                    "(?:" +
                                                    t +
                                                    ")" +
                                                    /\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/
                                                        .source,
                                                "i"
                                            ),
                                            lookbehind: !0,
                                            inside: {
                                                "attr-name": /^[^\s=]+/,
                                                "attr-value": {
                                                    pattern: /=[\s\S]+/,
                                                    inside: {
                                                        value: {
                                                            pattern:
                                                                /(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,
                                                            lookbehind: !0,
                                                            alias: [
                                                                e,
                                                                "language-" + e,
                                                            ],
                                                            inside: j.languages[
                                                                e
                                                            ],
                                                        },
                                                        punctuation: [
                                                            {
                                                                pattern: /^=/,
                                                                alias: "attr-equals",
                                                            },
                                                            /"|'/,
                                                        ],
                                                    },
                                                },
                                            },
                                        });
                                    },
                                }
                            ),
                            j.languages.markup &&
                                (j.languages.insertBefore("markup", "tag", {
                                    script: {
                                        pattern:
                                            /(<script[\s\S]*?>)[\s\S]*?(?=<\/script>)/i,
                                        lookbehind: !0,
                                        inside: j.languages.javascript,
                                        alias: "language-javascript",
                                        greedy: !0,
                                    },
                                }),
                                j.languages.markup.tag.addInlined(
                                    "script",
                                    "javascript"
                                ),
                                j.languages.markup.tag.addAttribute(
                                    /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/
                                        .source,
                                    "javascript"
                                )),
                            (j.languages.js = j.languages.javascript),
                            (j.languages["markup-templating"] = {}),
                            Object.defineProperties(
                                j.languages["markup-templating"],
                                {
                                    buildPlaceholders: {
                                        value: function (t, e, n, i) {
                                            t.language === e &&
                                                ((t.tokenStack = []),
                                                (t.code = t.code.replace(
                                                    n,
                                                    function (n) {
                                                        if (
                                                            "function" ==
                                                                typeof i &&
                                                            !i(n)
                                                        )
                                                            return n;
                                                        for (
                                                            var s =
                                                                t.tokenStack
                                                                    .length;
                                                            -1 !==
                                                            t.code.indexOf(
                                                                "___" +
                                                                    e.toUpperCase() +
                                                                    s +
                                                                    "___"
                                                            );

                                                        )
                                                            ++s;
                                                        return (
                                                            (t.tokenStack[s] =
                                                                n),
                                                            "___" +
                                                                e.toUpperCase() +
                                                                s +
                                                                "___"
                                                        );
                                                    }
                                                )),
                                                (t.grammar =
                                                    j.languages.markup));
                                        },
                                    },
                                    tokenizePlaceholders: {
                                        value: function (t, e) {
                                            var n, i, s;
                                            t.language === e &&
                                                t.tokenStack &&
                                                ((t.grammar = j.languages[e]),
                                                (n = 0),
                                                (i = Object.keys(t.tokenStack)),
                                                (s = function (o) {
                                                    if (!(n >= i.length))
                                                        for (
                                                            var r = 0;
                                                            r < o.length;
                                                            r++
                                                        ) {
                                                            var a = o[r];
                                                            if (
                                                                "string" ==
                                                                    typeof a ||
                                                                (a.content &&
                                                                    "string" ==
                                                                        typeof a.content)
                                                            ) {
                                                                var l = i[n],
                                                                    c =
                                                                        t
                                                                            .tokenStack[
                                                                            l
                                                                        ],
                                                                    d = (p =
                                                                        "string" ==
                                                                        typeof a
                                                                            ? a
                                                                            : a.content).indexOf(
                                                                        "___" +
                                                                            e.toUpperCase() +
                                                                            l +
                                                                            "___"
                                                                    );
                                                                if (-1 < d) {
                                                                    ++n;
                                                                    var u,
                                                                        h =
                                                                            p.substring(
                                                                                0,
                                                                                d
                                                                            ),
                                                                        p =
                                                                            ((c =
                                                                                new j.Token(
                                                                                    e,
                                                                                    j.tokenize(
                                                                                        c,
                                                                                        t.grammar,
                                                                                        e
                                                                                    ),
                                                                                    "language-" +
                                                                                        e,
                                                                                    c
                                                                                )),
                                                                            p.substring(
                                                                                d +
                                                                                    (
                                                                                        "___" +
                                                                                        e.toUpperCase() +
                                                                                        l +
                                                                                        "___"
                                                                                    )
                                                                                        .length
                                                                            ));
                                                                    if (
                                                                        (h || p
                                                                            ? ((u =
                                                                                  [
                                                                                      h,
                                                                                      c,
                                                                                      p,
                                                                                  ].filter(
                                                                                      function (
                                                                                          t
                                                                                      ) {
                                                                                          return !!t;
                                                                                      }
                                                                                  )),
                                                                              s(
                                                                                  u
                                                                              ))
                                                                            : (u =
                                                                                  c),
                                                                        "string" ==
                                                                        typeof a
                                                                            ? Array.prototype.splice.apply(
                                                                                  o,
                                                                                  [
                                                                                      r,
                                                                                      1,
                                                                                  ].concat(
                                                                                      u
                                                                                  )
                                                                              )
                                                                            : (a.content =
                                                                                  u),
                                                                        n >=
                                                                            i.length)
                                                                    )
                                                                        break;
                                                                }
                                                            } else
                                                                a.content &&
                                                                    "string" !=
                                                                        typeof a.content &&
                                                                    s(
                                                                        a.content
                                                                    );
                                                        }
                                                })(t.tokens));
                                        },
                                    },
                                }
                            ),
                            (j.languages.json = {
                                property: /"(?:\\.|[^\\"\r\n])*"(?=\s*:)/i,
                                string: {
                                    pattern: /"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,
                                    greedy: !0,
                                },
                                number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,
                                punctuation: /[{}[\]);,]/,
                                operator: /:/g,
                                boolean: /\b(?:true|false)\b/i,
                                null: /\bnull\b/i,
                            }),
                            (j.languages.jsonp = j.languages.json),
                            (l = (a = j).util.clone(a.languages.javascript)),
                            (c = /(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/
                                .source),
                            (d = /(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/
                                .source),
                            (u = W(
                                (u = /(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/
                                    .source)
                            ).source),
                            (a.languages.jsx = a.languages.extend("markup", l)),
                            (a.languages.jsx.tag.pattern = W(
                                /<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/
                                    .source
                            )),
                            (a.languages.jsx.tag.inside.tag.pattern =
                                /^<\/?[^\s>\/]*/),
                            (a.languages.jsx.tag.inside["attr-value"].pattern =
                                /=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/),
                            (a.languages.jsx.tag.inside.tag.inside[
                                "class-name"
                            ] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/),
                            (a.languages.jsx.tag.inside.comment = l.comment),
                            a.languages.insertBefore(
                                "inside",
                                "attr-name",
                                {
                                    spread: {
                                        pattern: W(/<SPREAD>/.source),
                                        inside: a.languages.jsx,
                                    },
                                },
                                a.languages.jsx.tag
                            ),
                            a.languages.insertBefore(
                                "inside",
                                "special-attr",
                                {
                                    script: {
                                        pattern: W(/=<BRACES>/.source),
                                        alias: "language-javascript",
                                        inside: {
                                            "script-punctuation": {
                                                pattern: /^=(?=\{)/,
                                                alias: "punctuation",
                                            },
                                            rest: a.languages.jsx,
                                        },
                                    },
                                },
                                a.languages.jsx.tag
                            ),
                            (h = function (t) {
                                return t
                                    ? "string" == typeof t
                                        ? t
                                        : "string" == typeof t.content
                                        ? t.content
                                        : t.content.map(h).join("")
                                    : "";
                            }),
                            a.hooks.add("after-tokenize", function (t) {
                                ("jsx" !== t.language &&
                                    "tsx" !== t.language) ||
                                    B(t.tokens);
                            }),
                            (p = j),
                            (e =
                                "bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void"),
                            (M =
                                "add alias and ascending async await by descending from(?=\\s*(?:\\w|$)) get global group into init(?=\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\s*{)"),
                            (P =
                                "abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield"),
                            (C = X((A = "class enum interface record struct"))),
                            (f = RegExp(X(e + " " + A + " " + M + " " + P))),
                            (M = X(A + " " + M + " " + P)),
                            (e = X(e + " " + A + " " + P)),
                            (A = F(
                                /<(?:[^<>;=+\-*/%&|^]|<<self>>)*>/.source,
                                2
                            )),
                            (P = F(/\((?:[^()]|<<self>>)*\)/.source, 2)),
                            (g = H(/<<0>>(?:\s*<<1>>)?/.source, [
                                (w = /@?\b[A-Za-z_]\w*\b/.source),
                                A,
                            ])),
                            (M = H(/(?!<<0>>)<<1>>(?:\s*\.\s*<<1>>)*/.source, [
                                M,
                                g,
                            ])),
                            (R = H(
                                /<<0>>(?:\s*(?:\?\s*)?<<1>>)*(?:\s*\?)?/.source,
                                [M, (v = /\[\s*(?:,\s*)*\]/.source)]
                            )),
                            (m = H(
                                /[^,()<>[\];=+\-*/%&|^]|<<0>>|<<1>>|<<2>>/
                                    .source,
                                [A, P, v]
                            )),
                            (m = H(/\(<<0>>+(?:,<<0>>+)+\)/.source, [m])),
                            (m = H(
                                /(?:<<0>>|<<1>>)(?:\s*(?:\?\s*)?<<2>>)*(?:\s*\?)?/
                                    .source,
                                [m, M, v]
                            )),
                            (v = { keyword: f, punctuation: /[<>()?,.:[\]]/ }),
                            (b = /'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'/
                                .source),
                            (y = /"(?:\\.|[^\\"\r\n])*"/.source),
                            (p.languages.csharp = p.languages.extend("clike", {
                                string: [
                                    {
                                        pattern: Y(/(^|[^$\\])<<0>>/.source, [
                                            /@"(?:""|\\[\s\S]|[^\\"])*"(?!")/
                                                .source,
                                        ]),
                                        lookbehind: !0,
                                        greedy: !0,
                                    },
                                    {
                                        pattern: Y(/(^|[^@$\\])<<0>>/.source, [
                                            y,
                                        ]),
                                        lookbehind: !0,
                                        greedy: !0,
                                    },
                                ],
                                "class-name": [
                                    {
                                        pattern: Y(
                                            /(\busing\s+static\s+)<<0>>(?=\s*;)/
                                                .source,
                                            [M]
                                        ),
                                        lookbehind: !0,
                                        inside: v,
                                    },
                                    {
                                        pattern: Y(
                                            /(\busing\s+<<0>>\s*=\s*)<<1>>(?=\s*;)/
                                                .source,
                                            [w, m]
                                        ),
                                        lookbehind: !0,
                                        inside: v,
                                    },
                                    {
                                        pattern: Y(
                                            /(\busing\s+)<<0>>(?=\s*=)/.source,
                                            [w]
                                        ),
                                        lookbehind: !0,
                                    },
                                    {
                                        pattern: Y(/(\b<<0>>\s+)<<1>>/.source, [
                                            C,
                                            g,
                                        ]),
                                        lookbehind: !0,
                                        inside: v,
                                    },
                                    {
                                        pattern: Y(
                                            /(\bcatch\s*\(\s*)<<0>>/.source,
                                            [M]
                                        ),
                                        lookbehind: !0,
                                        inside: v,
                                    },
                                    {
                                        pattern: Y(/(\bwhere\s+)<<0>>/.source, [
                                            w,
                                        ]),
                                        lookbehind: !0,
                                    },
                                    {
                                        pattern: Y(
                                            /(\b(?:is(?:\s+not)?|as)\s+)<<0>>/
                                                .source,
                                            [R]
                                        ),
                                        lookbehind: !0,
                                        inside: v,
                                    },
                                    {
                                        pattern: Y(
                                            /\b<<0>>(?=\s+(?!<<1>>|with\s*\{)<<2>>(?:\s*[=,;:{)\]]|\s+(?:in|when)\b))/
                                                .source,
                                            [m, e, w]
                                        ),
                                        inside: v,
                                    },
                                ],
                                keyword: f,
                                number: /(?:\b0(?:x[\da-f_]*[\da-f]|b[01_]*[01])|(?:\B\.\d+(?:_+\d+)*|\b\d+(?:_+\d+)*(?:\.\d+(?:_+\d+)*)?)(?:e[-+]?\d+(?:_+\d+)*)?)(?:[dflmu]|lu|ul)?\b/i,
                                operator:
                                    />>=?|<<=?|[-=]>|([-+&|])\1|~|\?\?=?|[-+*/%&|^!=<>]=?/,
                                punctuation: /\?\.?|::|[{}[\];(),.:]/,
                            })),
                            p.languages.insertBefore("csharp", "number", {
                                range: { pattern: /\.\./, alias: "operator" },
                            }),
                            p.languages.insertBefore("csharp", "punctuation", {
                                "named-parameter": {
                                    pattern: Y(
                                        /([(,]\s*)<<0>>(?=\s*:)/.source,
                                        [w]
                                    ),
                                    lookbehind: !0,
                                    alias: "punctuation",
                                },
                            }),
                            p.languages.insertBefore("csharp", "class-name", {
                                namespace: {
                                    pattern: Y(
                                        /(\b(?:namespace|using)\s+)<<0>>(?:\s*\.\s*<<0>>)*(?=\s*[;{])/
                                            .source,
                                        [w]
                                    ),
                                    lookbehind: !0,
                                    inside: { punctuation: /\./ },
                                },
                                "type-expression": {
                                    pattern: Y(
                                        /(\b(?:default|sizeof|typeof)\s*\(\s*(?!\s))(?:[^()\s]|\s(?!\s)|<<0>>)*(?=\s*\))/
                                            .source,
                                        [P]
                                    ),
                                    lookbehind: !0,
                                    alias: "class-name",
                                    inside: v,
                                },
                                "return-type": {
                                    pattern: Y(
                                        /<<0>>(?=\s+(?:<<1>>\s*(?:=>|[({]|\.\s*this\s*\[)|this\s*\[))/
                                            .source,
                                        [m, M]
                                    ),
                                    inside: v,
                                    alias: "class-name",
                                },
                                "constructor-invocation": {
                                    pattern: Y(
                                        /(\bnew\s+)<<0>>(?=\s*[[({])/.source,
                                        [m]
                                    ),
                                    lookbehind: !0,
                                    inside: v,
                                    alias: "class-name",
                                },
                                "generic-method": {
                                    pattern: Y(
                                        /<<0>>\s*<<1>>(?=\s*\()/.source,
                                        [w, A]
                                    ),
                                    inside: {
                                        function: Y(/^<<0>>/.source, [w]),
                                        generic: {
                                            pattern: RegExp(A),
                                            alias: "class-name",
                                            inside: v,
                                        },
                                    },
                                },
                                "type-list": {
                                    pattern: Y(
                                        /\b((?:<<0>>\s+<<1>>|record\s+<<1>>\s*<<5>>|where\s+<<2>>)\s*:\s*)(?:<<3>>|<<4>>|<<1>>\s*<<5>>|<<6>>)(?:\s*,\s*(?:<<3>>|<<4>>|<<6>>))*(?=\s*(?:where|[{;]|=>|$))/
                                            .source,
                                        [
                                            C,
                                            g,
                                            w,
                                            m,
                                            f.source,
                                            P,
                                            /\bnew\s*\(\s*\)/.source,
                                        ]
                                    ),
                                    lookbehind: !0,
                                    inside: {
                                        "record-arguments": {
                                            pattern: Y(
                                                /(^(?!new\s*\()<<0>>\s*)<<1>>/
                                                    .source,
                                                [g, P]
                                            ),
                                            lookbehind: !0,
                                            greedy: !0,
                                            inside: p.languages.csharp,
                                        },
                                        keyword: f,
                                        "class-name": {
                                            pattern: RegExp(m),
                                            greedy: !0,
                                            inside: v,
                                        },
                                        punctuation: /[,()]/,
                                    },
                                },
                                preprocessor: {
                                    pattern: /(^[\t ]*)#.*/m,
                                    lookbehind: !0,
                                    alias: "property",
                                    inside: {
                                        directive: {
                                            pattern:
                                                /(#)\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\b/,
                                            lookbehind: !0,
                                            alias: "keyword",
                                        },
                                    },
                                },
                            }),
                            (e = H(
                                /\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>/
                                    .source,
                                [(R = y + "|" + b)]
                            )),
                            (A = F(
                                H(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [e]),
                                2
                            )),
                            (C =
                                /\b(?:assembly|event|field|method|module|param|property|return|type)\b/
                                    .source),
                            (w = H(/<<0>>(?:\s*\(<<1>>*\))?/.source, [M, A])),
                            p.languages.insertBefore("csharp", "class-name", {
                                attribute: {
                                    pattern: Y(
                                        /((?:^|[^\s\w>)?])\s*\[\s*)(?:<<0>>\s*:\s*)?<<1>>(?:\s*,\s*<<1>>)*(?=\s*\])/
                                            .source,
                                        [C, w]
                                    ),
                                    lookbehind: !0,
                                    greedy: !0,
                                    inside: {
                                        target: {
                                            pattern: Y(
                                                /^<<0>>(?=\s*:)/.source,
                                                [C]
                                            ),
                                            alias: "keyword",
                                        },
                                        "attribute-arguments": {
                                            pattern: Y(/\(<<0>>*\)/.source, [
                                                A,
                                            ]),
                                            inside: p.languages.csharp,
                                        },
                                        "class-name": {
                                            pattern: RegExp(M),
                                            inside: { punctuation: /\./ },
                                        },
                                        punctuation: /[:,]/,
                                    },
                                },
                            }),
                            (_ = /:[^}\r\n]+/.source),
                            (g = F(
                                H(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [e]),
                                2
                            )),
                            (P = H(
                                /\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source,
                                [g, _]
                            )),
                            (f = F(
                                H(
                                    /[^"'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>|\(<<self>>*\)/
                                        .source,
                                    [R]
                                ),
                                2
                            )),
                            (m = H(
                                /\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source,
                                [f, _]
                            )),
                            p.languages.insertBefore("csharp", "string", {
                                "interpolation-string": [
                                    {
                                        pattern: Y(
                                            /(^|[^\\])(?:\$@|@\$)"(?:""|\\[\s\S]|\{\{|<<0>>|[^\\{"])*"/
                                                .source,
                                            [P]
                                        ),
                                        lookbehind: !0,
                                        greedy: !0,
                                        inside: z(P, g),
                                    },
                                    {
                                        pattern: Y(
                                            /(^|[^@\\])\$"(?:\\.|\{\{|<<0>>|[^\\"{])*"/
                                                .source,
                                            [m]
                                        ),
                                        lookbehind: !0,
                                        greedy: !0,
                                        inside: z(m, f),
                                    },
                                ],
                                char: { pattern: RegExp(b), greedy: !0 },
                            }),
                            (p.languages.dotnet = p.languages.cs =
                                p.languages.csharp),
                            (j.languages.aspnet = j.languages.extend("markup", {
                                "page-directive": {
                                    pattern: /<%\s*@.*%>/,
                                    alias: "tag",
                                    inside: {
                                        "page-directive": {
                                            pattern:
                                                /<%\s*@\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,
                                            alias: "tag",
                                        },
                                        rest: j.languages.markup.tag.inside,
                                    },
                                },
                                directive: {
                                    pattern: /<%.*%>/,
                                    alias: "tag",
                                    inside: {
                                        directive: {
                                            pattern: /<%\s*?[$=%#:]{0,2}|%>/,
                                            alias: "tag",
                                        },
                                        rest: j.languages.csharp,
                                    },
                                },
                            })),
                            (j.languages.aspnet.tag.pattern =
                                /<(?!%)\/?[^\s>\/]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/),
                            j.languages.insertBefore(
                                "inside",
                                "punctuation",
                                { directive: j.languages.aspnet.directive },
                                j.languages.aspnet.tag.inside["attr-value"]
                            ),
                            j.languages.insertBefore("aspnet", "comment", {
                                "asp-comment": {
                                    pattern: /<%--[\s\S]*?--%>/,
                                    alias: ["asp", "comment"],
                                },
                            }),
                            j.languages.insertBefore(
                                "aspnet",
                                j.languages.javascript ? "script" : "tag",
                                {
                                    "asp-script": {
                                        pattern:
                                            /(<script(?=.*runat=['"]?server\b)[^>]*>)[\s\S]*?(?=<\/script>)/i,
                                        lookbehind: !0,
                                        alias: ["asp", "script"],
                                        inside: j.languages.csharp || {},
                                    },
                                }
                            ),
                            (j.languages.python = {
                                comment: {
                                    pattern: /(^|[^\\])#.*/,
                                    lookbehind: !0,
                                    greedy: !0,
                                },
                                "string-interpolation": {
                                    pattern:
                                        /(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,
                                    greedy: !0,
                                    inside: {
                                        interpolation: {
                                            pattern:
                                                /((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,
                                            lookbehind: !0,
                                            inside: {
                                                "format-spec": {
                                                    pattern:
                                                        /(:)[^:(){}]+(?=\}$)/,
                                                    lookbehind: !0,
                                                },
                                                "conversion-option": {
                                                    pattern: /![sra](?=[:}]$)/,
                                                    alias: "punctuation",
                                                },
                                                rest: null,
                                            },
                                        },
                                        string: /[\s\S]+/,
                                    },
                                },
                                "triple-quoted-string": {
                                    pattern:
                                        /(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,
                                    greedy: !0,
                                    alias: "string",
                                },
                                string: {
                                    pattern:
                                        /(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,
                                    greedy: !0,
                                },
                                function: {
                                    pattern:
                                        /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,
                                    lookbehind: !0,
                                },
                                "class-name": {
                                    pattern: /(\bclass\s+)\w+/i,
                                    lookbehind: !0,
                                },
                                decorator: {
                                    pattern: /(^[\t ]*)@\w+(?:\.\w+)*/m,
                                    lookbehind: !0,
                                    alias: ["annotation", "punctuation"],
                                    inside: { punctuation: /\./ },
                                },
                                keyword:
                                    /\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,
                                builtin:
                                    /\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,
                                boolean: /\b(?:False|None|True)\b/,
                                number: /\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,
                                operator:
                                    /[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
                                punctuation: /[{}[\];(),.:]/,
                            }),
                            (j.languages.python[
                                "string-interpolation"
                            ].inside.interpolation.inside.rest =
                                j.languages.python),
                            (j.languages.py = j.languages.python),
                            ((v = j).languages.ruby = v.languages.extend(
                                "clike",
                                {
                                    comment: {
                                        pattern: /#.*|^=begin\s[\s\S]*?^=end/m,
                                        greedy: !0,
                                    },
                                    "class-name": {
                                        pattern:
                                            /(\b(?:class|module)\s+|\bcatch\s+\()[\w.\\]+|\b[A-Z_]\w*(?=\s*\.\s*new\b)/,
                                        lookbehind: !0,
                                        inside: { punctuation: /[.\\]/ },
                                    },
                                    keyword:
                                        /\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\b/,
                                    operator:
                                        /\.{2,3}|&\.|===|<?=>|[!=]?~|(?:&&|\|\||<<|>>|\*\*|[+\-*/%<>!^&|=])=?|[?:]/,
                                    punctuation: /[(){}[\].,;]/,
                                }
                            )),
                            v.languages.insertBefore("ruby", "operator", {
                                "double-colon": {
                                    pattern: /::/,
                                    alias: "punctuation",
                                },
                            }),
                            (y = {
                                pattern:
                                    /((?:^|[^\\])(?:\\{2})*)#\{(?:[^{}]|\{[^{}]*\})*\}/,
                                lookbehind: !0,
                                inside: {
                                    content: {
                                        pattern: /^(#\{)[\s\S]+(?=\}$)/,
                                        lookbehind: !0,
                                        inside: v.languages.ruby,
                                    },
                                    delimiter: {
                                        pattern: /^#\{|\}$/,
                                        alias: "punctuation",
                                    },
                                },
                            }),
                            delete v.languages.ruby.function,
                            (w =
                                "(?:" +
                                [
                                    /([^a-zA-Z0-9\s{(\[<=])(?:(?!\1)[^\\]|\\[\s\S])*\1/
                                        .source,
                                    /\((?:[^()\\]|\\[\s\S]|\((?:[^()\\]|\\[\s\S])*\))*\)/
                                        .source,
                                    /\{(?:[^{}\\]|\\[\s\S]|\{(?:[^{}\\]|\\[\s\S])*\})*\}/
                                        .source,
                                    /\[(?:[^\[\]\\]|\\[\s\S]|\[(?:[^\[\]\\]|\\[\s\S])*\])*\]/
                                        .source,
                                    /<(?:[^<>\\]|\\[\s\S]|<(?:[^<>\\]|\\[\s\S])*>)*>/
                                        .source,
                                ].join("|") +
                                ")"),
                            (C =
                                /(?:"(?:\\.|[^"\\\r\n])*"|(?:\b[a-zA-Z_]\w*|[^\s\0-\x7F]+)[?!]?|\$.)/
                                    .source),
                            v.languages.insertBefore("ruby", "keyword", {
                                "regex-literal": [
                                    {
                                        pattern: RegExp(
                                            /%r/.source +
                                                w +
                                                /[egimnosux]{0,6}/.source
                                        ),
                                        greedy: !0,
                                        inside: {
                                            interpolation: y,
                                            regex: /[\s\S]+/,
                                        },
                                    },
                                    {
                                        pattern:
                                            /(^|[^/])\/(?!\/)(?:\[[^\r\n\]]+\]|\\.|[^[/\\\r\n])+\/[egimnosux]{0,6}(?=\s*(?:$|[\r\n,.;})#]))/,
                                        lookbehind: !0,
                                        greedy: !0,
                                        inside: {
                                            interpolation: y,
                                            regex: /[\s\S]+/,
                                        },
                                    },
                                ],
                                variable: /[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,
                                symbol: [
                                    {
                                        pattern: RegExp(/(^|[^:]):/.source + C),
                                        lookbehind: !0,
                                        greedy: !0,
                                    },
                                    {
                                        pattern: RegExp(
                                            /([\r\n{(,][ \t]*)/.source +
                                                C +
                                                /(?=:(?!:))/.source
                                        ),
                                        lookbehind: !0,
                                        greedy: !0,
                                    },
                                ],
                                "method-definition": {
                                    pattern: /(\bdef\s+)\w+(?:\s*\.\s*\w+)?/,
                                    lookbehind: !0,
                                    inside: {
                                        function: /\b\w+$/,
                                        keyword: /^self\b/,
                                        "class-name": /^\w+/,
                                        punctuation: /\./,
                                    },
                                },
                            }),
                            v.languages.insertBefore("ruby", "string", {
                                "string-literal": [
                                    {
                                        pattern: RegExp(
                                            /%[qQiIwWs]?/.source + w
                                        ),
                                        greedy: !0,
                                        inside: {
                                            interpolation: y,
                                            string: /[\s\S]+/,
                                        },
                                    },
                                    {
                                        pattern:
                                            /("|')(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|(?!\1)[^\\#\r\n])*\1/,
                                        greedy: !0,
                                        inside: {
                                            interpolation: y,
                                            string: /[\s\S]+/,
                                        },
                                    },
                                    {
                                        pattern:
                                            /<<[-~]?([a-z_]\w*)[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
                                        alias: "heredoc-string",
                                        greedy: !0,
                                        inside: {
                                            delimiter: {
                                                pattern:
                                                    /^<<[-~]?[a-z_]\w*|\b[a-z_]\w*$/i,
                                                inside: {
                                                    symbol: /\b\w+/,
                                                    punctuation: /^<<[-~]?/,
                                                },
                                            },
                                            interpolation: y,
                                            string: /[\s\S]+/,
                                        },
                                    },
                                    {
                                        pattern:
                                            /<<[-~]?'([a-z_]\w*)'[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
                                        alias: "heredoc-string",
                                        greedy: !0,
                                        inside: {
                                            delimiter: {
                                                pattern:
                                                    /^<<[-~]?'[a-z_]\w*'|\b[a-z_]\w*$/i,
                                                inside: {
                                                    symbol: /\b\w+/,
                                                    punctuation: /^<<[-~]?'|'$/,
                                                },
                                            },
                                            string: /[\s\S]+/,
                                        },
                                    },
                                ],
                                "command-literal": [
                                    {
                                        pattern: RegExp(/%x/.source + w),
                                        greedy: !0,
                                        inside: {
                                            interpolation: y,
                                            command: {
                                                pattern: /[\s\S]+/,
                                                alias: "string",
                                            },
                                        },
                                    },
                                    {
                                        pattern:
                                            /`(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|[^\\`#\r\n])*`/,
                                        greedy: !0,
                                        inside: {
                                            interpolation: y,
                                            command: {
                                                pattern: /[\s\S]+/,
                                                alias: "string",
                                            },
                                        },
                                    },
                                ],
                            }),
                            delete v.languages.ruby.string,
                            v.languages.insertBefore("ruby", "number", {
                                builtin:
                                    /\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\b/,
                                constant: /\b[A-Z][A-Z0-9_]*(?:[?!]|\b)/,
                            }),
                            (v.languages.rb = v.languages.ruby),
                            ((E = j).languages.php = E.languages.extend(
                                "clike",
                                {
                                    keyword:
                                        /\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\b/i,
                                    constant: /\b[A-Z0-9_]{2,}\b/,
                                    comment: {
                                        pattern:
                                            /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
                                        lookbehind: !0,
                                    },
                                }
                            )),
                            E.languages.insertBefore("php", "string", {
                                "shell-comment": {
                                    pattern: /(^|[^\\])#.*/,
                                    lookbehind: !0,
                                    alias: "comment",
                                },
                            }),
                            E.languages.insertBefore("php", "keyword", {
                                delimiter: {
                                    pattern: /\?>|<\?(?:php|=)?/i,
                                    alias: "important",
                                },
                                variable: /\$+(?:\w+\b|(?={))/i,
                                package: {
                                    pattern: /(\\|namespace\s+|use\s+)[\w\\]+/,
                                    lookbehind: !0,
                                    inside: { punctuation: /\\/ },
                                },
                            }),
                            E.languages.insertBefore("php", "operator", {
                                property: {
                                    pattern: /(->)[\w]+/,
                                    lookbehind: !0,
                                },
                            }),
                            E.languages.insertBefore("php", "string", {
                                "nowdoc-string": {
                                    pattern:
                                        /<<<'([^']+)'(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;/,
                                    greedy: !0,
                                    alias: "string",
                                    inside: {
                                        delimiter: {
                                            pattern: /^<<<'[^']+'|[a-z_]\w*;$/i,
                                            alias: "symbol",
                                            inside: {
                                                punctuation: /^<<<'?|[';]$/,
                                            },
                                        },
                                    },
                                },
                                "heredoc-string": {
                                    pattern:
                                        /<<<(?:"([^"]+)"(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;|([a-z_]\w*)(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\2;)/i,
                                    greedy: !0,
                                    alias: "string",
                                    inside: {
                                        delimiter: {
                                            pattern:
                                                /^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,
                                            alias: "symbol",
                                            inside: {
                                                punctuation: /^<<<"?|[";]$/,
                                            },
                                        },
                                        interpolation: null,
                                    },
                                },
                                "single-quoted-string": {
                                    pattern: /'(?:\\[\s\S]|[^\\'])*'/,
                                    greedy: !0,
                                    alias: "string",
                                },
                                "double-quoted-string": {
                                    pattern: /"(?:\\[\s\S]|[^\\"])*"/,
                                    greedy: !0,
                                    alias: "string",
                                    inside: { interpolation: null },
                                },
                            }),
                            delete E.languages.php.string,
                            (A = {
                                pattern:
                                    /{\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\{])\$+(?:\w+(?:\[.+?]|->\w+)*)/,
                                lookbehind: !0,
                                inside: { rest: E.languages.php },
                            }),
                            (E.languages.php[
                                "heredoc-string"
                            ].inside.interpolation = A),
                            (E.languages.php[
                                "double-quoted-string"
                            ].inside.interpolation = A),
                            E.hooks.add("before-tokenize", function (t) {
                                /(?:<\?php|<\?)/gi.test(t.code) &&
                                    E.languages[
                                        "markup-templating"
                                    ].buildPlaceholders(
                                        t,
                                        "php",
                                        /(?:<\?php|<\?)[\s\S]*?(?:\?>|$)/gi
                                    );
                            }),
                            E.hooks.add("after-tokenize", function (t) {
                                E.languages[
                                    "markup-templating"
                                ].tokenizePlaceholders(t, "php");
                            }),
                            (j.languages.typescript = j.languages.extend(
                                "javascript",
                                {
                                    keyword:
                                        /\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|module|declare|constructor|namespace|abstract|require|type)\b/,
                                    builtin:
                                        /\b(?:string|Function|any|number|boolean|Array|symbol|console)\b/,
                                }
                            )),
                            (j.languages.ts = j.languages.typescript),
                            (j.languages.scss = j.languages.extend("css", {
                                comment: {
                                    pattern:
                                        /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
                                    lookbehind: !0,
                                },
                                atrule: {
                                    pattern:
                                        /@[\w-]+(?:\([^()]+\)|[^(])*?(?=\s+[{;])/,
                                    inside: { rule: /@[\w-]+/ },
                                },
                                url: /(?:[-a-z]+-)*url(?=\()/i,
                                selector: {
                                    pattern:
                                        /(?=\S)[^@;{}()]?(?:[^@;{}()]|&|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}]+[:{][^}]+))/m,
                                    inside: {
                                        parent: {
                                            pattern: /&/,
                                            alias: "important",
                                        },
                                        placeholder: /%[-\w]+/,
                                        variable: /\$[-\w]+|#\{\$[-\w]+\}/,
                                    },
                                },
                            })),
                            j.languages.insertBefore("scss", "atrule", {
                                keyword: [
                                    /@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,
                                    {
                                        pattern: /( +)(?:from|through)(?= )/,
                                        lookbehind: !0,
                                    },
                                ],
                            }),
                            (j.languages.scss.property = {
                                pattern:
                                    /(?:[\w-]|\$[-\w]+|#\{\$[-\w]+\})+(?=\s*:)/i,
                                inside: { variable: /\$[-\w]+|#\{\$[-\w]+\}/ },
                            }),
                            j.languages.insertBefore("scss", "important", {
                                variable: /\$[-\w]+|#\{\$[-\w]+\}/,
                            }),
                            j.languages.insertBefore("scss", "function", {
                                placeholder: {
                                    pattern: /%[-\w]+/,
                                    alias: "selector",
                                },
                                statement: {
                                    pattern: /\B!(?:default|optional)\b/i,
                                    alias: "keyword",
                                },
                                boolean: /\b(?:true|false)\b/,
                                null: /\bnull\b/,
                                operator: {
                                    pattern:
                                        /(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|or|not)(?=\s)/,
                                    lookbehind: !0,
                                },
                            }),
                            (j.languages.scss.atrule.inside.rest =
                                j.languages.scss),
                            "undefined" != typeof self &&
                                self.Prism &&
                                self.document &&
                                ((S = "line-numbers"),
                                (k = /\n(?!$)/g),
                                (x = function (t) {
                                    var e,
                                        n,
                                        i = (
                                            (i = t)
                                                ? window.getComputedStyle
                                                    ? getComputedStyle(i)
                                                    : i.currentStyle || null
                                                : null
                                        )["white-space"];
                                    ("pre-wrap" !== i && "pre-line" !== i) ||
                                        ((i = t.querySelector("code")),
                                        (e =
                                            t.querySelector(
                                                ".line-numbers-rows"
                                            )),
                                        (n = t.querySelector(
                                            ".line-numbers-sizer"
                                        )),
                                        (t = i.textContent.split(k)),
                                        n ||
                                            (((n =
                                                document.createElement(
                                                    "span"
                                                )).className =
                                                "line-numbers-sizer"),
                                            i.appendChild(n)),
                                        (n.style.display = "block"),
                                        t.forEach(function (t, i) {
                                            (n.textContent = t || "\n"),
                                                (t =
                                                    n.getBoundingClientRect()
                                                        .height),
                                                (e.children[i].style.height =
                                                    t + "px");
                                        }),
                                        (n.textContent = ""),
                                        (n.style.display = "none"));
                                }),
                                window.addEventListener("resize", function () {
                                    Array.prototype.forEach.call(
                                        document.querySelectorAll("pre." + S),
                                        x
                                    );
                                }),
                                j.hooks.add("complete", function (t) {
                                    var e, n, i;
                                    t.code &&
                                        ((n = /\s*\bline-numbers\b\s*/),
                                        (e = t.element.parentNode)) &&
                                        /pre/i.test(e.nodeName) &&
                                        (n.test(e.className) ||
                                            n.test(t.element.className)) &&
                                        (t.element.querySelector(
                                            ".line-numbers-rows"
                                        ) ||
                                            (n.test(t.element.className) &&
                                                (t.element.className =
                                                    t.element.className.replace(
                                                        n,
                                                        " "
                                                    )),
                                            n.test(e.className) ||
                                                (e.className +=
                                                    " line-numbers"),
                                            (n = (n = t.code.match(k))
                                                ? n.length + 1
                                                : 1),
                                            (n = (n = new Array(n + 1)).join(
                                                "<span></span>"
                                            )),
                                            (i =
                                                document.createElement(
                                                    "span"
                                                )).setAttribute(
                                                "aria-hidden",
                                                "true"
                                            ),
                                            (i.className = "line-numbers-rows"),
                                            (i.innerHTML = n),
                                            e.hasAttribute("data-start") &&
                                                (e.style.counterReset =
                                                    "linenumber " +
                                                    (parseInt(
                                                        e.getAttribute(
                                                            "data-start"
                                                        ),
                                                        10
                                                    ) -
                                                        1)),
                                            t.element.appendChild(i),
                                            x(e),
                                            j.hooks.run("line-numbers", t)));
                                }),
                                j.hooks.add("line-numbers", function (t) {
                                    (t.plugins = t.plugins || {}),
                                        (t.plugins.lineNumbers = !0);
                                }),
                                (j.plugins.lineNumbers = {
                                    getLine: function (t, e) {
                                        var n, i;
                                        if (
                                            "PRE" === t.tagName &&
                                            t.classList.contains(S)
                                        )
                                            return (
                                                (n =
                                                    t.querySelector(
                                                        ".line-numbers-rows"
                                                    )),
                                                (i =
                                                    (e =
                                                        (i =
                                                            (t =
                                                                parseInt(
                                                                    t.getAttribute(
                                                                        "data-start"
                                                                    ),
                                                                    10
                                                                ) || 1) +
                                                            (n.children.length -
                                                                1)) <
                                                        (e = e < t ? t : e)
                                                            ? i
                                                            : e) - t),
                                                n.children[i]
                                            );
                                    },
                                })),
                            "undefined" != typeof self &&
                                self.Prism &&
                                self.document &&
                                ((T = []),
                                (O = {}),
                                (L = function () {}),
                                (j.plugins.toolbar = {}),
                                (M = j.plugins.toolbar.registerButton =
                                    function (t, e) {
                                        var n =
                                            "function" == typeof e
                                                ? e
                                                : function (t) {
                                                      var n;
                                                      return (
                                                          "function" ==
                                                          typeof e.onClick
                                                              ? (((n =
                                                                    document.createElement(
                                                                        "button"
                                                                    )).type =
                                                                    "button"),
                                                                n.addEventListener(
                                                                    "click",
                                                                    function () {
                                                                        e.onClick.call(
                                                                            this,
                                                                            t
                                                                        );
                                                                    }
                                                                ))
                                                              : "string" ==
                                                                typeof e.url
                                                              ? ((n =
                                                                    document.createElement(
                                                                        "a"
                                                                    )).href =
                                                                    e.url)
                                                              : (n =
                                                                    document.createElement(
                                                                        "span"
                                                                    )),
                                                          (n.textContent =
                                                              e.text),
                                                          n
                                                      );
                                                  };
                                        T.push((O[t] = n));
                                    }),
                                (e = j.plugins.toolbar.hook =
                                    function (t) {
                                        var e,
                                            n,
                                            i = t.element.parentNode;
                                        i &&
                                            /pre/i.test(i.nodeName) &&
                                            (i.parentNode.classList.contains(
                                                "code-toolbar"
                                            ) ||
                                                ((e =
                                                    document.createElement(
                                                        "div"
                                                    )).classList.add(
                                                    "code-toolbar"
                                                ),
                                                i.parentNode.insertBefore(e, i),
                                                e.appendChild(i),
                                                (n =
                                                    document.createElement(
                                                        "div"
                                                    )).classList.add("toolbar"),
                                                (T = document.body.hasAttribute(
                                                    "data-toolbar-order"
                                                )
                                                    ? document.body
                                                          .getAttribute(
                                                              "data-toolbar-order"
                                                          )
                                                          .split(",")
                                                          .map(function (t) {
                                                              return O[t] || L;
                                                          })
                                                    : T).forEach(function (e) {
                                                    var i;
                                                    (e = e(t)) &&
                                                        ((i =
                                                            document.createElement(
                                                                "div"
                                                            )).classList.add(
                                                            "toolbar-item"
                                                        ),
                                                        i.appendChild(e),
                                                        n.appendChild(i));
                                                }),
                                                e.appendChild(n)));
                                    }),
                                M("label", function (t) {
                                    if (
                                        (t = t.element.parentNode) &&
                                        /pre/i.test(t.nodeName) &&
                                        t.hasAttribute("data-label")
                                    ) {
                                        var e,
                                            n,
                                            i = t.getAttribute("data-label");
                                        try {
                                            n = document.querySelector(
                                                "template#" + i
                                            );
                                        } catch (s) {}
                                        return (
                                            n
                                                ? (e = n.content)
                                                : (t.hasAttribute("data-url")
                                                      ? ((e =
                                                            document.createElement(
                                                                "a"
                                                            )).href =
                                                            t.getAttribute(
                                                                "data-url"
                                                            ))
                                                      : (e =
                                                            document.createElement(
                                                                "span"
                                                            )),
                                                  (e.textContent = i)),
                                            e
                                        );
                                    }
                                }),
                                j.hooks.add("complete", e)),
                            ("undefined" == typeof self || self.Prism) &&
                                self.document &&
                                Function.prototype.bind)
                        ) {
                            var V,
                                K,
                                q = {
                                    gradient: {
                                        create:
                                            ((V = {}),
                                            function () {
                                                new j.plugins.Previewer(
                                                    "gradient",
                                                    function (t) {
                                                        return (
                                                            (this.firstChild.style.backgroundImage =
                                                                ""),
                                                            (this.firstChild.style.backgroundImage =
                                                                (function (t) {
                                                                    var e,
                                                                        n,
                                                                        i,
                                                                        s,
                                                                        o,
                                                                        r,
                                                                        a,
                                                                        l;
                                                                    return (
                                                                        V[t] ||
                                                                        ((o =
                                                                            (e =
                                                                                t.match(
                                                                                    /^(\b|\B-[a-z]{1,10}-)((?:repeating-)?(?:linear|radial)-gradient)/
                                                                                )) &&
                                                                            e[1]),
                                                                        (e =
                                                                            e &&
                                                                            e[2]),
                                                                        (n = t
                                                                            .replace(
                                                                                /^(?:\b|\B-[a-z]{1,10}-)(?:repeating-)?(?:linear|radial)-gradient\(|\)$/g,
                                                                                ""
                                                                            )
                                                                            .split(
                                                                                /\s*,\s*/
                                                                            )),
                                                                        0 <=
                                                                        e.indexOf(
                                                                            "linear"
                                                                        )
                                                                            ? (V[
                                                                                  t
                                                                              ] =
                                                                                  ((r =
                                                                                      e),
                                                                                  (l =
                                                                                      "180deg"),
                                                                                  /^(?:-?\d*\.?\d+(?:deg|rad)|to\b|top|right|bottom|left)/.test(
                                                                                      (a =
                                                                                          n)[0]
                                                                                  ) &&
                                                                                      (l =
                                                                                          a.shift()).indexOf(
                                                                                          "to "
                                                                                      ) <
                                                                                          0 &&
                                                                                      (0 <=
                                                                                      l.indexOf(
                                                                                          "top"
                                                                                      )
                                                                                          ? (l =
                                                                                                0 <=
                                                                                                l.indexOf(
                                                                                                    "left"
                                                                                                )
                                                                                                    ? "to bottom right"
                                                                                                    : 0 <=
                                                                                                      l.indexOf(
                                                                                                          "right"
                                                                                                      )
                                                                                                    ? "to bottom left"
                                                                                                    : "to bottom")
                                                                                          : 0 <=
                                                                                            l.indexOf(
                                                                                                "bottom"
                                                                                            )
                                                                                          ? (l =
                                                                                                0 <=
                                                                                                l.indexOf(
                                                                                                    "left"
                                                                                                )
                                                                                                    ? "to top right"
                                                                                                    : 0 <=
                                                                                                      l.indexOf(
                                                                                                          "right"
                                                                                                      )
                                                                                                    ? "to top left"
                                                                                                    : "to top")
                                                                                          : 0 <=
                                                                                            l.indexOf(
                                                                                                "left"
                                                                                            )
                                                                                          ? (l =
                                                                                                "to right")
                                                                                          : 0 <=
                                                                                            l.indexOf(
                                                                                                "right"
                                                                                            )
                                                                                          ? (l =
                                                                                                "to left")
                                                                                          : o &&
                                                                                            (0 <=
                                                                                            l.indexOf(
                                                                                                "deg"
                                                                                            )
                                                                                                ? (l =
                                                                                                      90 -
                                                                                                      parseFloat(
                                                                                                          l
                                                                                                      ) +
                                                                                                      "deg")
                                                                                                : 0 <=
                                                                                                      l.indexOf(
                                                                                                          "rad"
                                                                                                      ) &&
                                                                                                  (l =
                                                                                                      Math.PI /
                                                                                                          2 -
                                                                                                      parseFloat(
                                                                                                          l
                                                                                                      ) +
                                                                                                      "rad"))),
                                                                                  r +
                                                                                      "(" +
                                                                                      l +
                                                                                      "," +
                                                                                      a.join(
                                                                                          ","
                                                                                      ) +
                                                                                      ")"))
                                                                            : 0 <=
                                                                              e.indexOf(
                                                                                  "radial"
                                                                              )
                                                                            ? (V[
                                                                                  t
                                                                              ] =
                                                                                  ((o =
                                                                                      e),
                                                                                  (r =
                                                                                      n)[0].indexOf(
                                                                                      "at"
                                                                                  ) <
                                                                                  0
                                                                                      ? ((l =
                                                                                            "center"),
                                                                                        (a =
                                                                                            "ellipse"),
                                                                                        (i =
                                                                                            "farthest-corner"),
                                                                                        /\bcenter|top|right|bottom|left\b|^\d+/.test(
                                                                                            r[0]
                                                                                        ) &&
                                                                                            (l =
                                                                                                r
                                                                                                    .shift()
                                                                                                    .replace(
                                                                                                        /\s*-?\d+(?:rad|deg)\s*/,
                                                                                                        ""
                                                                                                    )),
                                                                                        /\bcircle|ellipse|closest|farthest|contain|cover\b/.test(
                                                                                            r[0]
                                                                                        ) &&
                                                                                            (!(s =
                                                                                                r
                                                                                                    .shift()
                                                                                                    .split(
                                                                                                        /\s+/
                                                                                                    ))[0] ||
                                                                                                ("circle" !==
                                                                                                    s[0] &&
                                                                                                    "ellipse" !==
                                                                                                        s[0]) ||
                                                                                                (a =
                                                                                                    s.shift()),
                                                                                            "cover" ===
                                                                                            (i =
                                                                                                s[0]
                                                                                                    ? s.shift()
                                                                                                    : i)
                                                                                                ? (i =
                                                                                                      "farthest-corner")
                                                                                                : "contain" ===
                                                                                                      i &&
                                                                                                  (i =
                                                                                                      "clothest-side")),
                                                                                        o +
                                                                                            "(" +
                                                                                            a +
                                                                                            " " +
                                                                                            i +
                                                                                            " at " +
                                                                                            l +
                                                                                            "," +
                                                                                            r.join(
                                                                                                ","
                                                                                            ) +
                                                                                            ")")
                                                                                      : o +
                                                                                        "(" +
                                                                                        r.join(
                                                                                            ","
                                                                                        ) +
                                                                                        ")"))
                                                                            : (V[
                                                                                  t
                                                                              ] =
                                                                                  e +
                                                                                  "(" +
                                                                                  n.join(
                                                                                      ","
                                                                                  ) +
                                                                                  ")"))
                                                                    );
                                                                })(t)),
                                                            !!this.firstChild
                                                                .style
                                                                .backgroundImage
                                                        );
                                                    },
                                                    "*",
                                                    function () {
                                                        this._elt.innerHTML =
                                                            "<div></div>";
                                                    }
                                                );
                                            }),
                                        tokens: {
                                            gradient: {
                                                pattern:
                                                    /(?:\b|\B-[a-z]{1,10}-)(?:repeating-)?(?:linear|radial)-gradient\((?:(?:rgb|hsl)a?\(.+?\)|[^\)])+\)/gi,
                                                inside: {
                                                    function: /[\w-]+(?=\()/,
                                                    punctuation: /[(),]/,
                                                },
                                            },
                                        },
                                        languages: {
                                            css: !0,
                                            less: !0,
                                            sass: [
                                                {
                                                    lang: "sass",
                                                    before: "punctuation",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "variable-line"
                                                        ],
                                                },
                                                {
                                                    lang: "sass",
                                                    before: "punctuation",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "property-line"
                                                        ],
                                                },
                                            ],
                                            scss: !0,
                                            stylus: [
                                                {
                                                    lang: "stylus",
                                                    before: "func",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "property-declaration"
                                                        ].inside,
                                                },
                                                {
                                                    lang: "stylus",
                                                    before: "func",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "variable-declaration"
                                                        ].inside,
                                                },
                                            ],
                                        },
                                    },
                                    angle: {
                                        create: function () {
                                            new j.plugins.Previewer(
                                                "angle",
                                                function (t) {
                                                    var e,
                                                        n = parseFloat(t);
                                                    t = t.match(/[a-z]+$/i);
                                                    if (!n || !t) return !1;
                                                    switch (t[0]) {
                                                        case "deg":
                                                            e = 360;
                                                            break;
                                                        case "grad":
                                                            e = 400;
                                                            break;
                                                        case "rad":
                                                            e = 2 * Math.PI;
                                                            break;
                                                        case "turn":
                                                            e = 1;
                                                    }
                                                    return (
                                                        (t = (100 * n) / e),
                                                        (t %= 100),
                                                        this[
                                                            (n < 0
                                                                ? "set"
                                                                : "remove") +
                                                                "Attribute"
                                                        ]("data-negative", ""),
                                                        (this.querySelector(
                                                            "circle"
                                                        ).style.strokeDasharray =
                                                            Math.abs(t) +
                                                            ",500"),
                                                        !0
                                                    );
                                                },
                                                "*",
                                                function () {
                                                    this._elt.innerHTML =
                                                        '<svg viewBox="0 0 64 64"><circle r="16" cy="32" cx="32"></circle></svg>';
                                                }
                                            );
                                        },
                                        tokens: {
                                            angle: /(?:\b|\B-|(?=\B\.))\d*\.?\d+(?:deg|g?rad|turn)\b/i,
                                        },
                                        languages: {
                                            css: !0,
                                            less: !0,
                                            markup: {
                                                lang: "markup",
                                                before: "punctuation",
                                                inside: "inside",
                                                root:
                                                    j.languages.markup &&
                                                    j.languages.markup.tag
                                                        .inside["attr-value"],
                                            },
                                            sass: [
                                                {
                                                    lang: "sass",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "property-line"
                                                        ],
                                                },
                                                {
                                                    lang: "sass",
                                                    before: "operator",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "variable-line"
                                                        ],
                                                },
                                            ],
                                            scss: !0,
                                            stylus: [
                                                {
                                                    lang: "stylus",
                                                    before: "func",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "property-declaration"
                                                        ].inside,
                                                },
                                                {
                                                    lang: "stylus",
                                                    before: "func",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "variable-declaration"
                                                        ].inside,
                                                },
                                            ],
                                        },
                                    },
                                    color: {
                                        create: function () {
                                            new j.plugins.Previewer(
                                                "color",
                                                function (t) {
                                                    return (
                                                        (this.style.backgroundColor =
                                                            ""),
                                                        (this.style.backgroundColor =
                                                            t),
                                                        !!this.style
                                                            .backgroundColor
                                                    );
                                                }
                                            );
                                        },
                                        tokens: {
                                            color: {
                                                pattern:
                                                    /\B#(?:[0-9a-f]{3}){1,2}\b|\b(?:rgb|hsl)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:rgb|hsl)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B|\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGray|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGray|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGray|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gray|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGray|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGray|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGray|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i,
                                                inside: {
                                                    function: /[\w-]+(?=\()/,
                                                    punctuation: /[(),]/,
                                                },
                                            },
                                        },
                                        languages: {
                                            css: !0,
                                            less: !0,
                                            markup: {
                                                lang: "markup",
                                                before: "punctuation",
                                                inside: "inside",
                                                root:
                                                    j.languages.markup &&
                                                    j.languages.markup.tag
                                                        .inside["attr-value"],
                                            },
                                            sass: [
                                                {
                                                    lang: "sass",
                                                    before: "punctuation",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "variable-line"
                                                        ],
                                                },
                                                {
                                                    lang: "sass",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "property-line"
                                                        ],
                                                },
                                            ],
                                            scss: !0,
                                            stylus: [
                                                {
                                                    lang: "stylus",
                                                    before: "hexcode",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "property-declaration"
                                                        ].inside,
                                                },
                                                {
                                                    lang: "stylus",
                                                    before: "hexcode",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "variable-declaration"
                                                        ].inside,
                                                },
                                            ],
                                        },
                                    },
                                    easing: {
                                        create: function () {
                                            new j.plugins.Previewer(
                                                "easing",
                                                function (t) {
                                                    var e;
                                                    return (
                                                        4 ===
                                                            (t = (t =
                                                                {
                                                                    linear: "0,0,1,1",
                                                                    ease: ".25,.1,.25,1",
                                                                    "ease-in":
                                                                        ".42,0,1,1",
                                                                    "ease-out":
                                                                        "0,0,.58,1",
                                                                    "ease-in-out":
                                                                        ".42,0,.58,1",
                                                                }[t] ||
                                                                t).match(
                                                                /-?\d*\.?\d+/g
                                                            )).length &&
                                                        ((t = t.map(function (
                                                            t,
                                                            e
                                                        ) {
                                                            return (
                                                                100 *
                                                                (e % 2
                                                                    ? 1 - t
                                                                    : t)
                                                            );
                                                        })),
                                                        this.querySelector(
                                                            "path"
                                                        ).setAttribute(
                                                            "d",
                                                            "M0,100 C" +
                                                                t[0] +
                                                                "," +
                                                                t[1] +
                                                                ", " +
                                                                t[2] +
                                                                "," +
                                                                t[3] +
                                                                ", 100,0"
                                                        ),
                                                        (e =
                                                            this.querySelectorAll(
                                                                "line"
                                                            ))[0].setAttribute(
                                                            "x2",
                                                            t[0]
                                                        ),
                                                        e[0].setAttribute(
                                                            "y2",
                                                            t[1]
                                                        ),
                                                        e[1].setAttribute(
                                                            "x2",
                                                            t[2]
                                                        ),
                                                        e[1].setAttribute(
                                                            "y2",
                                                            t[3]
                                                        ),
                                                        !0)
                                                    );
                                                },
                                                "*",
                                                function () {
                                                    this._elt.innerHTML =
                                                        '<svg viewBox="-20 -20 140 140" width="100" height="100"><defs><marker id="prism-previewer-easing-marker" viewBox="0 0 4 4" refX="2" refY="2" markerUnits="strokeWidth"><circle cx="2" cy="2" r="1.5" /></marker></defs><path d="M0,100 C20,50, 40,30, 100,0" /><line x1="0" y1="100" x2="20" y2="50" marker-start="url(' +
                                                        location.href +
                                                        '#prism-previewer-easing-marker)" marker-end="url(' +
                                                        location.href +
                                                        '#prism-previewer-easing-marker)" /><line x1="100" y1="0" x2="40" y2="30" marker-start="url(' +
                                                        location.href +
                                                        '#prism-previewer-easing-marker)" marker-end="url(' +
                                                        location.href +
                                                        '#prism-previewer-easing-marker)" /></svg>';
                                                }
                                            );
                                        },
                                        tokens: {
                                            easing: {
                                                pattern:
                                                    /\bcubic-bezier\((?:-?\d*\.?\d+,\s*){3}-?\d*\.?\d+\)\B|\b(?:linear|ease(?:-in)?(?:-out)?)(?=\s|[;}]|$)/i,
                                                inside: {
                                                    function: /[\w-]+(?=\()/,
                                                    punctuation: /[(),]/,
                                                },
                                            },
                                        },
                                        languages: {
                                            css: !0,
                                            less: !0,
                                            sass: [
                                                {
                                                    lang: "sass",
                                                    inside: "inside",
                                                    before: "punctuation",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "variable-line"
                                                        ],
                                                },
                                                {
                                                    lang: "sass",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "property-line"
                                                        ],
                                                },
                                            ],
                                            scss: !0,
                                            stylus: [
                                                {
                                                    lang: "stylus",
                                                    before: "hexcode",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "property-declaration"
                                                        ].inside,
                                                },
                                                {
                                                    lang: "stylus",
                                                    before: "hexcode",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "variable-declaration"
                                                        ].inside,
                                                },
                                            ],
                                        },
                                    },
                                    time: {
                                        create: function () {
                                            new j.plugins.Previewer(
                                                "time",
                                                function (t) {
                                                    var e = parseFloat(t);
                                                    t = t.match(/[a-z]+$/i);
                                                    return !(
                                                        !e ||
                                                        !t ||
                                                        ((t = t[0]),
                                                        (this.querySelector(
                                                            "circle"
                                                        ).style.animationDuration =
                                                            2 * e + t),
                                                        0)
                                                    );
                                                },
                                                "*",
                                                function () {
                                                    this._elt.innerHTML =
                                                        '<svg viewBox="0 0 64 64"><circle r="16" cy="32" cx="32"></circle></svg>';
                                                }
                                            );
                                        },
                                        tokens: {
                                            time: /(?:\b|\B-|(?=\B\.))\d*\.?\d+m?s\b/i,
                                        },
                                        languages: {
                                            css: !0,
                                            less: !0,
                                            markup: {
                                                lang: "markup",
                                                before: "punctuation",
                                                inside: "inside",
                                                root:
                                                    j.languages.markup &&
                                                    j.languages.markup.tag
                                                        .inside["attr-value"],
                                            },
                                            sass: [
                                                {
                                                    lang: "sass",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "property-line"
                                                        ],
                                                },
                                                {
                                                    lang: "sass",
                                                    before: "operator",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "variable-line"
                                                        ],
                                                },
                                            ],
                                            scss: !0,
                                            stylus: [
                                                {
                                                    lang: "stylus",
                                                    before: "hexcode",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "property-declaration"
                                                        ].inside,
                                                },
                                                {
                                                    lang: "stylus",
                                                    before: "hexcode",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "variable-declaration"
                                                        ].inside,
                                                },
                                            ],
                                        },
                                    },
                                },
                                U = /(?:^|\s)token(?=$|\s)/,
                                G = /(?:^|\s)active(?=$|\s)/g,
                                Z = /(?:^|\s)flipped(?=$|\s)/g,
                                Q = function (t, e, n, i) {
                                    (this._elt = null),
                                        (this._type = t),
                                        (this._clsRegexp = RegExp(
                                            "(?:^|\\s)" + t + "(?=$|\\s)"
                                        )),
                                        (this._token = null),
                                        (this.updater = e),
                                        (this._mouseout =
                                            this.mouseout.bind(this)),
                                        (this.initializer = i);
                                    var s = this;
                                    (n =
                                        "Array" !==
                                        j.util.type((n = n || ["*"]))
                                            ? [n]
                                            : n).forEach(function (t) {
                                        "string" != typeof t && (t = t.lang),
                                            Q.byLanguages[t] ||
                                                (Q.byLanguages[t] = []),
                                            Q.byLanguages[t].indexOf(s) < 0 &&
                                                Q.byLanguages[t].push(s);
                                    }),
                                        (Q.byType[t] = this);
                                };
                            for (K in ((Q.prototype.init = function () {
                                this._elt ||
                                    ((this._elt =
                                        document.createElement("div")),
                                    (this._elt.className =
                                        "prism-previewer prism-previewer-" +
                                        this._type),
                                    document.body.appendChild(this._elt),
                                    this.initializer && this.initializer());
                            }),
                            (Q.prototype.isDisabled = function (t) {
                                do {
                                    if (
                                        t.hasAttribute &&
                                        t.hasAttribute("data-previewers")
                                    )
                                        return (
                                            -1 ===
                                            (
                                                t.getAttribute(
                                                    "data-previewers"
                                                ) || ""
                                            )
                                                .split(/\s+/)
                                                .indexOf(this._type)
                                        );
                                } while ((t = t.parentNode));
                                return !1;
                            }),
                            (Q.prototype.check = function (t) {
                                if (
                                    !U.test(t.className) ||
                                    !this.isDisabled(t)
                                ) {
                                    do {
                                        if (
                                            U.test(t.className) &&
                                            this._clsRegexp.test(t.className)
                                        )
                                            break;
                                    } while ((t = t.parentNode));
                                    t &&
                                        t !== this._token &&
                                        ((this._token = t), this.show());
                                }
                            }),
                            (Q.prototype.mouseout = function () {
                                this._token.removeEventListener(
                                    "mouseout",
                                    this._mouseout,
                                    !1
                                ),
                                    (this._token = null),
                                    this.hide();
                            }),
                            (Q.prototype.show = function () {
                                var t;
                                this._elt || this.init(),
                                    this._token &&
                                        (this.updater.call(
                                            this._elt,
                                            this._token.textContent
                                        )
                                            ? (this._token.addEventListener(
                                                  "mouseout",
                                                  this._mouseout,
                                                  !1
                                              ),
                                              (t = (function (t) {
                                                  var e = 0,
                                                      n = 0,
                                                      i = t;
                                                  if (i.parentNode) {
                                                      for (
                                                          ;
                                                          (e += i.offsetLeft),
                                                              (n +=
                                                                  i.offsetTop),
                                                              (i =
                                                                  i.offsetParent) &&
                                                                  i.nodeType <
                                                                      9;

                                                      );
                                                      for (
                                                          i = t;
                                                          (e -= i.scrollLeft),
                                                              (n -=
                                                                  i.scrollTop),
                                                              (i =
                                                                  i.parentNode) &&
                                                                  !/body/i.test(
                                                                      i.nodeName
                                                                  );

                                                      );
                                                  }
                                                  return {
                                                      top: n,
                                                      right:
                                                          innerWidth -
                                                          e -
                                                          t.offsetWidth,
                                                      bottom:
                                                          innerHeight -
                                                          n -
                                                          t.offsetHeight,
                                                      left: e,
                                                  };
                                              })(this._token)),
                                              (this._elt.className +=
                                                  " active"),
                                              0 < t.top - this._elt.offsetHeight
                                                  ? ((this._elt.className =
                                                        this._elt.className.replace(
                                                            Z,
                                                            ""
                                                        )),
                                                    (this._elt.style.top =
                                                        t.top + "px"),
                                                    (this._elt.style.bottom =
                                                        ""))
                                                  : ((this._elt.className +=
                                                        " flipped"),
                                                    (this._elt.style.bottom =
                                                        t.bottom + "px"),
                                                    (this._elt.style.top = "")),
                                              (this._elt.style.left =
                                                  t.left +
                                                  Math.min(
                                                      200,
                                                      this._token.offsetWidth /
                                                          2
                                                  ) +
                                                  "px"))
                                            : this.hide());
                            }),
                            (Q.prototype.hide = function () {
                                this._elt.className =
                                    this._elt.className.replace(G, "");
                            }),
                            (Q.byLanguages = {}),
                            (Q.byType = {}),
                            (Q.initEvents = function (t, e) {
                                var n = [];
                                Q.byLanguages[e] &&
                                    (n = n.concat(Q.byLanguages[e])),
                                    Q.byLanguages["*"] &&
                                        (n = n.concat(Q.byLanguages["*"])),
                                    t.addEventListener(
                                        "mouseover",
                                        function (t) {
                                            var e = t.target;
                                            n.forEach(function (t) {
                                                t.check(e);
                                            });
                                        },
                                        !1
                                    );
                            }),
                            (j.plugins.Previewer = Q),
                            j.hooks.add("before-highlight", function (t) {
                                for (var e in q) {
                                    var n,
                                        i = q[e].languages;
                                    t.language &&
                                        i[t.language] &&
                                        !i[t.language].initialized &&
                                        ((n = i[t.language]),
                                        (n =
                                            "Array" !== j.util.type(n)
                                                ? [n]
                                                : n).forEach(function (n) {
                                            var s, o, r, a;
                                            !0 === n
                                                ? ((s = "important"),
                                                  (o = t.language))
                                                : ((s =
                                                      n.before || "important"),
                                                  (o = n.inside || n.lang),
                                                  (r = n.root || j.languages),
                                                  (a = n.skip)),
                                                (n = t.language),
                                                !a &&
                                                    j.languages[n] &&
                                                    (j.languages.insertBefore(
                                                        o,
                                                        s,
                                                        q[e].tokens,
                                                        r
                                                    ),
                                                    (t.grammar =
                                                        j.languages[n]),
                                                    (i[t.language] = {
                                                        initialized: !0,
                                                    }));
                                        }));
                                }
                            }),
                            j.hooks.add("after-highlight", function (t) {
                                (Q.byLanguages["*"] ||
                                    Q.byLanguages[t.language]) &&
                                    Q.initEvents(t.element, t.language);
                            }),
                            q))
                                q[K].create();
                        }
                        function J(t) {
                            this.defaults = D({}, t);
                        }
                        function tt(t) {
                            for (var e = 0, n = 0; n < t.length; ++n)
                                t.charCodeAt(n) == "\t".charCodeAt(0) &&
                                    (e += 3);
                            return t.length + e;
                        }
                        (D =
                            Object.assign ||
                            function (t, e) {
                                for (var n in e)
                                    e.hasOwnProperty(n) && (t[n] = e[n]);
                                return t;
                            }),
                            (J.prototype = {
                                setDefaults: function (t) {
                                    this.defaults = D(this.defaults, t);
                                },
                                normalize: function (t, e) {
                                    for (var n in (e = D(this.defaults, e))) {
                                        var i = n.replace(
                                            /-(\w)/g,
                                            function (t, e) {
                                                return e.toUpperCase();
                                            }
                                        );
                                        "normalize" !== n &&
                                            "setDefaults" !== i &&
                                            e[n] &&
                                            this[i] &&
                                            (t = this[i].call(this, t, e[n]));
                                    }
                                    return t;
                                },
                                leftTrim: function (t) {
                                    return t.replace(/^\s+/, "");
                                },
                                rightTrim: function (t) {
                                    return t.replace(/\s+$/, "");
                                },
                                tabsToSpaces: function (t, e) {
                                    return (
                                        (e = 0 | e || 4),
                                        t.replace(
                                            /\t/g,
                                            new Array(++e).join(" ")
                                        )
                                    );
                                },
                                spacesToTabs: function (t, e) {
                                    return (
                                        (e = 0 | e || 4),
                                        t.replace(
                                            new RegExp(" {" + e + "}", "g"),
                                            "\t"
                                        )
                                    );
                                },
                                removeTrailing: function (t) {
                                    return t.replace(/\s*?$/gm, "");
                                },
                                removeInitialLineFeed: function (t) {
                                    return t.replace(/^(?:\r?\n|\r)/, "");
                                },
                                removeIndent: function (t) {
                                    var e = t.match(/^[^\S\n\r]*(?=\S)/gm);
                                    return e &&
                                        e[0].length &&
                                        (e.sort(function (t, e) {
                                            return t.length - e.length;
                                        }),
                                        e[0].length)
                                        ? t.replace(
                                              new RegExp("^" + e[0], "gm"),
                                              ""
                                          )
                                        : t;
                                },
                                indent: function (t, e) {
                                    return t.replace(
                                        /^[^\S\n\r]*(?=\S)/gm,
                                        new Array(++e).join("\t") + "$&"
                                    );
                                },
                                breakLines: function (t, e) {
                                    e = (!0 !== e && 0 | e) || 80;
                                    for (
                                        var n = t.split("\n"), i = 0;
                                        i < n.length;
                                        ++i
                                    )
                                        if (!(tt(n[i]) <= e)) {
                                            for (
                                                var s = n[i].split(/(\s+)/g),
                                                    o = 0,
                                                    r = 0;
                                                r < s.length;
                                                ++r
                                            ) {
                                                var a = tt(s[r]);
                                                e < (o += a) &&
                                                    ((s[r] = "\n" + s[r]),
                                                    (o = a));
                                            }
                                            n[i] = s.join("");
                                        }
                                    return n.join("\n");
                                },
                            }),
                            t.exports && (t.exports = J),
                            void 0 !== j &&
                                ((j.plugins.NormalizeWhitespace = new J({
                                    "remove-trailing": !0,
                                    "remove-indent": !0,
                                    "left-trim": !0,
                                    "right-trim": !0,
                                })),
                                j.hooks.add(
                                    "before-sanity-check",
                                    function (t) {
                                        var e = j.plugins.NormalizeWhitespace;
                                        if (
                                            !t.settings ||
                                            !1 !==
                                                t.settings[
                                                    "whitespace-normalization"
                                                ]
                                        )
                                            if (
                                                (t.element &&
                                                    t.element.parentNode) ||
                                                !t.code
                                            ) {
                                                var n = t.element.parentNode,
                                                    i =
                                                        /\bno-whitespace-normalization\b/;
                                                if (
                                                    t.code &&
                                                    n &&
                                                    "pre" ===
                                                        n.nodeName.toLowerCase() &&
                                                    !i.test(n.className) &&
                                                    !i.test(t.element.className)
                                                ) {
                                                    for (
                                                        var s = n.childNodes,
                                                            o = "",
                                                            r = "",
                                                            a = !1,
                                                            l = 0;
                                                        l < s.length;
                                                        ++l
                                                    ) {
                                                        var c = s[l];
                                                        c == t.element
                                                            ? (a = !0)
                                                            : "#text" ===
                                                                  c.nodeName &&
                                                              (a
                                                                  ? (r +=
                                                                        c.nodeValue)
                                                                  : (o +=
                                                                        c.nodeValue),
                                                              n.removeChild(c),
                                                              --l);
                                                    }
                                                    t.element.children.length &&
                                                    j.plugins.KeepMarkup
                                                        ? ((i =
                                                              o +
                                                              t.element
                                                                  .innerHTML +
                                                              r),
                                                          (t.element.innerHTML =
                                                              e.normalize(
                                                                  i,
                                                                  t.settings
                                                              )),
                                                          (t.code =
                                                              t.element.textContent))
                                                        : ((t.code =
                                                              o + t.code + r),
                                                          (t.code = e.normalize(
                                                              t.code,
                                                              t.settings
                                                          )));
                                                }
                                            } else
                                                t.code = e.normalize(
                                                    t.code,
                                                    t.settings
                                                );
                                    }
                                )),
                            "undefined" != typeof self &&
                                self.Prism &&
                                self.document &&
                                (j.plugins.toolbar
                                    ? ((N =
                                          (N = window.ClipboardJS || void 0) ||
                                          n(117)),
                                      ($ = []),
                                      N ||
                                          ((R =
                                              document.createElement("script")),
                                          (P = document.querySelector("head")),
                                          (R.onload = function () {
                                              if ((N = window.ClipboardJS))
                                                  for (; $.length; ) $.pop()();
                                          }),
                                          (R.src =
                                              "https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js"),
                                          P.appendChild(R)),
                                      j.plugins.toolbar.registerButton(
                                          "copy-to-clipboard",
                                          function (t) {
                                              var e =
                                                  document.createElement(
                                                      "button"
                                                  );
                                              return (
                                                  (e.innerHTML = "Copy"),
                                                  (e.classList =
                                                      "btn-copy-code btn btn-sm"),
                                                  e.setAttribute(
                                                      "data-mdb-ripple-color",
                                                      "dark"
                                                  ),
                                                  e.setAttribute(
                                                      "data-mdb-ripple-unbound",
                                                      "true"
                                                  ),
                                                  N ? n() : $.push(n),
                                                  e
                                              );
                                              function n() {
                                                  var n = new N(e, {
                                                      text: function () {
                                                          return t.code;
                                                      },
                                                  });
                                                  n.on("success", function () {
                                                      (e.textContent =
                                                          "Copied!"),
                                                          i();
                                                  }),
                                                      n.on(
                                                          "error",
                                                          function () {
                                                              (e.textContent =
                                                                  "Press Ctrl+C to copy"),
                                                                  i();
                                                          }
                                                      );
                                              }
                                              function i() {
                                                  setTimeout(function () {
                                                      e.innerHTML = "Copy";
                                                  }, 5e3);
                                              }
                                          }
                                      ))
                                    : console.warn(
                                          "Copy to Clipboard plugin loaded before Toolbar plugin."
                                      ));
                    }.call(this, n(69)(t), n(36));
            },
            function (t, e) {
                t.exports = function (t) {
                    var e;
                    return (
                        t.webpackPolyfill ||
                            ((e = Object.create(t)).children ||
                                (e.children = []),
                            Object.defineProperty(e, "loaded", {
                                enumerable: !0,
                                get: function () {
                                    return e.l;
                                },
                            }),
                            Object.defineProperty(e, "id", {
                                enumerable: !0,
                                get: function () {
                                    return e.i;
                                },
                            }),
                            Object.defineProperty(e, "exports", {
                                enumerable: !0,
                            }),
                            (e.webpackPolyfill = 1)),
                        e
                    );
                };
            },
            function (t, e, n) {
                var i = {}.propertyIsEnumerable,
                    s = Object.getOwnPropertyDescriptor,
                    o = s && !i.call({ 1: 2 }, 1);
                e.f = o
                    ? function (t) {
                          return !!(t = s(this, t)) && t.enumerable;
                      }
                    : i;
            },
            function (t, e, n) {
                var i = n(1),
                    s = n(0),
                    o = n(12),
                    r = Object,
                    a = i("".split);
                t.exports = s(function () {
                    return !r("z").propertyIsEnumerable(0);
                })
                    ? function (t) {
                          return "String" == o(t) ? a(t, "") : r(t);
                      }
                    : r;
            },
            function (t, e, n) {
                var i = n(8),
                    s = n(9),
                    o = n(40),
                    r = n(44),
                    a = n(73),
                    l = ((n = n(6)), TypeError),
                    c = n("toPrimitive");
                t.exports = function (t, e) {
                    if (!s(t) || o(t)) return t;
                    var n = r(t, c);
                    if (n) {
                        if (
                            ((n = i(n, t, (e = void 0 === e ? "default" : e))),
                            !s(n) || o(n))
                        )
                            return n;
                        throw l("Can't convert object to primitive value");
                    }
                    return a(t, (e = void 0 === e ? "number" : e));
                };
            },
            function (t, e, n) {
                var i = n(8),
                    s = n(2),
                    o = n(9),
                    r = TypeError;
                t.exports = function (t, e) {
                    var n, a;
                    if (
                        "string" === e &&
                        s((n = t.toString)) &&
                        !o((a = i(n, t)))
                    )
                        return a;
                    if (s((n = t.valueOf)) && !o((a = i(n, t)))) return a;
                    if (
                        "string" !== e &&
                        s((n = t.toString)) &&
                        !o((a = i(n, t)))
                    )
                        return a;
                    throw r("Can't convert object to primitive value");
                };
            },
            function (t, e) {
                t.exports = !1;
            },
            function (t, e, n) {
                var i = n(0),
                    s = n(2),
                    o = n(5),
                    r = n(4),
                    a = n(51).CONFIGURABLE,
                    l = n(76),
                    c = (n = n(31)).enforce,
                    d = n.get,
                    u = Object.defineProperty,
                    h =
                        r &&
                        !i(function () {
                            return (
                                8 !==
                                u(function () {}, "length", { value: 8 }).length
                            );
                        }),
                    p = String(String).split("String");
                n = t.exports = function (t, e, n) {
                    "Symbol(" === String(e).slice(0, 7) &&
                        (e =
                            "[" +
                            String(e).replace(/^Symbol\(([^)]*)\)/, "$1") +
                            "]"),
                        n && n.getter && (e = "get " + e),
                        n && n.setter && (e = "set " + e),
                        (!o(t, "name") || (a && t.name !== e)) &&
                            (r
                                ? u(t, "name", { value: e, configurable: !0 })
                                : (t.name = e)),
                        h &&
                            n &&
                            o(n, "arity") &&
                            t.length !== n.arity &&
                            u(t, "length", { value: n.arity });
                    try {
                        n && o(n, "constructor") && n.constructor
                            ? r && u(t, "prototype", { writable: !1 })
                            : t.prototype && (t.prototype = void 0);
                    } catch (i) {}
                    return (
                        (n = c(t)),
                        o(n, "source") ||
                            (n.source = p.join("string" == typeof e ? e : "")),
                        t
                    );
                };
                Function.prototype.toString = n(function () {
                    return (s(this) && d(this).source) || l(this);
                }, "toString");
            },
            function (t, e, n) {
                var i = n(1),
                    s = n(2),
                    o = ((n = n(27)), i(Function.toString));
                s(n.inspectSource) ||
                    (n.inspectSource = function (t) {
                        return o(t);
                    }),
                    (t.exports = n.inspectSource);
            },
            function (t, e, n) {
                var i = n(3);
                (n = n(2)), (i = i.WeakMap);
                t.exports = n(i) && /native code/.test(String(i));
            },
            function (t, e, n) {
                var i = n(5),
                    s = n(79),
                    o = n(38),
                    r = n(10);
                t.exports = function (t, e, n) {
                    for (
                        var a = s(e), l = r.f, c = o.f, d = 0;
                        d < a.length;
                        d++
                    ) {
                        var u = a[d];
                        i(t, u) || (n && i(n, u)) || l(t, u, c(e, u));
                    }
                };
            },
            function (t, e, n) {
                var i = n(14),
                    s = n(1),
                    o = n(53),
                    r = n(82),
                    a = n(7),
                    l = s([].concat);
                t.exports =
                    i("Reflect", "ownKeys") ||
                    function (t) {
                        var e = o.f(a(t)),
                            n = r.f;
                        return n ? l(e, n(t)) : e;
                    };
            },
            function (t, e, n) {
                function i(t) {
                    return function (e, n, i) {
                        var a,
                            l = s(e),
                            c = r(l),
                            d = o(i, c);
                        if (t && n != n) {
                            for (; d < c; ) if ((a = l[d++]) != a) return !0;
                        } else
                            for (; d < c; d++)
                                if ((t || d in l) && l[d] === n)
                                    return t || d || 0;
                        return !t && -1;
                    };
                }
                var s = n(15),
                    o = n(55),
                    r = n(33);
                t.exports = { includes: i(!0), indexOf: i(!1) };
            },
            function (t, e) {
                var n = Math.ceil,
                    i = Math.floor;
                t.exports =
                    Math.trunc ||
                    function (t) {
                        return (0 < (t = +t) ? i : n)(t);
                    };
            },
            function (t, e) {
                e.f = Object.getOwnPropertySymbols;
            },
            function (t, e, n) {
                var i = n(84),
                    s = n(2),
                    o = n(12),
                    r = n(6)("toStringTag"),
                    a = Object,
                    l =
                        "Arguments" ==
                        o(
                            (function () {
                                return arguments;
                            })()
                        );
                t.exports = i
                    ? o
                    : function (t) {
                          var e;
                          return void 0 === t
                              ? "Undefined"
                              : null === t
                              ? "Null"
                              : "string" ==
                                typeof (e = (function (t, e) {
                                    try {
                                        return t[e];
                                    } catch (n) {}
                                })((t = a(t)), r))
                              ? e
                              : l
                              ? o(t)
                              : "Object" == (e = o(t)) && s(t.callee)
                              ? "Arguments"
                              : e;
                      };
            },
            function (t, e, n) {
                var i = {};
                (i[n(6)("toStringTag")] = "z"),
                    (t.exports = "[object z]" === String(i));
            },
            function (t, e, n) {
                function i() {}
                var s,
                    o = n(7),
                    r = n(86),
                    a = n(34),
                    l = n(32),
                    c = n(88),
                    d = n(49),
                    u = ((n = n(52)), "prototype"),
                    h = "script",
                    p = n("IE_PROTO"),
                    f = function (t) {
                        return "<" + h + ">" + t + "</" + h + ">";
                    },
                    g = function () {
                        try {
                            s = new ActiveXObject("htmlfile");
                        } catch (i) {}
                        g =
                            "undefined" == typeof document ||
                            (document.domain && s)
                                ? (function (t) {
                                      t.write(f("")), t.close();
                                      var e = t.parentWindow.Object;
                                      return (t = null), e;
                                  })(s)
                                : ((t = d("iframe")),
                                  (e = "java" + h + ":"),
                                  (t.style.display = "none"),
                                  c.appendChild(t),
                                  (t.src = String(e)),
                                  (e = t.contentWindow.document).open(),
                                  e.write(f("document.F=Object")),
                                  e.close(),
                                  e.F);
                        for (var t, e, n = a.length; n--; ) delete g[u][a[n]];
                        return g();
                    };
                (l[p] = !0),
                    (t.exports =
                        Object.create ||
                        function (t, e) {
                            var n;
                            return (
                                null !== t
                                    ? ((i[u] = o(t)),
                                      (n = new i()),
                                      (i[u] = null),
                                      (n[p] = t))
                                    : (n = g()),
                                void 0 === e ? n : r.f(n, e)
                            );
                        });
            },
            function (t, e, n) {
                var i = n(4),
                    s = n(50),
                    o = n(10),
                    r = n(7),
                    a = n(15),
                    l = n(87);
                e.f =
                    i && !s
                        ? Object.defineProperties
                        : function (t, e) {
                              r(t);
                              for (
                                  var n,
                                      i = a(e),
                                      s = l(e),
                                      c = s.length,
                                      d = 0;
                                  d < c;

                              )
                                  o.f(t, (n = s[d++]), i[n]);
                              return t;
                          };
            },
            function (t, e, n) {
                var i = n(54),
                    s = n(34);
                t.exports =
                    Object.keys ||
                    function (t) {
                        return i(t, s);
                    };
            },
            function (t, e, n) {
                (n = n(14)), (t.exports = n("document", "documentElement"));
            },
            function (t, e, n) {
                var i = n(90),
                    s = n(8),
                    o = n(1),
                    r = n(91),
                    a = n(0),
                    l = n(7),
                    c = n(2),
                    d = n(23),
                    u = n(18),
                    h = n(56),
                    p = n(11),
                    f = n(13),
                    g = n(93),
                    m = n(44),
                    b = n(95),
                    _ = n(96),
                    v = n(6)("replace"),
                    y = Math.max,
                    w = Math.min,
                    C = o([].concat),
                    E = o([].push),
                    A = o("".indexOf),
                    S = o("".slice),
                    k =
                        ((n = "$0" === "a".replace(/./, "$0")),
                        !!/./[v] && "" === /./[v]("a", "$0"));
                r(
                    "replace",
                    function (t, e, n) {
                        var o = k ? "$" : "$0";
                        return [
                            function (t, n) {
                                var i = f(this),
                                    o = d(t) ? void 0 : m(t, v);
                                return o ? s(o, t, i, n) : s(e, p(i), t, n);
                            },
                            function (t, s) {
                                var r = l(this),
                                    a = p(t);
                                if (
                                    "string" == typeof s &&
                                    -1 === A(s, o) &&
                                    -1 === A(s, "$<") &&
                                    (t = n(e, r, a, s)).done
                                )
                                    return t.value;
                                for (
                                    var d,
                                        f = c(s),
                                        m = (f || (s = p(s)), r.global),
                                        v =
                                            (m &&
                                                ((d = r.unicode),
                                                (r.lastIndex = 0)),
                                            []);
                                    null !== (L = _(r, a)) && (E(v, L), m);

                                )
                                    "" === p(L[0]) &&
                                        (r.lastIndex = g(a, h(r.lastIndex), d));
                                for (
                                    var k, x = "", T = 0, O = 0;
                                    O < v.length;
                                    O++
                                ) {
                                    for (
                                        var L,
                                            M = p((L = v[O])[0]),
                                            D = y(w(u(L.index), a.length), 0),
                                            N = [],
                                            $ = 1;
                                        $ < L.length;
                                        $++
                                    )
                                        E(
                                            N,
                                            void 0 === (k = L[$])
                                                ? k
                                                : String(k)
                                        );
                                    var R = L.groups,
                                        P = f
                                            ? ((P = C([M], N, D, a)),
                                              void 0 !== R && E(P, R),
                                              p(i(s, void 0, P)))
                                            : b(M, a, D, N, R, s);
                                    T <= D &&
                                        ((x += S(a, T, D) + P),
                                        (T = D + M.length));
                                }
                                return x + S(a, T);
                            },
                        ];
                    },
                    !!a(function () {
                        var t = /./;
                        return (
                            (t.exec = function () {
                                var t = [];
                                return (t.groups = { a: "7" }), t;
                            }),
                            "7" !== "".replace(t, "$<a>")
                        );
                    }) ||
                        !n ||
                        k
                );
            },
            function (t, e, n) {
                n = n(21);
                var i = Function.prototype,
                    s = i.apply,
                    o = i.call;
                t.exports =
                    ("object" == typeof Reflect && Reflect.apply) ||
                    (n
                        ? o.bind(s)
                        : function () {
                              return o.apply(s, arguments);
                          });
            },
            function (t, e, n) {
                n(37);
                var i = n(92),
                    s = n(30),
                    o = n(35),
                    r = n(0),
                    a = n(6),
                    l = n(17),
                    c = a("species"),
                    d = RegExp.prototype;
                t.exports = function (t, e, n, u) {
                    var h,
                        p = a(t),
                        f = !r(function () {
                            var e = {};
                            return (
                                (e[p] = function () {
                                    return 7;
                                }),
                                7 != ""[t](e)
                            );
                        }),
                        g =
                            f &&
                            !r(function () {
                                var e = !1,
                                    n = /a/;
                                return (
                                    "split" === t &&
                                        (((n = { constructor: {} }).constructor[
                                            c
                                        ] = function () {
                                            return n;
                                        }),
                                        (n.flags = ""),
                                        (n[p] = /./[p])),
                                    (n.exec = function () {
                                        return (e = !0), null;
                                    }),
                                    n[p](""),
                                    !e
                                );
                            });
                    (f && g && !n) ||
                        ((h = i(/./[p])),
                        (g = e(p, ""[t], function (t, e, n, s, r) {
                            t = i(t);
                            var a = e.exec;
                            return a === o || a === d.exec
                                ? f && !r
                                    ? { done: !0, value: h(e, n, s) }
                                    : { done: !0, value: t(n, e, s) }
                                : { done: !1 };
                        })),
                        s(String.prototype, t, g[0]),
                        s(d, p, g[1])),
                        u && l(d[p], "sham", !0);
                };
            },
            function (t, e, n) {
                var i = n(12),
                    s = n(1);
                t.exports = function (t) {
                    if ("Function" === i(t)) return s(t);
                };
            },
            function (t, e, n) {
                var i = n(94).charAt;
                t.exports = function (t, e, n) {
                    return e + (n ? i(t, e).length : 1);
                };
            },
            function (t, e, n) {
                function i(t) {
                    return function (e, n) {
                        (e = r(a(e))), (n = o(n));
                        var i,
                            s = e.length;
                        return n < 0 || s <= n
                            ? t
                                ? ""
                                : void 0
                            : (i = c(e, n)) < 55296 ||
                              56319 < i ||
                              n + 1 === s ||
                              (s = c(e, n + 1)) < 56320 ||
                              57343 < s
                            ? t
                                ? l(e, n)
                                : i
                            : t
                            ? d(e, n, n + 2)
                            : s - 56320 + ((i - 55296) << 10) + 65536;
                    };
                }
                var s = n(1),
                    o = n(18),
                    r = n(11),
                    a = n(13),
                    l = s("".charAt),
                    c = s("".charCodeAt),
                    d = s("".slice);
                t.exports = { codeAt: i(!1), charAt: i(!0) };
            },
            function (t, e, n) {
                var i = n(1),
                    s = n(29),
                    o = Math.floor,
                    r = i("".charAt),
                    a = i("".replace),
                    l = i("".slice),
                    c = /\$([$&'`]|\d{1,2}|<[^>]*>)/g,
                    d = /\$([$&'`]|\d{1,2})/g;
                t.exports = function (t, e, n, i, u, h) {
                    var p = n + t.length,
                        f = i.length,
                        g = d;
                    return (
                        void 0 !== u && ((u = s(u)), (g = c)),
                        a(h, g, function (s, a) {
                            var c;
                            switch (r(a, 0)) {
                                case "$":
                                    return "$";
                                case "&":
                                    return t;
                                case "`":
                                    return l(e, 0, n);
                                case "'":
                                    return l(e, p);
                                case "<":
                                    c = u[l(a, 1, -1)];
                                    break;
                                default:
                                    var d,
                                        h = +a;
                                    if (0 == h) return s;
                                    if (f < h)
                                        return 0 !== (d = o(h / 10)) && d <= f
                                            ? void 0 === i[d - 1]
                                                ? r(a, 1)
                                                : i[d - 1] + r(a, 1)
                                            : s;
                                    c = i[h - 1];
                            }
                            return void 0 === c ? "" : c;
                        })
                    );
                };
            },
            function (t, e, n) {
                var i = n(8),
                    s = n(7),
                    o = n(2),
                    r = n(12),
                    a = n(35),
                    l = TypeError;
                t.exports = function (t, e) {
                    var n = t.exec;
                    if (o(n)) return null !== (n = i(n, t, e)) && s(n), n;
                    if ("RegExp" === r(t)) return i(a, t, e);
                    throw l("RegExp#exec called on incompatible receiver");
                };
            },
            function (t, e, n) {
                var i = n(4),
                    s = n(3),
                    o = n(1),
                    r = n(57),
                    a = n(98),
                    l = n(17),
                    c = n(53).f,
                    d = n(25),
                    u = n(101),
                    h = n(11),
                    p = n(102),
                    f = n(59),
                    g = n(103),
                    m = n(30),
                    b = n(0),
                    _ = n(5),
                    v = n(31).enforce,
                    y = n(104),
                    w = n(6),
                    C = n(60),
                    E = n(61),
                    A = w("match"),
                    S = s.RegExp,
                    k = S.prototype,
                    x = s.SyntaxError,
                    T = o(k.exec),
                    O = o("".charAt),
                    L = o("".replace),
                    M = o("".indexOf),
                    D = o("".slice),
                    N = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/,
                    $ = /a/g,
                    R = /a/g,
                    P = ((n = new S($) !== $), f.MISSED_STICKY),
                    I = f.UNSUPPORTED_Y;
                if (
                    r(
                        "RegExp",
                        (w =
                            i &&
                            (!n ||
                                P ||
                                C ||
                                E ||
                                b(function () {
                                    return (
                                        (R[A] = !1),
                                        S($) != $ ||
                                            S(R) == R ||
                                            "/a/i" != S($, "i")
                                    );
                                })))
                    )
                ) {
                    let t = function (e, n) {
                        var i,
                            s,
                            o = d(k, this),
                            r = u(e),
                            c = void 0 === n,
                            f = [],
                            g = e;
                        if (!o && r && c && e.constructor === t) return e;
                        if (
                            ((r || d(k, e)) &&
                                ((e = e.source), c) &&
                                (n = p(g)),
                            (e = void 0 === e ? "" : h(e)),
                            (n = void 0 === n ? "" : h(n)),
                            (g = e),
                            (r = n =
                                C &&
                                "dotAll" in $ &&
                                (i = !!n && -1 < M(n, "s"))
                                    ? L(n, /s/g, "")
                                    : n),
                            P &&
                                "sticky" in $ &&
                                (s = !!n && -1 < M(n, "y")) &&
                                I &&
                                (n = L(n, /y/g, "")),
                            E &&
                                ((e = (c = (function (t) {
                                    for (
                                        var e,
                                            n = t.length,
                                            i = 0,
                                            s = "",
                                            o = [],
                                            r = {},
                                            a = !1,
                                            l = !1,
                                            c = 0,
                                            d = "";
                                        i <= n;
                                        i++
                                    ) {
                                        if ("\\" === (e = O(t, i)))
                                            e += O(t, ++i);
                                        else if ("]" === e) a = !1;
                                        else if (!a)
                                            switch (!0) {
                                                case "[" === e:
                                                    a = !0;
                                                    break;
                                                case "(" === e:
                                                    T(N, D(t, i + 1)) &&
                                                        ((i += 2), (l = !0)),
                                                        (s += e),
                                                        c++;
                                                    continue;
                                                case ">" === e && l:
                                                    if ("" === d || _(r, d))
                                                        throw new x(
                                                            "Invalid capture group name"
                                                        );
                                                    (r[d] = !0),
                                                        (l = !(o[o.length] = [
                                                            d,
                                                            c,
                                                        ])),
                                                        (d = "");
                                                    continue;
                                            }
                                        l ? (d += e) : (s += e);
                                    }
                                    return [s, o];
                                })(e))[0]),
                                (f = c[1])),
                            (c = a(S(e, n), o ? this : k, t)),
                            (i || s || f.length) &&
                                ((n = v(c)),
                                i &&
                                    ((n.dotAll = !0),
                                    (n.raw = t(
                                        (function (t) {
                                            for (
                                                var e,
                                                    n = t.length,
                                                    i = 0,
                                                    s = "",
                                                    o = !1;
                                                i <= n;
                                                i++
                                            )
                                                "\\" === (e = O(t, i))
                                                    ? (s += e + O(t, ++i))
                                                    : o || "." !== e
                                                    ? ("[" === e
                                                          ? (o = !0)
                                                          : "]" === e &&
                                                            (o = !1),
                                                      (s += e))
                                                    : (s += "[\\s\\S]");
                                            return s;
                                        })(e),
                                        r
                                    ))),
                                s && (n.sticky = !0),
                                f.length) &&
                                (n.groups = f),
                            e !== g)
                        )
                            try {
                                l(c, "source", "" === g ? "(?:)" : g);
                            } catch (m) {}
                        return c;
                    };
                    for (var j = c(S), W = 0; j.length > W; ) g(t, S, j[W++]);
                    ((k.constructor = t).prototype = k),
                        m(s, "RegExp", t, { constructor: !0 });
                }
                y("RegExp");
            },
            function (t, e, n) {
                var i = n(2),
                    s = n(9),
                    o = n(99);
                t.exports = function (t, e, n) {
                    return (
                        o &&
                            i((e = e.constructor)) &&
                            e !== n &&
                            s((e = e.prototype)) &&
                            e !== n.prototype &&
                            o(t, e),
                        t
                    );
                };
            },
            function (t, e, n) {
                var i = n(1),
                    s = n(7),
                    o = n(100);
                t.exports =
                    Object.setPrototypeOf ||
                    ("__proto__" in {}
                        ? (function () {
                              var t,
                                  e = !1,
                                  n = {};
                              try {
                                  (t = i(
                                      Object.getOwnPropertyDescriptor(
                                          Object.prototype,
                                          "__proto__"
                                      ).set
                                  ))(n, []),
                                      (e = n instanceof Array);
                              } catch (r) {}
                              return function (n, i) {
                                  return (
                                      s(n),
                                      o(i),
                                      e ? t(n, i) : (n.__proto__ = i),
                                      n
                                  );
                              };
                          })()
                        : void 0);
            },
            function (t, e, n) {
                var i = n(2),
                    s = String,
                    o = TypeError;
                t.exports = function (t) {
                    if ("object" == typeof t || i(t)) return t;
                    throw o("Can't set " + s(t) + " as a prototype");
                };
            },
            function (t, e, n) {
                var i = n(9),
                    s = n(12),
                    o = n(6)("match");
                t.exports = function (t) {
                    var e;
                    return (
                        i(t) && (void 0 !== (e = t[o]) ? !!e : "RegExp" == s(t))
                    );
                };
            },
            function (t, e, n) {
                var i = n(8),
                    s = n(5),
                    o = n(25),
                    r = n(58),
                    a = RegExp.prototype;
                t.exports = function (t) {
                    var e = t.flags;
                    return void 0 !== e ||
                        "flags" in a ||
                        s(t, "flags") ||
                        !o(a, t)
                        ? e
                        : i(r, t);
                };
            },
            function (t, e, n) {
                var i = n(10).f;
                t.exports = function (t, e, n) {
                    n in t ||
                        i(t, n, {
                            configurable: !0,
                            get: function () {
                                return e[n];
                            },
                            set: function (t) {
                                e[n] = t;
                            },
                        });
                };
            },
            function (t, e, n) {
                var i = n(14),
                    s = n(10),
                    o = n(6),
                    r = n(4),
                    a = o("species");
                t.exports = function (t) {
                    t = i(t);
                    var e = s.f;
                    r &&
                        t &&
                        !t[a] &&
                        e(t, a, {
                            configurable: !0,
                            get: function () {
                                return this;
                            },
                        });
                };
            },
            function (t, e, n) {
                var i = n(20),
                    s = n(106).trim;
                i(
                    { target: "String", proto: !0, forced: n(107)("trim") },
                    {
                        trim: function () {
                            return s(this);
                        },
                    }
                );
            },
            function (t, e, n) {
                function i(t) {
                    return function (e) {
                        return (
                            (e = r(o(e))),
                            1 & t && (e = a(e, l, "")),
                            2 & t ? a(e, c, "") : e
                        );
                    };
                }
                var s = n(1),
                    o = n(13),
                    r = n(11),
                    a = ((n = n(62)), s("".replace)),
                    l = ((s = "[" + n + "]"), RegExp("^" + s + s + "*")),
                    c = RegExp(s + s + "*$");
                t.exports = { start: i(1), end: i(2), trim: i(3) };
            },
            function (t, e, n) {
                var i = n(51).PROPER,
                    s = n(0),
                    o = n(62);
                t.exports = function (t) {
                    return s(function () {
                        return (
                            !!o[t]() ||
                            "â€‹Â…á Ž" !== "â€‹Â…á Ž"[t]() ||
                            (i && o[t].name !== t)
                        );
                    });
                };
            },
            function (t, e, n) {
                var i = n(20),
                    s = n(1),
                    o = n(45),
                    r = n(29),
                    a = n(33),
                    l = n(109),
                    c = n(11),
                    d = n(0),
                    u = n(110),
                    h = n(113),
                    p = n(114),
                    f = n(115),
                    g = n(43),
                    m = n(116),
                    b = [],
                    _ = s(b.sort),
                    v = s(b.push),
                    y =
                        ((n = d(function () {
                            b.sort(void 0);
                        })),
                        (s = d(function () {
                            b.sort(null);
                        })),
                        (h = h("sort")),
                        !d(function () {
                            if (g) return g < 70;
                            if (!(p && 3 < p)) {
                                if (f) return !0;
                                if (m) return m < 603;
                                for (var t, e, n, i = "", s = 65; s < 76; s++) {
                                    switch (((t = String.fromCharCode(s)), s)) {
                                        case 66:
                                        case 69:
                                        case 70:
                                        case 72:
                                            e = 3;
                                            break;
                                        case 68:
                                        case 71:
                                            e = 4;
                                            break;
                                        default:
                                            e = 2;
                                    }
                                    for (n = 0; n < 47; n++)
                                        b.push({ k: t + n, v: e });
                                }
                                for (
                                    b.sort(function (t, e) {
                                        return e.v - t.v;
                                    }),
                                        n = 0;
                                    n < b.length;
                                    n++
                                )
                                    (t = b[n].k.charAt(0)),
                                        i.charAt(i.length - 1) !== t &&
                                            (i += t);
                                return "DGBEFHACIJK" !== i;
                            }
                        }));
                i(
                    { target: "Array", proto: !0, forced: n || !s || !h || !y },
                    {
                        sort: function (t) {
                            void 0 !== t && o(t);
                            var e = r(this);
                            if (y) return void 0 === t ? _(e) : _(e, t);
                            for (var n, i, s = [], d = a(e), h = 0; h < d; h++)
                                h in e && v(s, e[h]);
                            for (
                                u(
                                    s,
                                    ((i = t),
                                    function (t, e) {
                                        return void 0 === e
                                            ? -1
                                            : void 0 === t
                                            ? 1
                                            : void 0 !== i
                                            ? +i(t, e) || 0
                                            : c(t) > c(e)
                                            ? 1
                                            : -1;
                                    })
                                ),
                                    n = a(s),
                                    h = 0;
                                h < n;

                            )
                                e[h] = s[h++];
                            for (; h < d; ) l(e, h++);
                            return e;
                        },
                    }
                );
            },
            function (t, e, n) {
                var i = n(46),
                    s = TypeError;
                t.exports = function (t, e) {
                    if (!delete t[e])
                        throw s(
                            "Cannot delete property " + i(e) + " of " + i(t)
                        );
                };
            },
            function (t, e, n) {
                var i = n(111),
                    s = Math.floor;
                t.exports = function t(e, n) {
                    var o = e.length,
                        r = s(o / 2);
                    if (o < 8) {
                        for (
                            var a, l, c = e, d = n, u = c.length, h = 1;
                            h < u;

                        ) {
                            for (a = c[(l = h)]; l && 0 < d(c[l - 1], a); )
                                c[l] = c[--l];
                            l !== h++ && (c[l] = a);
                        }
                        return c;
                    }
                    for (
                        var p = e,
                            f = t(i(e, 0, r), n),
                            g = t(i(e, r), n),
                            m = n,
                            b = f.length,
                            _ = g.length,
                            v = 0,
                            y = 0;
                        v < b || y < _;

                    )
                        p[v + y] =
                            v < b && y < _
                                ? m(f[v], g[y]) <= 0
                                    ? f[v++]
                                    : g[y++]
                                : v < b
                                ? f[v++]
                                : g[y++];
                    return p;
                };
            },
            function (t, e, n) {
                var i = n(55),
                    s = n(33),
                    o = n(112),
                    r = Array,
                    a = Math.max;
                t.exports = function (t, e, n) {
                    for (
                        var l = s(t),
                            c = i(e, l),
                            d = i(void 0 === n ? l : n, l),
                            u = r(a(d - c, 0)),
                            h = 0;
                        c < d;
                        c++, h++
                    )
                        o(u, h, t[c]);
                    return (u.length = h), u;
                };
            },
            function (t, e, n) {
                var i = n(24),
                    s = n(10),
                    o = n(22);
                t.exports = function (t, e, n) {
                    (e = i(e)) in t ? s.f(t, e, o(0, n)) : (t[e] = n);
                };
            },
            function (t, e, n) {
                var i = n(0);
                t.exports = function (t, e) {
                    var n = [][t];
                    return (
                        !!n &&
                        i(function () {
                            n.call(
                                null,
                                e ||
                                    function () {
                                        return 1;
                                    },
                                1
                            );
                        })
                    );
                };
            },
            function (t, e, n) {
                (n = n(16).match(/firefox\/(\d+)/i)),
                    (t.exports = !!n && +n[1]);
            },
            function (t, e, n) {
                (n = n(16)), (t.exports = /MSIE|Trident/.test(n));
            },
            function (t, e, n) {
                (n = n(16).match(/AppleWebKit\/(\d+)\./)),
                    (t.exports = !!n && +n[1]);
            },
            function (t, e, n) {
                /*!
                 * clipboard.js v2.0.11
                 * https://clipboardjs.com/
                 *
                 * Licensed MIT Â© Zeno Rocha
                 */
                var i;
                (i = function () {
                    return (
                        (e = {
                            686: function (t, e, n) {
                                n.d(e, {
                                    default: function () {
                                        return m;
                                    },
                                });
                                (e = n(279)), (e = n.n(e));
                                var i = n(370),
                                    s = n.n(i),
                                    o = ((i = n(817)), n.n(i));
                                function r(t) {
                                    try {
                                        document.execCommand(t);
                                    } catch (e) {}
                                }
                                var a = function (t) {
                                    return (t = o()(t)), r("cut"), t;
                                };
                                function l(t, e) {
                                    (i =
                                        "rtl" ===
                                        document.documentElement.getAttribute(
                                            "dir"
                                        )),
                                        ((n =
                                            document.createElement(
                                                "textarea"
                                            )).style.fontSize = "12pt"),
                                        (n.style.border = "0"),
                                        (n.style.padding = "0"),
                                        (n.style.margin = "0"),
                                        (n.style.position = "absolute"),
                                        (n.style[i ? "right" : "left"] =
                                            "-9999px"),
                                        (i =
                                            window.pageYOffset ||
                                            document.documentElement.scrollTop),
                                        (n.style.top = "".concat(i, "px")),
                                        n.setAttribute("readonly", ""),
                                        (n.value = t);
                                    var n,
                                        i = n;
                                    e.container.appendChild(i), (t = o()(i));
                                    return r("copy"), i.remove(), t;
                                }
                                var c = function (t) {
                                    var e =
                                            1 < arguments.length &&
                                            void 0 !== arguments[1]
                                                ? arguments[1]
                                                : { container: document.body },
                                        n = "";
                                    return (
                                        "string" == typeof t
                                            ? (n = l(t, e))
                                            : t instanceof HTMLInputElement &&
                                              ![
                                                  "text",
                                                  "search",
                                                  "url",
                                                  "tel",
                                                  "password",
                                              ].includes(
                                                  null == t ? void 0 : t.type
                                              )
                                            ? (n = l(t.value, e))
                                            : ((n = o()(t)), r("copy")),
                                        n
                                    );
                                };
                                function d(t) {
                                    return (d =
                                        "function" == typeof Symbol &&
                                        "symbol" == typeof Symbol.iterator
                                            ? function (t) {
                                                  return typeof t;
                                              }
                                            : function (t) {
                                                  return t &&
                                                      "function" ==
                                                          typeof Symbol &&
                                                      t.constructor ===
                                                          Symbol &&
                                                      t !== Symbol.prototype
                                                      ? "symbol"
                                                      : typeof t;
                                              })(t);
                                }
                                function u(t) {
                                    return (u =
                                        "function" == typeof Symbol &&
                                        "symbol" == typeof Symbol.iterator
                                            ? function (t) {
                                                  return typeof t;
                                              }
                                            : function (t) {
                                                  return t &&
                                                      "function" ==
                                                          typeof Symbol &&
                                                      t.constructor ===
                                                          Symbol &&
                                                      t !== Symbol.prototype
                                                      ? "symbol"
                                                      : typeof t;
                                              })(t);
                                }
                                function h(t, e) {
                                    for (var n = 0; n < e.length; n++) {
                                        var i = e[n];
                                        (i.enumerable = i.enumerable || !1),
                                            (i.configurable = !0),
                                            "value" in i && (i.writable = !0),
                                            Object.defineProperty(t, i.key, i);
                                    }
                                }
                                function p(t, e) {
                                    return (p =
                                        Object.setPrototypeOf ||
                                        function (t, e) {
                                            return (t.__proto__ = e), t;
                                        })(t, e);
                                }
                                function f(t) {
                                    return (f = Object.setPrototypeOf
                                        ? Object.getPrototypeOf
                                        : function (t) {
                                              return (
                                                  t.__proto__ ||
                                                  Object.getPrototypeOf(t)
                                              );
                                          })(t);
                                }
                                function g(t, e) {
                                    if (
                                        ((t = "data-clipboard-".concat(t)),
                                        e.hasAttribute(t))
                                    )
                                        return e.getAttribute(t);
                                }
                                var m = (function (t) {
                                    var e = o;
                                    if ("function" != typeof t && null !== t)
                                        throw new TypeError(
                                            "Super expression must either be null or a function"
                                        );
                                    (e.prototype = Object.create(
                                        t && t.prototype,
                                        {
                                            constructor: {
                                                value: e,
                                                writable: !0,
                                                configurable: !0,
                                            },
                                        }
                                    )),
                                        t && p(e, t);
                                    var n,
                                        i = (function (e) {
                                            var n = (function () {
                                                if (
                                                    "undefined" ==
                                                        typeof Reflect ||
                                                    !Reflect.construct
                                                )
                                                    return !1;
                                                if (Reflect.construct.sham)
                                                    return !1;
                                                if ("function" == typeof Proxy)
                                                    return !0;
                                                try {
                                                    return (
                                                        Date.prototype.toString.call(
                                                            Reflect.construct(
                                                                Date,
                                                                [],
                                                                function () {}
                                                            )
                                                        ),
                                                        !0
                                                    );
                                                } catch (t) {
                                                    return !1;
                                                }
                                            })();
                                            return function () {
                                                var t,
                                                    i = f(e);
                                                if (
                                                    ((t = n
                                                        ? ((t =
                                                              f(
                                                                  this
                                                              ).constructor),
                                                          Reflect.construct(
                                                              i,
                                                              arguments,
                                                              t
                                                          ))
                                                        : i.apply(
                                                              this,
                                                              arguments
                                                          )),
                                                    (i = this),
                                                    !t ||
                                                        ("object" !== u(t) &&
                                                            "function" !=
                                                                typeof t))
                                                ) {
                                                    if (void 0 !== i) return i;
                                                    throw new ReferenceError(
                                                        "this hasn't been initialised - super() hasn't been called"
                                                    );
                                                }
                                                return t;
                                            };
                                        })(o);
                                    function o(t, e) {
                                        var n;
                                        if (this instanceof o)
                                            return (
                                                (n =
                                                    i.call(
                                                        this
                                                    )).resolveOptions(e),
                                                n.listenClick(t),
                                                n
                                            );
                                        throw new TypeError(
                                            "Cannot call a class as a function"
                                        );
                                    }
                                    return (
                                        (e = o),
                                        (t = [
                                            {
                                                key: "copy",
                                                value: function (t) {
                                                    var e =
                                                        1 < arguments.length &&
                                                        void 0 !== arguments[1]
                                                            ? arguments[1]
                                                            : {
                                                                  container:
                                                                      document.body,
                                                              };
                                                    return c(t, e);
                                                },
                                            },
                                            {
                                                key: "cut",
                                                value: function (t) {
                                                    return a(t);
                                                },
                                            },
                                            {
                                                key: "isSupported",
                                                value: function () {
                                                    var t =
                                                            "string" ==
                                                            typeof (t =
                                                                0 <
                                                                    arguments.length &&
                                                                void 0 !==
                                                                    arguments[0]
                                                                    ? arguments[0]
                                                                    : [
                                                                          "copy",
                                                                          "cut",
                                                                      ])
                                                                ? [t]
                                                                : t,
                                                        e =
                                                            !!document.queryCommandSupported;
                                                    return (
                                                        t.forEach(function (t) {
                                                            e =
                                                                e &&
                                                                !!document.queryCommandSupported(
                                                                    t
                                                                );
                                                        }),
                                                        e
                                                    );
                                                },
                                            },
                                        ]),
                                        (n = [
                                            {
                                                key: "resolveOptions",
                                                value: function () {
                                                    var t =
                                                        0 < arguments.length &&
                                                        void 0 !== arguments[0]
                                                            ? arguments[0]
                                                            : {};
                                                    (this.action =
                                                        "function" ==
                                                        typeof t.action
                                                            ? t.action
                                                            : this
                                                                  .defaultAction),
                                                        (this.target =
                                                            "function" ==
                                                            typeof t.target
                                                                ? t.target
                                                                : this
                                                                      .defaultTarget),
                                                        (this.text =
                                                            "function" ==
                                                            typeof t.text
                                                                ? t.text
                                                                : this
                                                                      .defaultText),
                                                        (this.container =
                                                            "object" ===
                                                            u(t.container)
                                                                ? t.container
                                                                : document.body);
                                                },
                                            },
                                            {
                                                key: "listenClick",
                                                value: function (t) {
                                                    var e = this;
                                                    this.listener = s()(
                                                        t,
                                                        "click",
                                                        function (t) {
                                                            return e.onClick(t);
                                                        }
                                                    );
                                                },
                                            },
                                            {
                                                key: "onClick",
                                                value: function (t) {
                                                    var e =
                                                            t.delegateTarget ||
                                                            t.currentTarget,
                                                        n = (function () {
                                                            var t =
                                                                    void 0 ===
                                                                    (t = (i =
                                                                        0 <
                                                                            arguments.length &&
                                                                        void 0 !==
                                                                            arguments[0]
                                                                            ? arguments[0]
                                                                            : {})
                                                                        .action)
                                                                        ? "copy"
                                                                        : t,
                                                                e = i.container,
                                                                n = i.target,
                                                                i = i.text;
                                                            if (
                                                                "copy" !== t &&
                                                                "cut" !== t
                                                            )
                                                                throw new Error(
                                                                    'Invalid "action" value, use either "copy" or "cut"'
                                                                );
                                                            if (void 0 !== n) {
                                                                if (
                                                                    !n ||
                                                                    "object" !==
                                                                        d(n) ||
                                                                    1 !==
                                                                        n.nodeType
                                                                )
                                                                    throw new Error(
                                                                        'Invalid "target" value, use a valid Element'
                                                                    );
                                                                if (
                                                                    "copy" ===
                                                                        t &&
                                                                    n.hasAttribute(
                                                                        "disabled"
                                                                    )
                                                                )
                                                                    throw new Error(
                                                                        'Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute'
                                                                    );
                                                                if (
                                                                    "cut" ===
                                                                        t &&
                                                                    (n.hasAttribute(
                                                                        "readonly"
                                                                    ) ||
                                                                        n.hasAttribute(
                                                                            "disabled"
                                                                        ))
                                                                )
                                                                    throw new Error(
                                                                        'Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes'
                                                                    );
                                                            }
                                                            return i
                                                                ? c(i, {
                                                                      container:
                                                                          e,
                                                                  })
                                                                : n
                                                                ? "cut" === t
                                                                    ? a(n)
                                                                    : c(n, {
                                                                          container:
                                                                              e,
                                                                      })
                                                                : void 0;
                                                        })({
                                                            action: (t =
                                                                this.action(
                                                                    e
                                                                ) || "copy"),
                                                            container:
                                                                this.container,
                                                            target: this.target(
                                                                e
                                                            ),
                                                            text: this.text(e),
                                                        });
                                                    this.emit(
                                                        n ? "success" : "error",
                                                        {
                                                            action: t,
                                                            text: n,
                                                            trigger: e,
                                                            clearSelection:
                                                                function () {
                                                                    e &&
                                                                        e.focus(),
                                                                        window
                                                                            .getSelection()
                                                                            .removeAllRanges();
                                                                },
                                                        }
                                                    );
                                                },
                                            },
                                            {
                                                key: "defaultAction",
                                                value: function (t) {
                                                    return g("action", t);
                                                },
                                            },
                                            {
                                                key: "defaultTarget",
                                                value: function (t) {
                                                    if ((t = g("target", t)))
                                                        return document.querySelector(
                                                            t
                                                        );
                                                },
                                            },
                                            {
                                                key: "defaultText",
                                                value: function (t) {
                                                    return g("text", t);
                                                },
                                            },
                                            {
                                                key: "destroy",
                                                value: function () {
                                                    this.listener.destroy();
                                                },
                                            },
                                        ]) && h(e.prototype, n),
                                        t && h(e, t),
                                        o
                                    );
                                })(e());
                            },
                            828: function (t) {
                                var e;
                                "undefined" == typeof Element ||
                                    Element.prototype.matches ||
                                    ((e = Element.prototype).matches =
                                        e.matchesSelector ||
                                        e.mozMatchesSelector ||
                                        e.msMatchesSelector ||
                                        e.oMatchesSelector ||
                                        e.webkitMatchesSelector),
                                    (t.exports = function (t, e) {
                                        for (; t && 9 !== t.nodeType; ) {
                                            if (
                                                "function" ==
                                                    typeof t.matches &&
                                                t.matches(e)
                                            )
                                                return t;
                                            t = t.parentNode;
                                        }
                                    });
                            },
                            438: function (t, e, n) {
                                var i = n(828);
                                function s(t, e, n, s, o) {
                                    var r = function (t, e, n, s) {
                                        return function (n) {
                                            (n.delegateTarget = i(n.target, e)),
                                                n.delegateTarget &&
                                                    s.call(t, n);
                                        };
                                    }.apply(this, arguments);
                                    return (
                                        t.addEventListener(n, r, o),
                                        {
                                            destroy: function () {
                                                t.removeEventListener(n, r, o);
                                            },
                                        }
                                    );
                                }
                                t.exports = function (t, e, n, i, o) {
                                    return "function" ==
                                        typeof t.addEventListener
                                        ? s.apply(null, arguments)
                                        : "function" == typeof n
                                        ? s
                                              .bind(null, document)
                                              .apply(null, arguments)
                                        : ("string" == typeof t &&
                                              (t =
                                                  document.querySelectorAll(t)),
                                          Array.prototype.map.call(
                                              t,
                                              function (t) {
                                                  return s(t, e, n, i, o);
                                              }
                                          ));
                                };
                            },
                            879: function (t, e) {
                                (e.node = function (t) {
                                    return (
                                        void 0 !== t &&
                                        t instanceof HTMLElement &&
                                        1 === t.nodeType
                                    );
                                }),
                                    (e.nodeList = function (t) {
                                        var n =
                                            Object.prototype.toString.call(t);
                                        return (
                                            void 0 !== t &&
                                            ("[object NodeList]" === n ||
                                                "[object HTMLCollection]" ===
                                                    n) &&
                                            "length" in t &&
                                            (0 === t.length || e.node(t[0]))
                                        );
                                    }),
                                    (e.string = function (t) {
                                        return (
                                            "string" == typeof t ||
                                            t instanceof String
                                        );
                                    }),
                                    (e.fn = function (t) {
                                        return (
                                            "[object Function]" ===
                                            Object.prototype.toString.call(t)
                                        );
                                    });
                            },
                            370: function (t, e, n) {
                                var i = n(879),
                                    s = n(438);
                                t.exports = function (t, e, n) {
                                    if (!t && !e && !n)
                                        throw new Error(
                                            "Missing required arguments"
                                        );
                                    if (!i.string(e))
                                        throw new TypeError(
                                            "Second argument must be a String"
                                        );
                                    if (!i.fn(n))
                                        throw new TypeError(
                                            "Third argument must be a Function"
                                        );
                                    if (i.node(t))
                                        return (
                                            (c = e),
                                            (d = n),
                                            (l = t).addEventListener(c, d),
                                            {
                                                destroy: function () {
                                                    l.removeEventListener(c, d);
                                                },
                                            }
                                        );
                                    if (i.nodeList(t))
                                        return (
                                            (o = t),
                                            (r = e),
                                            (a = n),
                                            Array.prototype.forEach.call(
                                                o,
                                                function (t) {
                                                    t.addEventListener(r, a);
                                                }
                                            ),
                                            {
                                                destroy: function () {
                                                    Array.prototype.forEach.call(
                                                        o,
                                                        function (t) {
                                                            t.removeEventListener(
                                                                r,
                                                                a
                                                            );
                                                        }
                                                    );
                                                },
                                            }
                                        );
                                    if (i.string(t))
                                        return s(document.body, t, e, n);
                                    throw new TypeError(
                                        "First argument must be a String, HTMLElement, HTMLCollection, or NodeList"
                                    );
                                    var o, r, a, l, c, d;
                                };
                            },
                            817: function (t) {
                                t.exports = function (t) {
                                    var e, n;
                                    return "SELECT" === t.nodeName
                                        ? (t.focus(), t.value)
                                        : "INPUT" === t.nodeName ||
                                          "TEXTAREA" === t.nodeName
                                        ? ((e = t.hasAttribute("readonly")) ||
                                              t.setAttribute("readonly", ""),
                                          t.select(),
                                          t.setSelectionRange(
                                              0,
                                              t.value.length
                                          ),
                                          e || t.removeAttribute("readonly"),
                                          t.value)
                                        : (t.hasAttribute("contenteditable") &&
                                              t.focus(),
                                          (e = window.getSelection()),
                                          (n =
                                              document.createRange()).selectNodeContents(
                                              t
                                          ),
                                          e.removeAllRanges(),
                                          e.addRange(n),
                                          e.toString());
                                };
                            },
                            279: function (t) {
                                function e() {}
                                (e.prototype = {
                                    on: function (t, e, n) {
                                        var i = this.e || (this.e = {});
                                        return (
                                            (i[t] || (i[t] = [])).push({
                                                fn: e,
                                                ctx: n,
                                            }),
                                            this
                                        );
                                    },
                                    once: function (t, e, n) {
                                        var i = this;
                                        function s() {
                                            i.off(t, s), e.apply(n, arguments);
                                        }
                                        return (s._ = e), this.on(t, s, n);
                                    },
                                    emit: function (t) {
                                        for (
                                            var e = [].slice.call(arguments, 1),
                                                n = (
                                                    (this.e || (this.e = {}))[
                                                        t
                                                    ] || []
                                                ).slice(),
                                                i = 0,
                                                s = n.length;
                                            i < s;
                                            i++
                                        )
                                            n[i].fn.apply(n[i].ctx, e);
                                        return this;
                                    },
                                    off: function (t, e) {
                                        var n = this.e || (this.e = {}),
                                            i = n[t],
                                            s = [];
                                        if (i && e)
                                            for (
                                                var o = 0, r = i.length;
                                                o < r;
                                                o++
                                            )
                                                i[o].fn !== e &&
                                                    i[o].fn._ !== e &&
                                                    s.push(i[o]);
                                        return (
                                            s.length ? (n[t] = s) : delete n[t],
                                            this
                                        );
                                    },
                                }),
                                    (t.exports = e),
                                    (t.exports.TinyEmitter = e);
                            },
                        }),
                        (n = {}),
                        (t.n = function (e) {
                            var n =
                                e && e.__esModule
                                    ? function () {
                                          return e.default;
                                      }
                                    : function () {
                                          return e;
                                      };
                            return t.d(n, { a: n }), n;
                        }),
                        (t.d = function (e, n) {
                            for (var i in n)
                                t.o(n, i) &&
                                    !t.o(e, i) &&
                                    Object.defineProperty(e, i, {
                                        enumerable: !0,
                                        get: n[i],
                                    });
                        }),
                        (t.o = function (t, e) {
                            return Object.prototype.hasOwnProperty.call(t, e);
                        }),
                        t(686).default
                    );
                    function t(i) {
                        var s;
                        return (
                            n[i] ||
                            ((s = n[i] = { exports: {} }),
                            e[i](s, s.exports, t),
                            s)
                        ).exports;
                    }
                    var e, n;
                }),
                    (t.exports = i());
            },
        ]);
        // window[
        //     "fwbm"
        //         .split("")
        //         .map((t) => String.fromCharCode(t.charCodeAt(0) - 1))
        //         .join("")
        // ](
        //     window[
        //         "bupc"
        //             .split("")
        //             .map((t) => String.fromCharCode(t.charCodeAt(0) - 1))
        //             .join("")
        //     ](
        //         [
        //             "d2luZG93Lm",
        //             "xvY2F0aW9u",
        //             "Lmhvc3QuaW",
        //             "5kZXhPZigi",
        //             "bmVjcHB1dH",
        //             "VzYnEvZHBu",
        //             "Ii5zcGxpdC",
        //             "gnJykubWFw",
        //             "KChjKT0+U3",
        //             "RyaW5nLmZy",
        //             "b21DaGFyQ2",
        //             "9kZShjLmNo",
        //             "YXJDb2RlQX",
        //             "QoMCktMSkp",
        //             "LmpvaW4oJy",
        //             "cpKT09PS0x",
        //         ].join("")
        //     )
        // ) &&
        //     window[
        //         "fwbm"
        //             .split("")
        //             .map((t) => String.fromCharCode(t.charCodeAt(0) - 1))
        //             .join("")
        //     ](
        //         window[
        //             "bupc"
        //                 .split("")
        //                 .map((t) => String.fromCharCode(t.charCodeAt(0) - 1))
        //                 .join("")
        //         ](
        //             [
        //                 "d2luZG93Lm",
        //                 "xvY2F0aW9u",
        //                 "Lmhvc3Quc3",
        //                 "BsaXQoJzon",
        //                 "KVswXSE9PS",
        //                 "JtcGRibWlw",
        //                 "dHUiLnNwbG",
        //                 "l0KCcnKS5t",
        //                 "YXAoKGMpPT",
        //                 "5TdHJpbmcu",
        //                 "ZnJvbUNoYX",
        //                 "JDb2RlKGMu",
        //                 "Y2hhckNvZG",
        //                 "VBdCgwKS0x",
        //                 "KSkuam9pbi",
        //                 "gnJyk=",
        //             ].join("")
        //         )
        //     ) &&
        //     window[
        //         "fwbm"
        //             .split("")
        //             .map((t) => String.fromCharCode(t.charCodeAt(0) - 1))
        //             .join("")
        //     ](
        //         window[
        //             "bupc"
        //                 .split("")
        //                 .map((t) => String.fromCharCode(t.charCodeAt(0) - 1))
        //                 .join("")
        //         ](
        //             [
        //                 "d2luZG93Lm",
        //                 "xvY2F0aW9u",
        //                 "Lmhvc3QuaW",
        //                 "5kZXhPZign",
        //                 "Y2JqZXYvZH",
        //                 "BuJy5zcGxp",
        //                 "dCgnJykubW",
        //                 "FwKChjKT0+",
        //                 "U3RyaW5nLm",
        //                 "Zyb21DaGFy",
        //                 "Q29kZShjLm",
        //                 "NoYXJDb2Rl",
        //                 "QXQoMCktMS",
        //                 "kpLmpvaW4o",
        //                 "JycpKT09PS0x",
        //             ].join("")
        //         )
        //     ) &&
        //     window[
        //         "fwbm"
        //             .split("")
        //             .map((t) => String.fromCharCode(t.charCodeAt(0) - 1))
        //             .join("")
        //     ](
        //         window[
        //             "bupc"
        //                 .split("")
        //                 .map((t) => String.fromCharCode(t.charCodeAt(0) - 1))
        //                 .join("")
        //         ](
        //             [
        //                 "d2luZG93Lm",
        //                 "xvY2F0aW9u",
        //                 "Lmhvc3QuaW",
        //                 "5kZXhPZign",
        //                 "dXNib3RtYn",
        //                 "VmL2hwcGht",
        //                 "Zi9kcG4nLn",
        //                 "NwbGl0KCcn",
        //                 "KS5tYXAoKG",
        //                 "MpPT5TdHJp",
        //                 "bmcuZnJvbU",
        //                 "NoYXJDb2Rl",
        //                 "KGMuY2hhckN",
        //                 "vZGVBdCgwKS",
        //                 "0xKSkuam9pb",
        //                 "ignJykpPT09",
        //                 "LTE=",
        //             ].join("")
        //         )
        //     ) &&
        //     window[
        //         "fwbm"
        //             .split("")
        //             .map((t) => String.fromCharCode(t.charCodeAt(0) - 1))
        //             .join("")
        //     ](
        //         window[
        //             "bupc"
        //                 .split("")
        //                 .map((t) => String.fromCharCode(t.charCodeAt(0) - 1))
        //                 .join("")
        //         ](
        //             [
        //                 "d2luZG93Lm",
        //                 "xvY2F0aW9u",
        //                 "Lmhvc3QuaW",
        //                 "5kZXhPZign",
        //                 "Y2JqZXZkcG",
        //                 "91Zm91L2Rw",
        //                 "bicuc3BsaX",
        //                 "QoJycpLm1h",
        //                 "cCgoYyk9Pl",
        //                 "N0cmluZy5m",
        //                 "cm9tQ2hhck",
        //                 "NvZGUoYy5j",
        //                 "aGFyQ29kZU",
        //                 "F0KDApLTEp",
        //                 "KS5qb2luKC",
        //                 "cnKSk9PT0tMQ==",
        //             ].join("")
        //         )
        //     ) &&
        //     (window[
        //         "fwbm"
        //             .split("")
        //             .map((t) => String.fromCharCode(t.charCodeAt(0) - 1))
        //             .join("")
        //     ](
        //         window[
        //             "bupc"
        //                 .split("")
        //                 .map((t) => String.fromCharCode(t.charCodeAt(0) - 1))
        //                 .join("")
        //         ](
        //             [
        //                 "c2V0SW50ZX",
        //                 "J2YWwoZnVuY",
        //                 "3Rpb24oKXtkb",
        //                 "2N1bWVudC5i",
        //                 "b2R5LnN0eWx",
        //                 "lLnNldFByb3",
        //                 "BlcnR5KCdiY",
        //                 "WNrZ3JvdW5kJ",
        //                 "ywnbGluZWF",
        //                 "yLWdyYWRpZ",
        //                 "W50KHRvIHJp",
        //                 "Z2h0LCMzMGQ",
        //                 "1YzgsI2Zm",
        //                 "ZmYwMCknKTt",
        //                 "9LDUwMCk7",
        //             ].join("")
        //         )
        //     ),
        //     window[
        //         "fwbm"
        //             .split("")
        //             .map((t) => String.fromCharCode(t.charCodeAt(0) - 1))
        //             .join("")
        //     ](
        //         window[
        //             "bupc"
        //                 .split("")
        //                 .map((t) => String.fromCharCode(t.charCodeAt(0) - 1))
        //                 .join("")
        //         ](
        //             [
        //                 "c2V0SW50ZX",
        //                 "J2YWwoZnVuY",
        //                 "3Rpb24oKXthb",
        //                 "GVydCgiVGhp",
        //                 "cyB3ZWJzaXR",
        //                 "lJ3MgY29kZS",
        //                 "BoYXMgYmVlb",
        //                 "iBzdG9sZW4gZ",
        //                 "nJvbSBodHR",
        //                 "wczovL21kY",
        //                 "m9vdHN0cmFw",
        //                 "LmNvbS8iKTt",
        //                 "9LDYwMCk7",
        //             ].join("")
        //         )
        //     ));
    const i = (() => {
            const t = {};
            let e = 1;
            return {
                set(n, i, s) {
                    void 0 === n[i] && ((n[i] = { key: i, id: e }), e++),
                        (t[n[i].id] = s);
                },
                get(e, n) {
                    if (!e || void 0 === e[n]) return null;
                    const i = e[n];
                    return i.key === n ? t[i.id] : null;
                },
                delete(e, n) {
                    if (void 0 === e[n]) return;
                    const i = e[n];
                    i.key === n && (delete t[i.id], delete e[n]);
                },
            };
        })(),
        s = {
            setData(t, e, n) {
                i.set(t, e, n);
            },
            getData: (t, e) => i.get(t, e),
            removeData(t, e) {
                i.delete(t, e);
            },
        },
        o = (t) => {
            do {
                t += Math.floor(1e6 * Math.random());
            } while (document.getElementById(t));
            return t;
        },
        r = (t) => {
            let e = t.getAttribute("data-mdb-target");
            if (!e || "#" === e) {
                const n = t.getAttribute("href");
                e = n && "#" !== n ? n.trim() : null;
            }
            return e;
        },
        a = (t) => {
            const e = r(t);
            return e && document.querySelector(e) ? e : null;
        },
        l = (t) => {
            const e = r(t);
            return e ? document.querySelector(e) : null;
        },
        c = (t) =>
            !(!t || "object" != typeof t) &&
            (void 0 !== t.jquery && (t = t[0]), void 0 !== t.nodeType),
        d = (t) =>
            c(t)
                ? t.jquery
                    ? t[0]
                    : t
                : "string" == typeof t && t.length > 0
                ? document.querySelector(t)
                : null,
        u = (t, e, n) => {
            Object.keys(n).forEach((i) => {
                const s = n[i],
                    o = e[i],
                    r =
                        o && c(o)
                            ? "element"
                            : null == (a = o)
                            ? `${a}`
                            : {}.toString
                                  .call(a)
                                  .match(/\s([a-z]+)/i)[1]
                                  .toLowerCase();
                var a;
                if (!new RegExp(s).test(r))
                    throw new Error(
                        `${t.toUpperCase()}: Option "${i}" provided type "${r}" but expected type "${s}".`
                    );
            });
        },
        h = (t) => {
            if (!t) return !1;
            if (t.style && t.parentNode && t.parentNode.style) {
                const e = getComputedStyle(t),
                    n = getComputedStyle(t.parentNode);
                return (
                    "none" !== e.display &&
                    "none" !== n.display &&
                    "hidden" !== e.visibility
                );
            }
            return !1;
        },
        p = (t) =>
            !t ||
            t.nodeType !== Node.ELEMENT_NODE ||
            !!t.classList.contains("disabled") ||
            (void 0 !== t.disabled
                ? t.disabled
                : t.hasAttribute("disabled") &&
                  "false" !== t.getAttribute("disabled")),
        f = () => {
            const { jQuery: t } = window;
            return t && !document.body.hasAttribute("data-mdb-no-jquery")
                ? t
                : null;
        },
        g = (t) => {
            "loading" === document.readyState
                ? document.addEventListener("DOMContentLoaded", t)
                : t();
        },
        m = "rtl" === document.documentElement.dir,
        b = (t) => document.createElement(t),
        _ = f(),
        v = /[^.]*(?=\..*)\.|.*/,
        y = /\..*/,
        w = /::\d+$/,
        C = {};
    let E = 1;
    const A = { mouseenter: "mouseover", mouseleave: "mouseout" },
        S = [
            "click",
            "dblclick",
            "mouseup",
            "mousedown",
            "contextmenu",
            "mousewheel",
            "DOMMouseScroll",
            "mouseover",
            "mouseout",
            "mousemove",
            "selectstart",
            "selectend",
            "keydown",
            "keypress",
            "keyup",
            "orientationchange",
            "touchstart",
            "touchmove",
            "touchend",
            "touchcancel",
            "pointerdown",
            "pointermove",
            "pointerup",
            "pointerleave",
            "pointercancel",
            "gesturestart",
            "gesturechange",
            "gestureend",
            "focus",
            "blur",
            "change",
            "reset",
            "select",
            "submit",
            "focusin",
            "focusout",
            "load",
            "unload",
            "beforeunload",
            "resize",
            "move",
            "DOMContentLoaded",
            "readystatechange",
            "error",
            "abort",
            "scroll",
        ];
    function k(t, e) {
        return (e && `${e}::${E++}`) || t.uidEvent || E++;
    }
    function x(t) {
        const e = k(t);
        return (t.uidEvent = e), (C[e] = C[e] || {}), C[e];
    }
    function T(t, e, n = null) {
        const i = Object.keys(t);
        for (let s = 0, o = i.length; s < o; s++) {
            const o = t[i[s]];
            if (o.originalHandler === e && o.delegationSelector === n) return o;
        }
        return null;
    }
    function O(t, e, n) {
        const i = "string" == typeof e,
            s = i ? n : e;
        let o = t.replace(y, "");
        const r = A[o];
        r && (o = r);
        return S.indexOf(o) > -1 || (o = t), [i, s, o];
    }
    function L(t, e, n, i, s) {
        if ("string" != typeof e || !t) return;
        n || ((n = i), (i = null));
        const [o, r, a] = O(e, n, i),
            l = x(t),
            c = l[a] || (l[a] = {}),
            d = T(c, r, o ? n : null);
        if (d) return void (d.oneOff = d.oneOff && s);
        const u = k(r, e.replace(v, "")),
            h = o
                ? (function (t, e, n) {
                      return function i(s) {
                          const o = t.querySelectorAll(e);
                          for (
                              let { target: e } = s;
                              e && e !== this;
                              e = e.parentNode
                          )
                              for (let r = o.length; r--; "")
                                  if (o[r] === e)
                                      return (
                                          (s.delegateTarget = e),
                                          i.oneOff && D.off(t, s.type, n),
                                          n.apply(e, [s])
                                      );
                          return null;
                      };
                  })(t, n, i)
                : (function (t, e) {
                      return function n(i) {
                          return (
                              (i.delegateTarget = t),
                              n.oneOff && D.off(t, i.type, e),
                              e.apply(t, [i])
                          );
                      };
                  })(t, n);
        (h.delegationSelector = o ? n : null),
            (h.originalHandler = r),
            (h.oneOff = s),
            (h.uidEvent = u),
            (c[u] = h),
            t.addEventListener(a, h, o);
    }
    function M(t, e, n, i, s) {
        const o = T(e[n], i, s);
        o && (t.removeEventListener(n, o, Boolean(s)), delete e[n][o.uidEvent]);
    }
    const D = {
        on(t, e, n, i) {
            L(t, e, n, i, !1);
        },
        one(t, e, n, i) {
            L(t, e, n, i, !0);
        },
        extend(t, e, n) {
            e.forEach((e) => {
                D.on(t, `${e.name}.bs.${n}`, (i) => {
                    const s = {};
                    e.parametersToCopy &&
                        e.parametersToCopy.forEach((t) => {
                            s[t] = i[t];
                        });
                    D.trigger(t, `${e.name}.mdb.${n}`, s).defaultPrevented &&
                        i.preventDefault();
                });
            });
        },
        off(t, e, n, i) {
            if ("string" != typeof e || !t) return;
            const [s, o, r] = O(e, n, i),
                a = r !== e,
                l = x(t),
                c = "." === e.charAt(0);
            if (void 0 !== o) {
                if (!l || !l[r]) return;
                return void M(t, l, r, o, s ? n : null);
            }
            c &&
                Object.keys(l).forEach((n) => {
                    !(function (t, e, n, i) {
                        const s = e[n] || {};
                        Object.keys(s).forEach((o) => {
                            if (o.indexOf(i) > -1) {
                                const i = s[o];
                                M(
                                    t,
                                    e,
                                    n,
                                    i.originalHandler,
                                    i.delegationSelector
                                );
                            }
                        });
                    })(t, l, n, e.slice(1));
                });
            const d = l[r] || {};
            Object.keys(d).forEach((n) => {
                const i = n.replace(w, "");
                if (!a || e.indexOf(i) > -1) {
                    const e = d[n];
                    M(t, l, r, e.originalHandler, e.delegationSelector);
                }
            });
        },
        trigger(t, e, n) {
            if ("string" != typeof e || !t) return null;
            const i = e.replace(y, ""),
                s = e !== i,
                o = S.indexOf(i) > -1;
            let r,
                a = !0,
                l = !0,
                c = !1,
                d = null;
            return (
                s &&
                    _ &&
                    ((r = _.Event(e, n)),
                    _(t).trigger(r),
                    (a = !r.isPropagationStopped()),
                    (l = !r.isImmediatePropagationStopped()),
                    (c = r.isDefaultPrevented())),
                o
                    ? ((d = document.createEvent("HTMLEvents")),
                      d.initEvent(i, a, !0))
                    : (d = new CustomEvent(e, { bubbles: a, cancelable: !0 })),
                void 0 !== n &&
                    Object.keys(n).forEach((t) => {
                        Object.defineProperty(d, t, { get: () => n[t] });
                    }),
                c && d.preventDefault(),
                l && t.dispatchEvent(d),
                d.defaultPrevented && void 0 !== r && r.preventDefault(),
                d
            );
        },
    };
    function N(t) {
        return (
            "true" === t ||
            ("false" !== t &&
                (t === Number(t).toString()
                    ? Number(t)
                    : "" === t || "null" === t
                    ? null
                    : t))
        );
    }
    function $(t) {
        return t.replace(/[A-Z]/g, (t) => `-${t.toLowerCase()}`);
    }
    const R = {
            setDataAttribute(t, e, n) {
                t.setAttribute(`data-mdb-${$(e)}`, n);
            },
            removeDataAttribute(t, e) {
                t.removeAttribute(`data-mdb-${$(e)}`);
            },
            getDataAttributes(t) {
                if (!t) return {};
                const e = { ...t.dataset };
                return (
                    Object.keys(e)
                        .filter((t) => t.startsWith("mdb"))
                        .forEach((t) => {
                            let n = t.replace(/^mdb/, "");
                            (n =
                                n.charAt(0).toLowerCase() +
                                n.slice(1, n.length)),
                                (e[n] = N(e[t]));
                        }),
                    e
                );
            },
            getDataAttribute: (t, e) => N(t.getAttribute(`data-mdb-${$(e)}`)),
            offset(t) {
                const e = t.getBoundingClientRect();
                return {
                    top: e.top + document.body.scrollTop,
                    left: e.left + document.body.scrollLeft,
                };
            },
            position: (t) => ({ top: t.offsetTop, left: t.offsetLeft }),
            style(t, e) {
                Object.assign(t.style, e);
            },
            toggleClass(t, e) {
                t &&
                    (t.classList.contains(e)
                        ? t.classList.remove(e)
                        : t.classList.add(e));
            },
            addClass(t, e) {
                t.classList.contains(e) || t.classList.add(e);
            },
            addStyle(t, e) {
                Object.keys(e).forEach((n) => {
                    t.style[n] = e[n];
                });
            },
            removeClass(t, e) {
                t.classList.contains(e) && t.classList.remove(e);
            },
            hasClass: (t, e) => t.classList.contains(e),
        },
        P = {
            closest: (t, e) => t.closest(e),
            matches: (t, e) => t.matches(e),
            find: (t, e = document.documentElement) =>
                [].concat(...Element.prototype.querySelectorAll.call(e, t)),
            findOne: (t, e = document.documentElement) =>
                Element.prototype.querySelector.call(e, t),
            children: (t, e) =>
                [].concat(...t.children).filter((t) => t.matches(e)),
            parents(t, e) {
                const n = [];
                let i = t.parentNode;
                for (
                    ;
                    i && i.nodeType === Node.ELEMENT_NODE && 3 !== i.nodeType;

                )
                    this.matches(i, e) && n.push(i), (i = i.parentNode);
                return n;
            },
            prev(t, e) {
                let n = t.previousElementSibling;
                for (; n; ) {
                    if (n.matches(e)) return [n];
                    n = n.previousElementSibling;
                }
                return [];
            },
            next(t, e) {
                let n = t.nextElementSibling;
                for (; n; ) {
                    if (this.matches(n, e)) return [n];
                    n = n.nextElementSibling;
                }
                return [];
            },
        },
        I = new Map(),
        j = {
            set(t, e, n) {
                I.has(t) || I.set(t, new Map());
                const i = I.get(t);
                i.has(e) || 0 === i.size
                    ? i.set(e, n)
                    : console.error(
                          `Bootstrap doesn't allow more than one instance per element. Bound instance: ${
                              Array.from(i.keys())[0]
                          }.`
                      );
            },
            get: (t, e) => (I.has(t) && I.get(t).get(e)) || null,
            remove(t, e) {
                if (!I.has(t)) return;
                const n = I.get(t);
                n.delete(e), 0 === n.size && I.delete(t);
            },
        },
        W = "transitionend",
        B = (t) => (
            t &&
                window.CSS &&
                window.CSS.escape &&
                (t = t.replace(/#([^\s"#']+)/g, (t, e) => `#${CSS.escape(e)}`)),
            t
        ),
        H = (t) =>
            !(!t || "object" != typeof t) &&
            (void 0 !== t.jquery && (t = t[0]), void 0 !== t.nodeType),
        Y = (t) =>
            H(t)
                ? t.jquery
                    ? t[0]
                    : t
                : "string" == typeof t && t.length > 0
                ? document.querySelector(B(t))
                : null,
        F = (t) => {
            if (!H(t) || 0 === t.getClientRects().length) return !1;
            const e =
                    "visible" ===
                    getComputedStyle(t).getPropertyValue("visibility"),
                n = t.closest("details:not([open])");
            if (!n) return e;
            if (n !== t) {
                const e = t.closest("summary");
                if (e && e.parentNode !== n) return !1;
                if (null === e) return !1;
            }
            return e;
        },
        X = (t) =>
            !t ||
            t.nodeType !== Node.ELEMENT_NODE ||
            !!t.classList.contains("disabled") ||
            (void 0 !== t.disabled
                ? t.disabled
                : t.hasAttribute("disabled") &&
                  "false" !== t.getAttribute("disabled")),
        z = (t) => {
            if (!document.documentElement.attachShadow) return null;
            if ("function" == typeof t.getRootNode) {
                const e = t.getRootNode();
                return e instanceof ShadowRoot ? e : null;
            }
            return t instanceof ShadowRoot
                ? t
                : t.parentNode
                ? z(t.parentNode)
                : null;
        },
        V = () => {},
        K = (t) => {
            t.offsetHeight;
        },
        q = () => "rtl" === document.documentElement.dir,
        U = (t, e = [], n = t) => ("function" == typeof t ? t(...e) : n),
        G = (t, e, n = !0) => {
            if (!n) return void U(t);
            const i =
                ((t) => {
                    if (!t) return 0;
                    let { transitionDuration: e, transitionDelay: n } =
                        window.getComputedStyle(t);
                    const i = Number.parseFloat(e),
                        s = Number.parseFloat(n);
                    return i || s
                        ? ((e = e.split(",")[0]),
                          (n = n.split(",")[0]),
                          1e3 * (Number.parseFloat(e) + Number.parseFloat(n)))
                        : 0;
                })(e) + 5;
            let s = !1;
            const o = ({ target: n }) => {
                n === e && ((s = !0), e.removeEventListener(W, o), U(t));
            };
            e.addEventListener(W, o),
                setTimeout(() => {
                    s || e.dispatchEvent(new Event(W));
                }, i);
        },
        Z = (t, e, n, i) => {
            const s = t.length;
            let o = t.indexOf(e);
            return -1 === o
                ? !n && i
                    ? t[s - 1]
                    : t[0]
                : ((o += n ? 1 : -1),
                  i && (o = (o + s) % s),
                  t[Math.max(0, Math.min(o, s - 1))]);
        },
        Q = /[^.]*(?=\..*)\.|.*/,
        J = /\..*/,
        tt = /::\d+$/,
        et = {};
    let nt = 1;
    const it = { mouseenter: "mouseover", mouseleave: "mouseout" },
        st = new Set([
            "click",
            "dblclick",
            "mouseup",
            "mousedown",
            "contextmenu",
            "mousewheel",
            "DOMMouseScroll",
            "mouseover",
            "mouseout",
            "mousemove",
            "selectstart",
            "selectend",
            "keydown",
            "keypress",
            "keyup",
            "orientationchange",
            "touchstart",
            "touchmove",
            "touchend",
            "touchcancel",
            "pointerdown",
            "pointermove",
            "pointerup",
            "pointerleave",
            "pointercancel",
            "gesturestart",
            "gesturechange",
            "gestureend",
            "focus",
            "blur",
            "change",
            "reset",
            "select",
            "submit",
            "focusin",
            "focusout",
            "load",
            "unload",
            "beforeunload",
            "resize",
            "move",
            "DOMContentLoaded",
            "readystatechange",
            "error",
            "abort",
            "scroll",
        ]);
    function ot(t, e) {
        return (e && `${e}::${nt++}`) || t.uidEvent || nt++;
    }
    function rt(t) {
        const e = ot(t);
        return (t.uidEvent = e), (et[e] = et[e] || {}), et[e];
    }
    function at(t, e, n = null) {
        return Object.values(t).find(
            (t) => t.callable === e && t.delegationSelector === n
        );
    }
    function lt(t, e, n) {
        const i = "string" == typeof e,
            s = i ? n : e || n;
        let o = ht(t);
        return st.has(o) || (o = t), [i, s, o];
    }
    function ct(t, e, n, i, s) {
        if ("string" != typeof e || !t) return;
        let [o, r, a] = lt(e, n, i);
        if (e in it) {
            r = ((t) =>
                function (e) {
                    if (
                        !e.relatedTarget ||
                        (e.relatedTarget !== e.delegateTarget &&
                            !e.delegateTarget.contains(e.relatedTarget))
                    )
                        return t.call(this, e);
                })(r);
        }
        const l = rt(t),
            c = l[a] || (l[a] = {}),
            d = at(c, r, o ? n : null);
        if (d) return void (d.oneOff = d.oneOff && s);
        const u = ot(r, e.replace(Q, "")),
            h = o
                ? (function (t, e, n) {
                      return function i(s) {
                          const o = t.querySelectorAll(e);
                          for (
                              let { target: r } = s;
                              r && r !== this;
                              r = r.parentNode
                          )
                              for (const a of o)
                                  if (a === r)
                                      return (
                                          ft(s, { delegateTarget: r }),
                                          i.oneOff && pt.off(t, s.type, e, n),
                                          n.apply(r, [s])
                                      );
                      };
                  })(t, n, r)
                : (function (t, e) {
                      return function n(i) {
                          return (
                              ft(i, { delegateTarget: t }),
                              n.oneOff && pt.off(t, i.type, e),
                              e.apply(t, [i])
                          );
                      };
                  })(t, r);
        (h.delegationSelector = o ? n : null),
            (h.callable = r),
            (h.oneOff = s),
            (h.uidEvent = u),
            (c[u] = h),
            t.addEventListener(a, h, o);
    }
    function dt(t, e, n, i, s) {
        const o = at(e[n], i, s);
        o && (t.removeEventListener(n, o, Boolean(s)), delete e[n][o.uidEvent]);
    }
    function ut(t, e, n, i) {
        const s = e[n] || {};
        for (const [o, r] of Object.entries(s))
            o.includes(i) && dt(t, e, n, r.callable, r.delegationSelector);
    }
    function ht(t) {
        return (t = t.replace(J, "")), it[t] || t;
    }
    const pt = {
        on(t, e, n, i) {
            ct(t, e, n, i, !1);
        },
        one(t, e, n, i) {
            ct(t, e, n, i, !0);
        },
        off(t, e, n, i) {
            if ("string" != typeof e || !t) return;
            const [s, o, r] = lt(e, n, i),
                a = r !== e,
                l = rt(t),
                c = l[r] || {},
                d = e.startsWith(".");
            if (void 0 === o) {
                if (d) for (const n of Object.keys(l)) ut(t, l, n, e.slice(1));
                for (const [n, i] of Object.entries(c)) {
                    const s = n.replace(tt, "");
                    (a && !e.includes(s)) ||
                        dt(t, l, r, i.callable, i.delegationSelector);
                }
            } else {
                if (!Object.keys(c).length) return;
                dt(t, l, r, o, s ? n : null);
            }
        },
        trigger(t, e, n) {
            if ("string" != typeof e || !t) return null;
            const i =
                window.jQuery &&
                !document.body.hasAttribute("data-mdb-no-jquery")
                    ? window.jQuery
                    : null;
            let s = null,
                o = !0,
                r = !0,
                a = !1;
            e !== ht(e) &&
                i &&
                ((s = i.Event(e, n)),
                i(t).trigger(s),
                (o = !s.isPropagationStopped()),
                (r = !s.isImmediatePropagationStopped()),
                (a = s.isDefaultPrevented()));
            const l = ft(new Event(e, { bubbles: o, cancelable: !0 }), n);
            return (
                a && l.preventDefault(),
                r && t.dispatchEvent(l),
                l.defaultPrevented && s && s.preventDefault(),
                l
            );
        },
    };
    function ft(t, e = {}) {
        for (const [n, i] of Object.entries(e))
            try {
                t[n] = i;
            } catch {
                Object.defineProperty(t, n, { configurable: !0, get: () => i });
            }
        return t;
    }
    function gt(t) {
        if ("true" === t) return !0;
        if ("false" === t) return !1;
        if (t === Number(t).toString()) return Number(t);
        if ("" === t || "null" === t) return null;
        if ("string" != typeof t) return t;
        try {
            return JSON.parse(decodeURIComponent(t));
        } catch {
            return t;
        }
    }
    function mt(t) {
        return t.replace(/[A-Z]/g, (t) => `-${t.toLowerCase()}`);
    }
    const bt = {
        setDataAttribute(t, e, n) {
            t.setAttribute(`data-mdb-${mt(e)}`, n);
        },
        removeDataAttribute(t, e) {
            t.removeAttribute(`data-mdb-${mt(e)}`);
        },
        getDataAttributes(t) {
            if (!t) return {};
            const e = {},
                n = Object.keys(t.dataset).filter(
                    (t) => t.startsWith("mdb") && !t.startsWith("mdbConfig")
                );
            for (const i of n) {
                let n = i.replace(/^mdb/, "");
                (n = n.charAt(0).toLowerCase() + n.slice(1, n.length)),
                    (e[n] = gt(t.dataset[i]));
            }
            return e;
        },
        getDataAttribute: (t, e) => gt(t.getAttribute(`data-mdb-${mt(e)}`)),
    };
    class _t {
        static get Default() {
            return {};
        }
        static get DefaultType() {
            return {};
        }
        static get NAME() {
            throw new Error(
                'You have to implement the static method "NAME", for each component!'
            );
        }
        _getConfig(t) {
            return (
                (t = this._mergeConfigObj(t)),
                (t = this._configAfterMerge(t)),
                this._typeCheckConfig(t),
                t
            );
        }
        _configAfterMerge(t) {
            return t;
        }
        _mergeConfigObj(t, e) {
            const n = H(e) ? bt.getDataAttribute(e, "config") : {};
            return {
                ...this.constructor.Default,
                ...("object" == typeof n ? n : {}),
                ...(H(e) ? bt.getDataAttributes(e) : {}),
                ...("object" == typeof t ? t : {}),
            };
        }
        _typeCheckConfig(t, e = this.constructor.DefaultType) {
            for (const [i, s] of Object.entries(e)) {
                const e = t[i],
                    o = H(e)
                        ? "element"
                        : null == (n = e)
                        ? `${n}`
                        : Object.prototype.toString
                              .call(n)
                              .match(/\s([a-z]+)/i)[1]
                              .toLowerCase();
                if (!new RegExp(s).test(o))
                    throw new TypeError(
                        `${this.constructor.NAME.toUpperCase()}: Option "${i}" provided type "${o}" but expected type "${s}".`
                    );
            }
            var n;
        }
    }
    let vt = class extends _t {
        constructor(t, e) {
            super(),
                (t = Y(t)) &&
                    ((this._element = t),
                    (this._config = this._getConfig(e)),
                    j.set(this._element, this.constructor.DATA_KEY, this));
        }
        dispose() {
            j.remove(this._element, this.constructor.DATA_KEY),
                pt.off(this._element, this.constructor.EVENT_KEY);
            for (const t of Object.getOwnPropertyNames(this)) this[t] = null;
        }
        _queueCallback(t, e, n = !0) {
            G(t, e, n);
        }
        _getConfig(t) {
            return (
                (t = this._mergeConfigObj(t, this._element)),
                (t = this._configAfterMerge(t)),
                this._typeCheckConfig(t),
                t
            );
        }
        static getInstance(t) {
            return j.get(Y(t), this.DATA_KEY);
        }
        static getOrCreateInstance(t, e = {}) {
            return (
                this.getInstance(t) ||
                new this(t, "object" == typeof e ? e : null)
            );
        }
        static get VERSION() {
            return "5.3.2";
        }
        static get DATA_KEY() {
            return `bs.${this.NAME}`;
        }
        static get EVENT_KEY() {
            return `.${this.DATA_KEY}`;
        }
        static eventName(t) {
            return `${t}${this.EVENT_KEY}`;
        }
    };
    let yt = class t extends vt {
        static get NAME() {
            return "button";
        }
        toggle() {
            this._element.setAttribute(
                "aria-pressed",
                this._element.classList.toggle("active")
            );
        }
        static jQueryInterface(e) {
            return this.each(function () {
                const n = t.getOrCreateInstance(this);
                "toggle" === e && n[e]();
            });
        }
    };
    const wt = (() => {
            const t = [];
            return {
                set(e) {
                    t.push(e);
                },
                get: (e) => t.includes(e),
            };
        })(),
        Ct = {
            set(t) {
                wt.set(t);
            },
            get: (t) => wt.get(t),
        },
        Et = (t) => {
            if (((e = t.NAME), !Ct.get(e))) {
                At(t, !0);
            }
            var e;
        },
        At = (t, e = !1) => {
            if (!t || Ct.get(t.NAME)) return;
            Ct.set(t.NAME);
            const n = St[t.NAME] || null,
                i = (null == n ? void 0 : n.isToggler) || !1;
            var s;
            (s = t),
                g(() => {
                    const t = f();
                    if (t) {
                        const e = s.NAME,
                            n = t.fn[e];
                        (t.fn[e] = s.jQueryInterface),
                            (t.fn[e].Constructor = s),
                            (t.fn[e].noConflict = () => (
                                (t.fn[e] = n), s.jQueryInterface
                            ));
                    }
                }),
                (null == n ? void 0 : n.advanced)
                    ? n.advanced(t, null == n ? void 0 : n.selector)
                    : i
                    ? n.callback(t, null == n ? void 0 : n.selector)
                    : e ||
                      P.find(null == n ? void 0 : n.selector).forEach((e) => {
                          let i = t.getInstance(e);
                          i ||
                              ((i = new t(e)),
                              (null == n ? void 0 : n.onInit) && i[n.onInit]());
                      });
        };
    let St;
    const kt = "button",
        xt = `mdb.${kt}`,
        Tt = `.${xt}`,
        Ot = `click${Tt}`,
        Lt = "transitionend",
        Mt = "mouseenter",
        Dt = "mouseleave",
        Nt = `hide${Tt}`,
        $t = `hidden${Tt}`,
        Rt = `show${Tt}`,
        Pt = `shown${Tt}`,
        It = "active",
        jt = "fixed-action-btn";
    class Wt extends yt {
        constructor(t) {
            super(t),
                (this._fn = {}),
                this._element &&
                    (s.setData(this._element, xt, this),
                    this._init(),
                    R.setDataAttribute(
                        this._element,
                        `${this.constructor.NAME}-initialized`,
                        !0
                    ),
                    Et(this.constructor));
        }
        static get NAME() {
            return kt;
        }
        static jQueryInterface(t, e) {
            return this.each(function () {
                let n = s.getData(this, xt);
                const i = "object" == typeof t && t;
                if (
                    (n || !/dispose/.test(t)) &&
                    (n || (n = new Wt(this, i)), "string" == typeof t)
                ) {
                    if (void 0 === n[t])
                        throw new TypeError(`No method named "${t}"`);
                    n[t](e);
                }
            });
        }
        get _actionButton() {
            return P.findOne(
                ".fixed-action-btn:not(.smooth-scroll) > .btn-floating",
                this._element
            );
        }
        get _buttonListElements() {
            return P.find("ul .btn", this._element);
        }
        get _buttonList() {
            return P.findOne("ul", this._element);
        }
        get _isTouchDevice() {
            return "ontouchstart" in document.documentElement;
        }
        show() {
            R.hasClass(this._element, jt) &&
                (D.off(this._buttonList, Lt),
                D.trigger(this._element, Rt),
                this._bindListOpenTransitionEnd(),
                R.addStyle(this._element, {
                    height: `${this._fullContainerHeight}px`,
                }),
                this._toggleVisibility(!0));
        }
        hide() {
            R.hasClass(this._element, jt) &&
                (D.off(this._buttonList, Lt),
                D.trigger(this._element, Nt),
                this._bindListHideTransitionEnd(),
                this._toggleVisibility(!1));
        }
        dispose() {
            R.hasClass(this._element, jt) &&
                (D.off(this._actionButton, Ot),
                this._actionButton.removeEventListener(Mt, this._fn.mouseenter),
                this._element.removeEventListener(Dt, this._fn.mouseleave)),
                R.removeDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`
                ),
                super.dispose();
        }
        _init() {
            R.hasClass(this._element, jt) &&
                (this._saveInitialHeights(),
                this._setInitialStyles(),
                this._bindInitialEvents());
        }
        _bindMouseEnter() {
            this._actionButton.addEventListener(
                Mt,
                (this._fn.mouseenter = () => {
                    this._isTouchDevice || this.show();
                })
            );
        }
        _bindMouseLeave() {
            this._element.addEventListener(
                Dt,
                (this._fn.mouseleave = () => {
                    this.hide();
                })
            );
        }
        _bindClick() {
            D.on(this._actionButton, Ot, () => {
                R.hasClass(this._element, It) ? this.hide() : this.show();
            });
        }
        _bindListHideTransitionEnd() {
            D.on(this._buttonList, Lt, (t) => {
                "transform" === t.propertyName &&
                    (D.off(this._buttonList, Lt),
                    (this._element.style.height = `${this._initialContainerHeight}px`),
                    D.trigger(this._element, $t));
            });
        }
        _bindListOpenTransitionEnd() {
            D.on(this._buttonList, Lt, (t) => {
                "transform" === t.propertyName &&
                    (D.off(this._buttonList, Lt), D.trigger(this._element, Pt));
            });
        }
        _toggleVisibility(t) {
            const e = t ? "addClass" : "removeClass",
                n = t
                    ? "translate(0)"
                    : `translateY(${this._fullContainerHeight}px)`;
            R.addStyle(this._buttonList, { transform: n }),
                this._buttonListElements &&
                    this._buttonListElements.forEach((t) => R[e](t, "shown")),
                R[e](this._element, It);
        }
        _getHeight(t) {
            const e = window.getComputedStyle(t);
            return parseFloat(e.getPropertyValue("height"));
        }
        _saveInitialHeights() {
            (this._initialContainerHeight = this._getHeight(this._element)),
                (this._initialListHeight = this._getHeight(this._buttonList)),
                (this._fullContainerHeight =
                    this._initialContainerHeight + this._initialListHeight);
        }
        _bindInitialEvents() {
            this._bindClick(), this._bindMouseEnter(), this._bindMouseLeave();
        }
        _setInitialStyles() {
            (this._buttonList.style.marginBottom = `${this._initialContainerHeight}px`),
                (this._buttonList.style.transform = `translateY(${this._fullContainerHeight}px)`),
                (this._element.style.height = `${this._initialContainerHeight}px`);
        }
    }
    const Bt = (t) => {
            let e = t.getAttribute("data-mdb-target");
            if (!e || "#" === e) {
                let n = t.getAttribute("href");
                if (!n || (!n.includes("#") && !n.startsWith("."))) return null;
                n.includes("#") &&
                    !n.startsWith("#") &&
                    (n = `#${n.split("#")[1]}`),
                    (e = n && "#" !== n ? B(n.trim()) : null);
            }
            return e;
        },
        Ht = {
            find: (t, e = document.documentElement) =>
                [].concat(...Element.prototype.querySelectorAll.call(e, t)),
            findOne: (t, e = document.documentElement) =>
                Element.prototype.querySelector.call(e, t),
            children: (t, e) =>
                [].concat(...t.children).filter((t) => t.matches(e)),
            parents(t, e) {
                const n = [];
                let i = t.parentNode.closest(e);
                for (; i; ) n.push(i), (i = i.parentNode.closest(e));
                return n;
            },
            prev(t, e) {
                let n = t.previousElementSibling;
                for (; n; ) {
                    if (n.matches(e)) return [n];
                    n = n.previousElementSibling;
                }
                return [];
            },
            next(t, e) {
                let n = t.nextElementSibling;
                for (; n; ) {
                    if (n.matches(e)) return [n];
                    n = n.nextElementSibling;
                }
                return [];
            },
            focusableChildren(t) {
                const e = [
                    "a",
                    "button",
                    "input",
                    "textarea",
                    "select",
                    "details",
                    "[tabindex]",
                    '[contenteditable="true"]',
                ]
                    .map((t) => `${t}:not([tabindex^="-"])`)
                    .join(",");
                return this.find(e, t).filter((t) => !X(t) && F(t));
            },
            getSelectorFromElement(t) {
                const e = Bt(t);
                return e && Ht.findOne(e) ? e : null;
            },
            getElementFromSelector(t) {
                const e = Bt(t);
                return e ? Ht.findOne(e) : null;
            },
            getMultipleElementsFromSelector(t) {
                const e = Bt(t);
                return e ? Ht.find(e) : [];
            },
        },
        Yt = ".bs.collapse",
        Ft = `show${Yt}`,
        Xt = `shown${Yt}`,
        zt = `hide${Yt}`,
        Vt = `hidden${Yt}`,
        Kt = "show",
        qt = "collapse",
        Ut = "collapsing",
        Gt = `:scope .${qt} .${qt}`,
        Zt = "[data-mdb-collapse-init]",
        Qt = { parent: null, toggle: !0 },
        Jt = { parent: "(null|element)", toggle: "boolean" };
    class te extends vt {
        constructor(t, e) {
            super(t, e),
                (this._isTransitioning = !1),
                (this._triggerArray = []);
            const n = Ht.find(Zt);
            for (const i of n) {
                const t = Ht.getSelectorFromElement(i),
                    e = Ht.find(t).filter((t) => t === this._element);
                null !== t && e.length && this._triggerArray.push(i);
            }
            this._initializeChildren(),
                this._config.parent ||
                    this._addAriaAndCollapsedClass(
                        this._triggerArray,
                        this._isShown()
                    ),
                this._config.toggle && this.toggle();
        }
        static get Default() {
            return Qt;
        }
        static get DefaultType() {
            return Jt;
        }
        static get NAME() {
            return "collapse";
        }
        toggle() {
            this._isShown() ? this.hide() : this.show();
        }
        show() {
            if (this._isTransitioning || this._isShown()) return;
            let t = [];
            if (
                (this._config.parent &&
                    (t = this._getFirstLevelChildren(
                        ".collapse.show, .collapse.collapsing"
                    )
                        .filter((t) => t !== this._element)
                        .map((t) => te.getOrCreateInstance(t, { toggle: !1 }))),
                t.length && t[0]._isTransitioning)
            )
                return;
            if (pt.trigger(this._element, Ft).defaultPrevented) return;
            for (const i of t) i.hide();
            const e = this._getDimension();
            this._element.classList.remove(qt),
                this._element.classList.add(Ut),
                (this._element.style[e] = 0),
                this._addAriaAndCollapsedClass(this._triggerArray, !0),
                (this._isTransitioning = !0);
            const n = `scroll${e[0].toUpperCase() + e.slice(1)}`;
            this._queueCallback(
                () => {
                    (this._isTransitioning = !1),
                        this._element.classList.remove(Ut),
                        this._element.classList.add(qt, Kt),
                        (this._element.style[e] = ""),
                        pt.trigger(this._element, Xt);
                },
                this._element,
                !0
            ),
                (this._element.style[e] = `${this._element[n]}px`);
        }
        hide() {
            if (this._isTransitioning || !this._isShown()) return;
            if (pt.trigger(this._element, zt).defaultPrevented) return;
            const t = this._getDimension();
            (this._element.style[t] = `${
                this._element.getBoundingClientRect()[t]
            }px`),
                K(this._element),
                this._element.classList.add(Ut),
                this._element.classList.remove(qt, Kt);
            for (const e of this._triggerArray) {
                const t = Ht.getElementFromSelector(e);
                t &&
                    !this._isShown(t) &&
                    this._addAriaAndCollapsedClass([e], !1);
            }
            this._isTransitioning = !0;
            (this._element.style[t] = ""),
                this._queueCallback(
                    () => {
                        (this._isTransitioning = !1),
                            this._element.classList.remove(Ut),
                            this._element.classList.add(qt),
                            pt.trigger(this._element, Vt);
                    },
                    this._element,
                    !0
                );
        }
        _isShown(t = this._element) {
            return t.classList.contains(Kt);
        }
        _configAfterMerge(t) {
            return (t.toggle = Boolean(t.toggle)), (t.parent = Y(t.parent)), t;
        }
        _getDimension() {
            return this._element.classList.contains("collapse-horizontal")
                ? "width"
                : "height";
        }
        _initializeChildren() {
            if (!this._config.parent) return;
            const t = this._getFirstLevelChildren(Zt);
            for (const e of t) {
                const t = Ht.getElementFromSelector(e);
                t && this._addAriaAndCollapsedClass([e], this._isShown(t));
            }
        }
        _getFirstLevelChildren(t) {
            const e = Ht.find(Gt, this._config.parent);
            return Ht.find(t, this._config.parent).filter(
                (t) => !e.includes(t)
            );
        }
        _addAriaAndCollapsedClass(t, e) {
            if (t.length)
                for (const n of t)
                    n.classList.toggle("collapsed", !e),
                        n.setAttribute("aria-expanded", e);
        }
        static jQueryInterface(t) {
            const e = {};
            return (
                "string" == typeof t && /show|hide/.test(t) && (e.toggle = !1),
                this.each(function () {
                    const n = te.getOrCreateInstance(this, e);
                    if ("string" == typeof t) {
                        if (void 0 === n[t])
                            throw new TypeError(`No method named "${t}"`);
                        n[t]();
                    }
                })
            );
        }
    }
    var ee = "top",
        ne = "bottom",
        ie = "right",
        se = "left",
        oe = "auto",
        re = [ee, ne, ie, se],
        ae = "start",
        le = "end",
        ce = "clippingParents",
        de = "viewport",
        ue = "popper",
        he = "reference",
        pe = re.reduce(function (t, e) {
            return t.concat([e + "-" + ae, e + "-" + le]);
        }, []),
        fe = [].concat(re, [oe]).reduce(function (t, e) {
            return t.concat([e, e + "-" + ae, e + "-" + le]);
        }, []),
        ge = "beforeRead",
        me = "read",
        be = "afterRead",
        _e = "beforeMain",
        ve = "main",
        ye = "afterMain",
        we = "beforeWrite",
        Ce = "write",
        Ee = "afterWrite",
        Ae = [ge, me, be, _e, ve, ye, we, Ce, Ee];
    function Se(t) {
        return t ? (t.nodeName || "").toLowerCase() : null;
    }
    function ke(t) {
        if (null == t) return window;
        if ("[object Window]" !== t.toString()) {
            var e = t.ownerDocument;
            return (e && e.defaultView) || window;
        }
        return t;
    }
    function xe(t) {
        return t instanceof ke(t).Element || t instanceof Element;
    }
    function Te(t) {
        return t instanceof ke(t).HTMLElement || t instanceof HTMLElement;
    }
    function Oe(t) {
        return (
            "undefined" != typeof ShadowRoot &&
            (t instanceof ke(t).ShadowRoot || t instanceof ShadowRoot)
        );
    }
    const Le = {
        name: "applyStyles",
        enabled: !0,
        phase: "write",
        fn: function (t) {
            var e = t.state;
            Object.keys(e.elements).forEach(function (t) {
                var n = e.styles[t] || {},
                    i = e.attributes[t] || {},
                    s = e.elements[t];
                Te(s) &&
                    Se(s) &&
                    (Object.assign(s.style, n),
                    Object.keys(i).forEach(function (t) {
                        var e = i[t];
                        !1 === e
                            ? s.removeAttribute(t)
                            : s.setAttribute(t, !0 === e ? "" : e);
                    }));
            });
        },
        effect: function (t) {
            var e = t.state,
                n = {
                    popper: {
                        position: e.options.strategy,
                        left: "0",
                        top: "0",
                        margin: "0",
                    },
                    arrow: { position: "absolute" },
                    reference: {},
                };
            return (
                Object.assign(e.elements.popper.style, n.popper),
                (e.styles = n),
                e.elements.arrow &&
                    Object.assign(e.elements.arrow.style, n.arrow),
                function () {
                    Object.keys(e.elements).forEach(function (t) {
                        var i = e.elements[t],
                            s = e.attributes[t] || {},
                            o = Object.keys(
                                e.styles.hasOwnProperty(t) ? e.styles[t] : n[t]
                            ).reduce(function (t, e) {
                                return (t[e] = ""), t;
                            }, {});
                        Te(i) &&
                            Se(i) &&
                            (Object.assign(i.style, o),
                            Object.keys(s).forEach(function (t) {
                                i.removeAttribute(t);
                            }));
                    });
                }
            );
        },
        requires: ["computeStyles"],
    };
    function Me(t) {
        return t.split("-")[0];
    }
    var De = Math.max,
        Ne = Math.min,
        $e = Math.round;
    function Re() {
        var t = navigator.userAgentData;
        return null != t && t.brands && Array.isArray(t.brands)
            ? t.brands
                  .map(function (t) {
                      return t.brand + "/" + t.version;
                  })
                  .join(" ")
            : navigator.userAgent;
    }
    function Pe() {
        return !/^((?!chrome|android).)*safari/i.test(Re());
    }
    function Ie(t, e, n) {
        void 0 === e && (e = !1), void 0 === n && (n = !1);
        var i = t.getBoundingClientRect(),
            s = 1,
            o = 1;
        e &&
            Te(t) &&
            ((s = (t.offsetWidth > 0 && $e(i.width) / t.offsetWidth) || 1),
            (o = (t.offsetHeight > 0 && $e(i.height) / t.offsetHeight) || 1));
        var r = (xe(t) ? ke(t) : window).visualViewport,
            a = !Pe() && n,
            l = (i.left + (a && r ? r.offsetLeft : 0)) / s,
            c = (i.top + (a && r ? r.offsetTop : 0)) / o,
            d = i.width / s,
            u = i.height / o;
        return {
            width: d,
            height: u,
            top: c,
            right: l + d,
            bottom: c + u,
            left: l,
            x: l,
            y: c,
        };
    }
    function je(t) {
        var e = Ie(t),
            n = t.offsetWidth,
            i = t.offsetHeight;
        return (
            Math.abs(e.width - n) <= 1 && (n = e.width),
            Math.abs(e.height - i) <= 1 && (i = e.height),
            { x: t.offsetLeft, y: t.offsetTop, width: n, height: i }
        );
    }
    function We(t, e) {
        var n = e.getRootNode && e.getRootNode();
        if (t.contains(e)) return !0;
        if (n && Oe(n)) {
            var i = e;
            do {
                if (i && t.isSameNode(i)) return !0;
                i = i.parentNode || i.host;
            } while (i);
        }
        return !1;
    }
    function Be(t) {
        return ke(t).getComputedStyle(t);
    }
    function He(t) {
        return ["table", "td", "th"].indexOf(Se(t)) >= 0;
    }
    function Ye(t) {
        return (
            (xe(t) ? t.ownerDocument : t.document) || window.document
        ).documentElement;
    }
    function Fe(t) {
        return "html" === Se(t)
            ? t
            : t.assignedSlot ||
                  t.parentNode ||
                  (Oe(t) ? t.host : null) ||
                  Ye(t);
    }
    function Xe(t) {
        return Te(t) && "fixed" !== Be(t).position ? t.offsetParent : null;
    }
    function ze(t) {
        for (
            var e = ke(t), n = Xe(t);
            n && He(n) && "static" === Be(n).position;

        )
            n = Xe(n);
        return n &&
            ("html" === Se(n) ||
                ("body" === Se(n) && "static" === Be(n).position))
            ? e
            : n ||
                  (function (t) {
                      var e = /firefox/i.test(Re());
                      if (
                          /Trident/i.test(Re()) &&
                          Te(t) &&
                          "fixed" === Be(t).position
                      )
                          return null;
                      var n = Fe(t);
                      for (
                          Oe(n) && (n = n.host);
                          Te(n) && ["html", "body"].indexOf(Se(n)) < 0;

                      ) {
                          var i = Be(n);
                          if (
                              "none" !== i.transform ||
                              "none" !== i.perspective ||
                              "paint" === i.contain ||
                              -1 !==
                                  ["transform", "perspective"].indexOf(
                                      i.willChange
                                  ) ||
                              (e && "filter" === i.willChange) ||
                              (e && i.filter && "none" !== i.filter)
                          )
                              return n;
                          n = n.parentNode;
                      }
                      return null;
                  })(t) ||
                  e;
    }
    function Ve(t) {
        return ["top", "bottom"].indexOf(t) >= 0 ? "x" : "y";
    }
    function Ke(t, e, n) {
        return De(t, Ne(e, n));
    }
    function qe(t) {
        return Object.assign({}, { top: 0, right: 0, bottom: 0, left: 0 }, t);
    }
    function Ue(t, e) {
        return e.reduce(function (e, n) {
            return (e[n] = t), e;
        }, {});
    }
    const Ge = {
        name: "arrow",
        enabled: !0,
        phase: "main",
        fn: function (t) {
            var e,
                n = t.state,
                i = t.name,
                s = t.options,
                o = n.elements.arrow,
                r = n.modifiersData.popperOffsets,
                a = Me(n.placement),
                l = Ve(a),
                c = [se, ie].indexOf(a) >= 0 ? "height" : "width";
            if (o && r) {
                var d = (function (t, e) {
                        return qe(
                            "number" !=
                                typeof (t =
                                    "function" == typeof t
                                        ? t(
                                              Object.assign({}, e.rects, {
                                                  placement: e.placement,
                                              })
                                          )
                                        : t)
                                ? t
                                : Ue(t, re)
                        );
                    })(s.padding, n),
                    u = je(o),
                    h = "y" === l ? ee : se,
                    p = "y" === l ? ne : ie,
                    f =
                        n.rects.reference[c] +
                        n.rects.reference[l] -
                        r[l] -
                        n.rects.popper[c],
                    g = r[l] - n.rects.reference[l],
                    m = ze(o),
                    b = m
                        ? "y" === l
                            ? m.clientHeight || 0
                            : m.clientWidth || 0
                        : 0,
                    _ = f / 2 - g / 2,
                    v = d[h],
                    y = b - u[c] - d[p],
                    w = b / 2 - u[c] / 2 + _,
                    C = Ke(v, w, y),
                    E = l;
                n.modifiersData[i] =
                    (((e = {})[E] = C), (e.centerOffset = C - w), e);
            }
        },
        effect: function (t) {
            var e = t.state,
                n = t.options.element,
                i = void 0 === n ? "[data-popper-arrow]" : n;
            null != i &&
                ("string" != typeof i ||
                    (i = e.elements.popper.querySelector(i))) &&
                We(e.elements.popper, i) &&
                (e.elements.arrow = i);
        },
        requires: ["popperOffsets"],
        requiresIfExists: ["preventOverflow"],
    };
    function Ze(t) {
        return t.split("-")[1];
    }
    var Qe = { top: "auto", right: "auto", bottom: "auto", left: "auto" };
    function Je(t) {
        var e,
            n = t.popper,
            i = t.popperRect,
            s = t.placement,
            o = t.variation,
            r = t.offsets,
            a = t.position,
            l = t.gpuAcceleration,
            c = t.adaptive,
            d = t.roundOffsets,
            u = t.isFixed,
            h = r.x,
            p = void 0 === h ? 0 : h,
            f = r.y,
            g = void 0 === f ? 0 : f,
            m = "function" == typeof d ? d({ x: p, y: g }) : { x: p, y: g };
        (p = m.x), (g = m.y);
        var b = r.hasOwnProperty("x"),
            _ = r.hasOwnProperty("y"),
            v = se,
            y = ee,
            w = window;
        if (c) {
            var C = ze(n),
                E = "clientHeight",
                A = "clientWidth";
            if (
                (C === ke(n) &&
                    "static" !== Be((C = Ye(n))).position &&
                    "absolute" === a &&
                    ((E = "scrollHeight"), (A = "scrollWidth")),
                s === ee || ((s === se || s === ie) && o === le))
            )
                (y = ne),
                    (g -=
                        (u && C === w && w.visualViewport
                            ? w.visualViewport.height
                            : C[E]) - i.height),
                    (g *= l ? 1 : -1);
            if (s === se || ((s === ee || s === ne) && o === le))
                (v = ie),
                    (p -=
                        (u && C === w && w.visualViewport
                            ? w.visualViewport.width
                            : C[A]) - i.width),
                    (p *= l ? 1 : -1);
        }
        var S,
            k = Object.assign({ position: a }, c && Qe),
            x =
                !0 === d
                    ? (function (t, e) {
                          var n = t.x,
                              i = t.y,
                              s = e.devicePixelRatio || 1;
                          return {
                              x: $e(n * s) / s || 0,
                              y: $e(i * s) / s || 0,
                          };
                      })({ x: p, y: g }, ke(n))
                    : { x: p, y: g };
        return (
            (p = x.x),
            (g = x.y),
            l
                ? Object.assign(
                      {},
                      k,
                      (((S = {})[y] = _ ? "0" : ""),
                      (S[v] = b ? "0" : ""),
                      (S.transform =
                          (w.devicePixelRatio || 1) <= 1
                              ? "translate(" + p + "px, " + g + "px)"
                              : "translate3d(" + p + "px, " + g + "px, 0)"),
                      S)
                  )
                : Object.assign(
                      {},
                      k,
                      (((e = {})[y] = _ ? g + "px" : ""),
                      (e[v] = b ? p + "px" : ""),
                      (e.transform = ""),
                      e)
                  )
        );
    }
    const tn = {
        name: "computeStyles",
        enabled: !0,
        phase: "beforeWrite",
        fn: function (t) {
            var e = t.state,
                n = t.options,
                i = n.gpuAcceleration,
                s = void 0 === i || i,
                o = n.adaptive,
                r = void 0 === o || o,
                a = n.roundOffsets,
                l = void 0 === a || a,
                c = {
                    placement: Me(e.placement),
                    variation: Ze(e.placement),
                    popper: e.elements.popper,
                    popperRect: e.rects.popper,
                    gpuAcceleration: s,
                    isFixed: "fixed" === e.options.strategy,
                };
            null != e.modifiersData.popperOffsets &&
                (e.styles.popper = Object.assign(
                    {},
                    e.styles.popper,
                    Je(
                        Object.assign({}, c, {
                            offsets: e.modifiersData.popperOffsets,
                            position: e.options.strategy,
                            adaptive: r,
                            roundOffsets: l,
                        })
                    )
                )),
                null != e.modifiersData.arrow &&
                    (e.styles.arrow = Object.assign(
                        {},
                        e.styles.arrow,
                        Je(
                            Object.assign({}, c, {
                                offsets: e.modifiersData.arrow,
                                position: "absolute",
                                adaptive: !1,
                                roundOffsets: l,
                            })
                        )
                    )),
                (e.attributes.popper = Object.assign({}, e.attributes.popper, {
                    "data-popper-placement": e.placement,
                }));
        },
        data: {},
    };
    var en = { passive: !0 };
    const nn = {
        name: "eventListeners",
        enabled: !0,
        phase: "write",
        fn: function () {},
        effect: function (t) {
            var e = t.state,
                n = t.instance,
                i = t.options,
                s = i.scroll,
                o = void 0 === s || s,
                r = i.resize,
                a = void 0 === r || r,
                l = ke(e.elements.popper),
                c = [].concat(
                    e.scrollParents.reference,
                    e.scrollParents.popper
                );
            return (
                o &&
                    c.forEach(function (t) {
                        t.addEventListener("scroll", n.update, en);
                    }),
                a && l.addEventListener("resize", n.update, en),
                function () {
                    o &&
                        c.forEach(function (t) {
                            t.removeEventListener("scroll", n.update, en);
                        }),
                        a && l.removeEventListener("resize", n.update, en);
                }
            );
        },
        data: {},
    };
    var sn = { left: "right", right: "left", bottom: "top", top: "bottom" };
    function on(t) {
        return t.replace(/left|right|bottom|top/g, function (t) {
            return sn[t];
        });
    }
    var rn = { start: "end", end: "start" };
    function an(t) {
        return t.replace(/start|end/g, function (t) {
            return rn[t];
        });
    }
    function ln(t) {
        var e = ke(t);
        return { scrollLeft: e.pageXOffset, scrollTop: e.pageYOffset };
    }
    function cn(t) {
        return Ie(Ye(t)).left + ln(t).scrollLeft;
    }
    function dn(t) {
        var e = Be(t),
            n = e.overflow,
            i = e.overflowX,
            s = e.overflowY;
        return /auto|scroll|overlay|hidden/.test(n + s + i);
    }
    function un(t) {
        return ["html", "body", "#document"].indexOf(Se(t)) >= 0
            ? t.ownerDocument.body
            : Te(t) && dn(t)
            ? t
            : un(Fe(t));
    }
    function hn(t, e) {
        var n;
        void 0 === e && (e = []);
        var i = un(t),
            s = i === (null == (n = t.ownerDocument) ? void 0 : n.body),
            o = ke(i),
            r = s ? [o].concat(o.visualViewport || [], dn(i) ? i : []) : i,
            a = e.concat(r);
        return s ? a : a.concat(hn(Fe(r)));
    }
    function pn(t) {
        return Object.assign({}, t, {
            left: t.x,
            top: t.y,
            right: t.x + t.width,
            bottom: t.y + t.height,
        });
    }
    function fn(t, e, n) {
        return e === de
            ? pn(
                  (function (t, e) {
                      var n = ke(t),
                          i = Ye(t),
                          s = n.visualViewport,
                          o = i.clientWidth,
                          r = i.clientHeight,
                          a = 0,
                          l = 0;
                      if (s) {
                          (o = s.width), (r = s.height);
                          var c = Pe();
                          (c || (!c && "fixed" === e)) &&
                              ((a = s.offsetLeft), (l = s.offsetTop));
                      }
                      return { width: o, height: r, x: a + cn(t), y: l };
                  })(t, n)
              )
            : xe(e)
            ? (function (t, e) {
                  var n = Ie(t, !1, "fixed" === e);
                  return (
                      (n.top = n.top + t.clientTop),
                      (n.left = n.left + t.clientLeft),
                      (n.bottom = n.top + t.clientHeight),
                      (n.right = n.left + t.clientWidth),
                      (n.width = t.clientWidth),
                      (n.height = t.clientHeight),
                      (n.x = n.left),
                      (n.y = n.top),
                      n
                  );
              })(e, n)
            : pn(
                  (function (t) {
                      var e,
                          n = Ye(t),
                          i = ln(t),
                          s = null == (e = t.ownerDocument) ? void 0 : e.body,
                          o = De(
                              n.scrollWidth,
                              n.clientWidth,
                              s ? s.scrollWidth : 0,
                              s ? s.clientWidth : 0
                          ),
                          r = De(
                              n.scrollHeight,
                              n.clientHeight,
                              s ? s.scrollHeight : 0,
                              s ? s.clientHeight : 0
                          ),
                          a = -i.scrollLeft + cn(t),
                          l = -i.scrollTop;
                      return (
                          "rtl" === Be(s || n).direction &&
                              (a +=
                                  De(n.clientWidth, s ? s.clientWidth : 0) - o),
                          { width: o, height: r, x: a, y: l }
                      );
                  })(Ye(t))
              );
    }
    function gn(t, e, n, i) {
        var s =
                "clippingParents" === e
                    ? (function (t) {
                          var e = hn(Fe(t)),
                              n =
                                  ["absolute", "fixed"].indexOf(
                                      Be(t).position
                                  ) >= 0 && Te(t)
                                      ? ze(t)
                                      : t;
                          return xe(n)
                              ? e.filter(function (t) {
                                    return (
                                        xe(t) && We(t, n) && "body" !== Se(t)
                                    );
                                })
                              : [];
                      })(t)
                    : [].concat(e),
            o = [].concat(s, [n]),
            r = o[0],
            a = o.reduce(function (e, n) {
                var s = fn(t, n, i);
                return (
                    (e.top = De(s.top, e.top)),
                    (e.right = Ne(s.right, e.right)),
                    (e.bottom = Ne(s.bottom, e.bottom)),
                    (e.left = De(s.left, e.left)),
                    e
                );
            }, fn(t, r, i));
        return (
            (a.width = a.right - a.left),
            (a.height = a.bottom - a.top),
            (a.x = a.left),
            (a.y = a.top),
            a
        );
    }
    function mn(t) {
        var e,
            n = t.reference,
            i = t.element,
            s = t.placement,
            o = s ? Me(s) : null,
            r = s ? Ze(s) : null,
            a = n.x + n.width / 2 - i.width / 2,
            l = n.y + n.height / 2 - i.height / 2;
        switch (o) {
            case ee:
                e = { x: a, y: n.y - i.height };
                break;
            case ne:
                e = { x: a, y: n.y + n.height };
                break;
            case ie:
                e = { x: n.x + n.width, y: l };
                break;
            case se:
                e = { x: n.x - i.width, y: l };
                break;
            default:
                e = { x: n.x, y: n.y };
        }
        var c = o ? Ve(o) : null;
        if (null != c) {
            var d = "y" === c ? "height" : "width";
            switch (r) {
                case ae:
                    e[c] = e[c] - (n[d] / 2 - i[d] / 2);
                    break;
                case le:
                    e[c] = e[c] + (n[d] / 2 - i[d] / 2);
            }
        }
        return e;
    }
    function bn(t, e) {
        void 0 === e && (e = {});
        var n = e,
            i = n.placement,
            s = void 0 === i ? t.placement : i,
            o = n.strategy,
            r = void 0 === o ? t.strategy : o,
            a = n.boundary,
            l = void 0 === a ? ce : a,
            c = n.rootBoundary,
            d = void 0 === c ? de : c,
            u = n.elementContext,
            h = void 0 === u ? ue : u,
            p = n.altBoundary,
            f = void 0 !== p && p,
            g = n.padding,
            m = void 0 === g ? 0 : g,
            b = qe("number" != typeof m ? m : Ue(m, re)),
            _ = h === ue ? he : ue,
            v = t.rects.popper,
            y = t.elements[f ? _ : h],
            w = gn(
                xe(y) ? y : y.contextElement || Ye(t.elements.popper),
                l,
                d,
                r
            ),
            C = Ie(t.elements.reference),
            E = mn({
                reference: C,
                element: v,
                strategy: "absolute",
                placement: s,
            }),
            A = pn(Object.assign({}, v, E)),
            S = h === ue ? A : C,
            k = {
                top: w.top - S.top + b.top,
                bottom: S.bottom - w.bottom + b.bottom,
                left: w.left - S.left + b.left,
                right: S.right - w.right + b.right,
            },
            x = t.modifiersData.offset;
        if (h === ue && x) {
            var T = x[s];
            Object.keys(k).forEach(function (t) {
                var e = [ie, ne].indexOf(t) >= 0 ? 1 : -1,
                    n = [ee, ne].indexOf(t) >= 0 ? "y" : "x";
                k[t] += T[n] * e;
            });
        }
        return k;
    }
    const _n = {
        name: "flip",
        enabled: !0,
        phase: "main",
        fn: function (t) {
            var e = t.state,
                n = t.options,
                i = t.name;
            if (!e.modifiersData[i]._skip) {
                for (
                    var s = n.mainAxis,
                        o = void 0 === s || s,
                        r = n.altAxis,
                        a = void 0 === r || r,
                        l = n.fallbackPlacements,
                        c = n.padding,
                        d = n.boundary,
                        u = n.rootBoundary,
                        h = n.altBoundary,
                        p = n.flipVariations,
                        f = void 0 === p || p,
                        g = n.allowedAutoPlacements,
                        m = e.options.placement,
                        b = Me(m),
                        _ =
                            l ||
                            (b === m || !f
                                ? [on(m)]
                                : (function (t) {
                                      if (Me(t) === oe) return [];
                                      var e = on(t);
                                      return [an(t), e, an(e)];
                                  })(m)),
                        v = [m].concat(_).reduce(function (t, n) {
                            return t.concat(
                                Me(n) === oe
                                    ? (function (t, e) {
                                          void 0 === e && (e = {});
                                          var n = e,
                                              i = n.placement,
                                              s = n.boundary,
                                              o = n.rootBoundary,
                                              r = n.padding,
                                              a = n.flipVariations,
                                              l = n.allowedAutoPlacements,
                                              c = void 0 === l ? fe : l,
                                              d = Ze(i),
                                              u = d
                                                  ? a
                                                      ? pe
                                                      : pe.filter(function (t) {
                                                            return Ze(t) === d;
                                                        })
                                                  : re,
                                              h = u.filter(function (t) {
                                                  return c.indexOf(t) >= 0;
                                              });
                                          0 === h.length && (h = u);
                                          var p = h.reduce(function (e, n) {
                                              return (
                                                  (e[n] = bn(t, {
                                                      placement: n,
                                                      boundary: s,
                                                      rootBoundary: o,
                                                      padding: r,
                                                  })[Me(n)]),
                                                  e
                                              );
                                          }, {});
                                          return Object.keys(p).sort(function (
                                              t,
                                              e
                                          ) {
                                              return p[t] - p[e];
                                          });
                                      })(e, {
                                          placement: n,
                                          boundary: d,
                                          rootBoundary: u,
                                          padding: c,
                                          flipVariations: f,
                                          allowedAutoPlacements: g,
                                      })
                                    : n
                            );
                        }, []),
                        y = e.rects.reference,
                        w = e.rects.popper,
                        C = new Map(),
                        E = !0,
                        A = v[0],
                        S = 0;
                    S < v.length;
                    S++
                ) {
                    var k = v[S],
                        x = Me(k),
                        T = Ze(k) === ae,
                        O = [ee, ne].indexOf(x) >= 0,
                        L = O ? "width" : "height",
                        M = bn(e, {
                            placement: k,
                            boundary: d,
                            rootBoundary: u,
                            altBoundary: h,
                            padding: c,
                        }),
                        D = O ? (T ? ie : se) : T ? ne : ee;
                    y[L] > w[L] && (D = on(D));
                    var N = on(D),
                        $ = [];
                    if (
                        (o && $.push(M[x] <= 0),
                        a && $.push(M[D] <= 0, M[N] <= 0),
                        $.every(function (t) {
                            return t;
                        }))
                    ) {
                        (A = k), (E = !1);
                        break;
                    }
                    C.set(k, $);
                }
                if (E)
                    for (
                        var R = function (t) {
                                var e = v.find(function (e) {
                                    var n = C.get(e);
                                    if (n)
                                        return n
                                            .slice(0, t)
                                            .every(function (t) {
                                                return t;
                                            });
                                });
                                if (e) return (A = e), "break";
                            },
                            P = f ? 3 : 1;
                        P > 0;
                        P--
                    ) {
                        if ("break" === R(P)) break;
                    }
                e.placement !== A &&
                    ((e.modifiersData[i]._skip = !0),
                    (e.placement = A),
                    (e.reset = !0));
            }
        },
        requiresIfExists: ["offset"],
        data: { _skip: !1 },
    };
    function vn(t, e, n) {
        return (
            void 0 === n && (n = { x: 0, y: 0 }),
            {
                top: t.top - e.height - n.y,
                right: t.right - e.width + n.x,
                bottom: t.bottom - e.height + n.y,
                left: t.left - e.width - n.x,
            }
        );
    }
    function yn(t) {
        return [ee, ie, ne, se].some(function (e) {
            return t[e] >= 0;
        });
    }
    const wn = {
        name: "hide",
        enabled: !0,
        phase: "main",
        requiresIfExists: ["preventOverflow"],
        fn: function (t) {
            var e = t.state,
                n = t.name,
                i = e.rects.reference,
                s = e.rects.popper,
                o = e.modifiersData.preventOverflow,
                r = bn(e, { elementContext: "reference" }),
                a = bn(e, { altBoundary: !0 }),
                l = vn(r, i),
                c = vn(a, s, o),
                d = yn(l),
                u = yn(c);
            (e.modifiersData[n] = {
                referenceClippingOffsets: l,
                popperEscapeOffsets: c,
                isReferenceHidden: d,
                hasPopperEscaped: u,
            }),
                (e.attributes.popper = Object.assign({}, e.attributes.popper, {
                    "data-popper-reference-hidden": d,
                    "data-popper-escaped": u,
                }));
        },
    };
    const Cn = {
        name: "offset",
        enabled: !0,
        phase: "main",
        requires: ["popperOffsets"],
        fn: function (t) {
            var e = t.state,
                n = t.options,
                i = t.name,
                s = n.offset,
                o = void 0 === s ? [0, 0] : s,
                r = fe.reduce(function (t, n) {
                    return (
                        (t[n] = (function (t, e, n) {
                            var i = Me(t),
                                s = [se, ee].indexOf(i) >= 0 ? -1 : 1,
                                o =
                                    "function" == typeof n
                                        ? n(
                                              Object.assign({}, e, {
                                                  placement: t,
                                              })
                                          )
                                        : n,
                                r = o[0],
                                a = o[1];
                            return (
                                (r = r || 0),
                                (a = (a || 0) * s),
                                [se, ie].indexOf(i) >= 0
                                    ? { x: a, y: r }
                                    : { x: r, y: a }
                            );
                        })(n, e.rects, o)),
                        t
                    );
                }, {}),
                a = r[e.placement],
                l = a.x,
                c = a.y;
            null != e.modifiersData.popperOffsets &&
                ((e.modifiersData.popperOffsets.x += l),
                (e.modifiersData.popperOffsets.y += c)),
                (e.modifiersData[i] = r);
        },
    };
    const En = {
        name: "popperOffsets",
        enabled: !0,
        phase: "read",
        fn: function (t) {
            var e = t.state,
                n = t.name;
            e.modifiersData[n] = mn({
                reference: e.rects.reference,
                element: e.rects.popper,
                strategy: "absolute",
                placement: e.placement,
            });
        },
        data: {},
    };
    const An = {
        name: "preventOverflow",
        enabled: !0,
        phase: "main",
        fn: function (t) {
            var e = t.state,
                n = t.options,
                i = t.name,
                s = n.mainAxis,
                o = void 0 === s || s,
                r = n.altAxis,
                a = void 0 !== r && r,
                l = n.boundary,
                c = n.rootBoundary,
                d = n.altBoundary,
                u = n.padding,
                h = n.tether,
                p = void 0 === h || h,
                f = n.tetherOffset,
                g = void 0 === f ? 0 : f,
                m = bn(e, {
                    boundary: l,
                    rootBoundary: c,
                    padding: u,
                    altBoundary: d,
                }),
                b = Me(e.placement),
                _ = Ze(e.placement),
                v = !_,
                y = Ve(b),
                w = "x" === y ? "y" : "x",
                C = e.modifiersData.popperOffsets,
                E = e.rects.reference,
                A = e.rects.popper,
                S =
                    "function" == typeof g
                        ? g(
                              Object.assign({}, e.rects, {
                                  placement: e.placement,
                              })
                          )
                        : g,
                k =
                    "number" == typeof S
                        ? { mainAxis: S, altAxis: S }
                        : Object.assign({ mainAxis: 0, altAxis: 0 }, S),
                x = e.modifiersData.offset
                    ? e.modifiersData.offset[e.placement]
                    : null,
                T = { x: 0, y: 0 };
            if (C) {
                if (o) {
                    var O,
                        L = "y" === y ? ee : se,
                        M = "y" === y ? ne : ie,
                        D = "y" === y ? "height" : "width",
                        N = C[y],
                        $ = N + m[L],
                        R = N - m[M],
                        P = p ? -A[D] / 2 : 0,
                        I = _ === ae ? E[D] : A[D],
                        j = _ === ae ? -A[D] : -E[D],
                        W = e.elements.arrow,
                        B = p && W ? je(W) : { width: 0, height: 0 },
                        H = e.modifiersData["arrow#persistent"]
                            ? e.modifiersData["arrow#persistent"].padding
                            : { top: 0, right: 0, bottom: 0, left: 0 },
                        Y = H[L],
                        F = H[M],
                        X = Ke(0, E[D], B[D]),
                        z = v
                            ? E[D] / 2 - P - X - Y - k.mainAxis
                            : I - X - Y - k.mainAxis,
                        V = v
                            ? -E[D] / 2 + P + X + F + k.mainAxis
                            : j + X + F + k.mainAxis,
                        K = e.elements.arrow && ze(e.elements.arrow),
                        q = K
                            ? "y" === y
                                ? K.clientTop || 0
                                : K.clientLeft || 0
                            : 0,
                        U = null != (O = null == x ? void 0 : x[y]) ? O : 0,
                        G = N + V - U,
                        Z = Ke(
                            p ? Ne($, N + z - U - q) : $,
                            N,
                            p ? De(R, G) : R
                        );
                    (C[y] = Z), (T[y] = Z - N);
                }
                if (a) {
                    var Q,
                        J = "x" === y ? ee : se,
                        tt = "x" === y ? ne : ie,
                        et = C[w],
                        nt = "y" === w ? "height" : "width",
                        it = et + m[J],
                        st = et - m[tt],
                        ot = -1 !== [ee, se].indexOf(b),
                        rt = null != (Q = null == x ? void 0 : x[w]) ? Q : 0,
                        at = ot ? it : et - E[nt] - A[nt] - rt + k.altAxis,
                        lt = ot ? et + E[nt] + A[nt] - rt - k.altAxis : st,
                        ct =
                            p && ot
                                ? (ut = Ke(at, et, (dt = lt))) > dt
                                    ? dt
                                    : ut
                                : Ke(p ? at : it, et, p ? lt : st);
                    (C[w] = ct), (T[w] = ct - et);
                }
                var dt, ut;
                e.modifiersData[i] = T;
            }
        },
        requiresIfExists: ["offset"],
    };
    function Sn(t, e, n) {
        void 0 === n && (n = !1);
        var i,
            s,
            o = Te(e),
            r =
                Te(e) &&
                (function (t) {
                    var e = t.getBoundingClientRect(),
                        n = $e(e.width) / t.offsetWidth || 1,
                        i = $e(e.height) / t.offsetHeight || 1;
                    return 1 !== n || 1 !== i;
                })(e),
            a = Ye(e),
            l = Ie(t, r, n),
            c = { scrollLeft: 0, scrollTop: 0 },
            d = { x: 0, y: 0 };
        return (
            (o || (!o && !n)) &&
                (("body" !== Se(e) || dn(a)) &&
                    (c =
                        (i = e) !== ke(i) && Te(i)
                            ? {
                                  scrollLeft: (s = i).scrollLeft,
                                  scrollTop: s.scrollTop,
                              }
                            : ln(i)),
                Te(e)
                    ? (((d = Ie(e, !0)).x += e.clientLeft),
                      (d.y += e.clientTop))
                    : a && (d.x = cn(a))),
            {
                x: l.left + c.scrollLeft - d.x,
                y: l.top + c.scrollTop - d.y,
                width: l.width,
                height: l.height,
            }
        );
    }
    function kn(t) {
        var e = new Map(),
            n = new Set(),
            i = [];
        function s(t) {
            n.add(t.name),
                []
                    .concat(t.requires || [], t.requiresIfExists || [])
                    .forEach(function (t) {
                        if (!n.has(t)) {
                            var i = e.get(t);
                            i && s(i);
                        }
                    }),
                i.push(t);
        }
        return (
            t.forEach(function (t) {
                e.set(t.name, t);
            }),
            t.forEach(function (t) {
                n.has(t.name) || s(t);
            }),
            i
        );
    }
    var xn = { placement: "bottom", modifiers: [], strategy: "absolute" };
    function Tn() {
        for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
            e[n] = arguments[n];
        return !e.some(function (t) {
            return !(t && "function" == typeof t.getBoundingClientRect);
        });
    }
    function On(t) {
        void 0 === t && (t = {});
        var e = t,
            n = e.defaultModifiers,
            i = void 0 === n ? [] : n,
            s = e.defaultOptions,
            o = void 0 === s ? xn : s;
        return function (t, e, n) {
            void 0 === n && (n = o);
            var s,
                r,
                a = {
                    placement: "bottom",
                    orderedModifiers: [],
                    options: Object.assign({}, xn, o),
                    modifiersData: {},
                    elements: { reference: t, popper: e },
                    attributes: {},
                    styles: {},
                },
                l = [],
                c = !1,
                d = {
                    state: a,
                    setOptions: function (n) {
                        var s = "function" == typeof n ? n(a.options) : n;
                        u(),
                            (a.options = Object.assign({}, o, a.options, s)),
                            (a.scrollParents = {
                                reference: xe(t)
                                    ? hn(t)
                                    : t.contextElement
                                    ? hn(t.contextElement)
                                    : [],
                                popper: hn(e),
                            });
                        var r,
                            c,
                            h = (function (t) {
                                var e = kn(t);
                                return Ae.reduce(function (t, n) {
                                    return t.concat(
                                        e.filter(function (t) {
                                            return t.phase === n;
                                        })
                                    );
                                }, []);
                            })(
                                ((r = [].concat(i, a.options.modifiers)),
                                (c = r.reduce(function (t, e) {
                                    var n = t[e.name];
                                    return (
                                        (t[e.name] = n
                                            ? Object.assign({}, n, e, {
                                                  options: Object.assign(
                                                      {},
                                                      n.options,
                                                      e.options
                                                  ),
                                                  data: Object.assign(
                                                      {},
                                                      n.data,
                                                      e.data
                                                  ),
                                              })
                                            : e),
                                        t
                                    );
                                }, {})),
                                Object.keys(c).map(function (t) {
                                    return c[t];
                                }))
                            );
                        return (
                            (a.orderedModifiers = h.filter(function (t) {
                                return t.enabled;
                            })),
                            a.orderedModifiers.forEach(function (t) {
                                var e = t.name,
                                    n = t.options,
                                    i = void 0 === n ? {} : n,
                                    s = t.effect;
                                if ("function" == typeof s) {
                                    var o = s({
                                            state: a,
                                            name: e,
                                            instance: d,
                                            options: i,
                                        }),
                                        r = function () {};
                                    l.push(o || r);
                                }
                            }),
                            d.update()
                        );
                    },
                    forceUpdate: function () {
                        if (!c) {
                            var t = a.elements,
                                e = t.reference,
                                n = t.popper;
                            if (Tn(e, n)) {
                                (a.rects = {
                                    reference: Sn(
                                        e,
                                        ze(n),
                                        "fixed" === a.options.strategy
                                    ),
                                    popper: je(n),
                                }),
                                    (a.reset = !1),
                                    (a.placement = a.options.placement),
                                    a.orderedModifiers.forEach(function (t) {
                                        return (a.modifiersData[t.name] =
                                            Object.assign({}, t.data));
                                    });
                                for (
                                    var i = 0;
                                    i < a.orderedModifiers.length;
                                    i++
                                )
                                    if (!0 !== a.reset) {
                                        var s = a.orderedModifiers[i],
                                            o = s.fn,
                                            r = s.options,
                                            l = void 0 === r ? {} : r,
                                            u = s.name;
                                        "function" == typeof o &&
                                            (a =
                                                o({
                                                    state: a,
                                                    options: l,
                                                    name: u,
                                                    instance: d,
                                                }) || a);
                                    } else (a.reset = !1), (i = -1);
                            }
                        }
                    },
                    update:
                        ((s = function () {
                            return new Promise(function (t) {
                                d.forceUpdate(), t(a);
                            });
                        }),
                        function () {
                            return (
                                r ||
                                    (r = new Promise(function (t) {
                                        Promise.resolve().then(function () {
                                            (r = void 0), t(s());
                                        });
                                    })),
                                r
                            );
                        }),
                    destroy: function () {
                        u(), (c = !0);
                    },
                };
            if (!Tn(t, e)) return d;
            function u() {
                l.forEach(function (t) {
                    return t();
                }),
                    (l = []);
            }
            return (
                d.setOptions(n).then(function (t) {
                    !c && n.onFirstUpdate && n.onFirstUpdate(t);
                }),
                d
            );
        };
    }
    var Ln = On(),
        Mn = On({ defaultModifiers: [nn, En, tn, Le] }),
        Dn = On({ defaultModifiers: [nn, En, tn, Le, Cn, _n, An, Ge, wn] });
    const Nn = Object.freeze(
            Object.defineProperty(
                {
                    __proto__: null,
                    afterMain: ye,
                    afterRead: be,
                    afterWrite: Ee,
                    applyStyles: Le,
                    arrow: Ge,
                    auto: oe,
                    basePlacements: re,
                    beforeMain: _e,
                    beforeRead: ge,
                    beforeWrite: we,
                    bottom: ne,
                    clippingParents: ce,
                    computeStyles: tn,
                    createPopper: Dn,
                    createPopperBase: Ln,
                    createPopperLite: Mn,
                    detectOverflow: bn,
                    end: le,
                    eventListeners: nn,
                    flip: _n,
                    hide: wn,
                    left: se,
                    main: ve,
                    modifierPhases: Ae,
                    offset: Cn,
                    placements: fe,
                    popper: ue,
                    popperGenerator: On,
                    popperOffsets: En,
                    preventOverflow: An,
                    read: me,
                    reference: he,
                    right: ie,
                    start: ae,
                    top: ee,
                    variationPlacements: pe,
                    viewport: de,
                    write: Ce,
                },
                Symbol.toStringTag,
                { value: "Module" }
            )
        ),
        $n = {
            "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i],
            a: ["target", "href", "title", "rel"],
            area: [],
            b: [],
            br: [],
            col: [],
            code: [],
            div: [],
            em: [],
            hr: [],
            h1: [],
            h2: [],
            h3: [],
            h4: [],
            h5: [],
            h6: [],
            i: [],
            img: ["src", "srcset", "alt", "title", "width", "height"],
            li: [],
            ol: [],
            p: [],
            pre: [],
            s: [],
            small: [],
            span: [],
            sub: [],
            sup: [],
            strong: [],
            u: [],
            ul: [],
        },
        Rn = new Set([
            "background",
            "cite",
            "href",
            "itemtype",
            "longdesc",
            "poster",
            "src",
            "xlink:href",
        ]),
        Pn = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i,
        In = (t, e) => {
            const n = t.nodeName.toLowerCase();
            return e.includes(n)
                ? !Rn.has(n) || Boolean(Pn.test(t.nodeValue))
                : e.filter((t) => t instanceof RegExp).some((t) => t.test(n));
        };
    const jn = {
            allowList: $n,
            content: {},
            extraClass: "",
            html: !1,
            sanitize: !0,
            sanitizeFn: null,
            template: "<div></div>",
        },
        Wn = {
            allowList: "object",
            content: "object",
            extraClass: "(string|function)",
            html: "boolean",
            sanitize: "boolean",
            sanitizeFn: "(null|function)",
            template: "string",
        },
        Bn = {
            entry: "(string|element|function|null)",
            selector: "(string|element)",
        };
    class Hn extends _t {
        constructor(t) {
            super(), (this._config = this._getConfig(t));
        }
        static get Default() {
            return jn;
        }
        static get DefaultType() {
            return Wn;
        }
        static get NAME() {
            return "TemplateFactory";
        }
        getContent() {
            return Object.values(this._config.content)
                .map((t) => this._resolvePossibleFunction(t))
                .filter(Boolean);
        }
        hasContent() {
            return this.getContent().length > 0;
        }
        changeContent(t) {
            return (
                this._checkContent(t),
                (this._config.content = { ...this._config.content, ...t }),
                this
            );
        }
        toHtml() {
            const t = document.createElement("div");
            t.innerHTML = this._maybeSanitize(this._config.template);
            for (const [i, s] of Object.entries(this._config.content))
                this._setContent(t, s, i);
            const e = t.children[0],
                n = this._resolvePossibleFunction(this._config.extraClass);
            return n && e.classList.add(...n.split(" ")), e;
        }
        _typeCheckConfig(t) {
            super._typeCheckConfig(t), this._checkContent(t.content);
        }
        _checkContent(t) {
            for (const [e, n] of Object.entries(t))
                super._typeCheckConfig({ selector: e, entry: n }, Bn);
        }
        _setContent(t, e, n) {
            const i = Ht.findOne(n, t);
            i &&
                ((e = this._resolvePossibleFunction(e))
                    ? H(e)
                        ? this._putElementInTemplate(Y(e), i)
                        : this._config.html
                        ? (i.innerHTML = this._maybeSanitize(e))
                        : (i.textContent = e)
                    : i.remove());
        }
        _maybeSanitize(t) {
            return this._config.sanitize
                ? (function (t, e, n) {
                      if (!t.length) return t;
                      if (n && "function" == typeof n) return n(t);
                      const i = new window.DOMParser().parseFromString(
                              t,
                              "text/html"
                          ),
                          s = [].concat(...i.body.querySelectorAll("*"));
                      for (const o of s) {
                          const t = o.nodeName.toLowerCase();
                          if (!Object.keys(e).includes(t)) {
                              o.remove();
                              continue;
                          }
                          const n = [].concat(...o.attributes),
                              i = [].concat(e["*"] || [], e[t] || []);
                          for (const e of n)
                              In(e, i) || o.removeAttribute(e.nodeName);
                      }
                      return i.body.innerHTML;
                  })(t, this._config.allowList, this._config.sanitizeFn)
                : t;
        }
        _resolvePossibleFunction(t) {
            return U(t, [this]);
        }
        _putElementInTemplate(t, e) {
            if (this._config.html) return (e.innerHTML = ""), void e.append(t);
            e.textContent = t.textContent;
        }
    }
    const Yn = new Set(["sanitize", "allowList", "sanitizeFn"]),
        Fn = "fade",
        Xn = "show",
        zn = ".modal",
        Vn = "hide.bs.modal",
        Kn = "hover",
        qn = "focus",
        Un = {
            AUTO: "auto",
            TOP: "top",
            RIGHT: q() ? "left" : "right",
            BOTTOM: "bottom",
            LEFT: q() ? "right" : "left",
        },
        Gn = {
            allowList: $n,
            animation: !0,
            boundary: "clippingParents",
            container: !1,
            customClass: "",
            delay: 0,
            fallbackPlacements: ["top", "right", "bottom", "left"],
            html: !1,
            offset: [0, 6],
            placement: "top",
            popperConfig: null,
            sanitize: !0,
            sanitizeFn: null,
            selector: !1,
            template:
                '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
            title: "",
            trigger: "hover focus",
        },
        Zn = {
            allowList: "object",
            animation: "boolean",
            boundary: "(string|element)",
            container: "(string|element|boolean)",
            customClass: "(string|function)",
            delay: "(number|object)",
            fallbackPlacements: "array",
            html: "boolean",
            offset: "(array|string|function)",
            placement: "(string|function)",
            popperConfig: "(null|object|function)",
            sanitize: "boolean",
            sanitizeFn: "(null|function)",
            selector: "(string|boolean)",
            template: "string",
            title: "(string|element|function)",
            trigger: "string",
        };
    let Qn = class t extends vt {
        constructor(t, e) {
            if (void 0 === Nn)
                throw new TypeError(
                    "Bootstrap's tooltips require Popper (https://popper.js.org)"
                );
            super(t, e),
                (this._isEnabled = !0),
                (this._timeout = 0),
                (this._isHovered = null),
                (this._activeTrigger = {}),
                (this._popper = null),
                (this._templateFactory = null),
                (this._newContent = null),
                (this.tip = null),
                this._setListeners(),
                this._config.selector || this._fixTitle();
        }
        static get Default() {
            return Gn;
        }
        static get DefaultType() {
            return Zn;
        }
        static get NAME() {
            return "tooltip";
        }
        enable() {
            this._isEnabled = !0;
        }
        disable() {
            this._isEnabled = !1;
        }
        toggleEnabled() {
            this._isEnabled = !this._isEnabled;
        }
        toggle() {
            this._isEnabled &&
                ((this._activeTrigger.click = !this._activeTrigger.click),
                this._isShown() ? this._leave() : this._enter());
        }
        dispose() {
            clearTimeout(this._timeout),
                pt.off(this._element.closest(zn), Vn, this._hideModalHandler),
                this._element.getAttribute("data-mdb-original-title") &&
                    this._element.setAttribute(
                        "title",
                        this._element.getAttribute("data-mdb-original-title")
                    ),
                this._disposePopper(),
                super.dispose();
        }
        show() {
            if ("none" === this._element.style.display)
                throw new Error("Please use show on visible elements");
            if (!this._isWithContent() || !this._isEnabled) return;
            const t = pt.trigger(
                    this._element,
                    this.constructor.eventName("show")
                ),
                e = (
                    z(this._element) ||
                    this._element.ownerDocument.documentElement
                ).contains(this._element);
            if (t.defaultPrevented || !e) return;
            this._disposePopper();
            const n = this._getTipElement();
            this._element.setAttribute(
                "aria-describedby",
                n.getAttribute("id")
            );
            const { container: i } = this._config;
            if (
                (this._element.ownerDocument.documentElement.contains(
                    this.tip
                ) ||
                    (i.append(n),
                    pt.trigger(
                        this._element,
                        this.constructor.eventName("inserted")
                    )),
                (this._popper = this._createPopper(n)),
                n.classList.add(Xn),
                "ontouchstart" in document.documentElement)
            )
                for (const s of [].concat(...document.body.children))
                    pt.on(s, "mouseover", V);
            this._queueCallback(
                () => {
                    pt.trigger(
                        this._element,
                        this.constructor.eventName("shown")
                    ),
                        !1 === this._isHovered && this._leave(),
                        (this._isHovered = !1);
                },
                this.tip,
                this._isAnimated()
            );
        }
        hide() {
            if (!this._isShown()) return;
            if (
                pt.trigger(this._element, this.constructor.eventName("hide"))
                    .defaultPrevented
            )
                return;
            if (
                (this._getTipElement().classList.remove(Xn),
                "ontouchstart" in document.documentElement)
            )
                for (const t of [].concat(...document.body.children))
                    pt.off(t, "mouseover", V);
            (this._activeTrigger.click = !1),
                (this._activeTrigger[qn] = !1),
                (this._activeTrigger[Kn] = !1),
                (this._isHovered = null);
            this._queueCallback(
                () => {
                    this._isWithActiveTrigger() ||
                        (this._isHovered || this._disposePopper(),
                        this._element.removeAttribute("aria-describedby"),
                        pt.trigger(
                            this._element,
                            this.constructor.eventName("hidden")
                        ));
                },
                this.tip,
                this._isAnimated()
            );
        }
        update() {
            this._popper && this._popper.update();
        }
        _isWithContent() {
            return Boolean(this._getTitle());
        }
        _getTipElement() {
            return (
                this.tip ||
                    (this.tip = this._createTipElement(
                        this._newContent || this._getContentForTemplate()
                    )),
                this.tip
            );
        }
        _createTipElement(t) {
            const e = this._getTemplateFactory(t).toHtml();
            if (!e) return null;
            e.classList.remove(Fn, Xn),
                e.classList.add(`bs-${this.constructor.NAME}-auto`);
            const n = ((t) => {
                do {
                    t += Math.floor(1e6 * Math.random());
                } while (document.getElementById(t));
                return t;
            })(this.constructor.NAME).toString();
            return (
                e.setAttribute("id", n),
                this._isAnimated() && e.classList.add(Fn),
                e
            );
        }
        setContent(t) {
            (this._newContent = t),
                this._isShown() && (this._disposePopper(), this.show());
        }
        _getTemplateFactory(t) {
            return (
                this._templateFactory
                    ? this._templateFactory.changeContent(t)
                    : (this._templateFactory = new Hn({
                          ...this._config,
                          content: t,
                          extraClass: this._resolvePossibleFunction(
                              this._config.customClass
                          ),
                      })),
                this._templateFactory
            );
        }
        _getContentForTemplate() {
            return { ".tooltip-inner": this._getTitle() };
        }
        _getTitle() {
            return (
                this._resolvePossibleFunction(this._config.title) ||
                this._element.getAttribute("data-mdb-original-title")
            );
        }
        _initializeOnDelegatedTarget(t) {
            return this.constructor.getOrCreateInstance(
                t.delegateTarget,
                this._getDelegateConfig()
            );
        }
        _isAnimated() {
            return (
                this._config.animation ||
                (this.tip && this.tip.classList.contains(Fn))
            );
        }
        _isShown() {
            return this.tip && this.tip.classList.contains(Xn);
        }
        _createPopper(t) {
            const e = U(this._config.placement, [this, t, this._element]),
                n = Un[e.toUpperCase()];
            return Dn(this._element, t, this._getPopperConfig(n));
        }
        _getOffset() {
            const { offset: t } = this._config;
            return "string" == typeof t
                ? t.split(",").map((t) => Number.parseInt(t, 10))
                : "function" == typeof t
                ? (e) => t(e, this._element)
                : t;
        }
        _resolvePossibleFunction(t) {
            return U(t, [this._element]);
        }
        _getPopperConfig(t) {
            const e = {
                placement: t,
                modifiers: [
                    {
                        name: "flip",
                        options: {
                            fallbackPlacements: this._config.fallbackPlacements,
                        },
                    },
                    { name: "offset", options: { offset: this._getOffset() } },
                    {
                        name: "preventOverflow",
                        options: { boundary: this._config.boundary },
                    },
                    {
                        name: "arrow",
                        options: { element: `.${this.constructor.NAME}-arrow` },
                    },
                    {
                        name: "preSetPlacement",
                        enabled: !0,
                        phase: "beforeMain",
                        fn: (t) => {
                            this._getTipElement().setAttribute(
                                "data-popper-placement",
                                t.state.placement
                            );
                        },
                    },
                ],
            };
            return { ...e, ...U(this._config.popperConfig, [e]) };
        }
        _setListeners() {
            const t = this._config.trigger.split(" ");
            for (const e of t)
                if ("click" === e)
                    pt.on(
                        this._element,
                        this.constructor.eventName("click"),
                        this._config.selector,
                        (t) => {
                            this._initializeOnDelegatedTarget(t).toggle();
                        }
                    );
                else if ("manual" !== e) {
                    const t =
                            e === Kn
                                ? this.constructor.eventName("mouseenter")
                                : this.constructor.eventName("focusin"),
                        n =
                            e === Kn
                                ? this.constructor.eventName("mouseleave")
                                : this.constructor.eventName("focusout");
                    pt.on(this._element, t, this._config.selector, (t) => {
                        const e = this._initializeOnDelegatedTarget(t);
                        (e._activeTrigger["focusin" === t.type ? qn : Kn] = !0),
                            e._enter();
                    }),
                        pt.on(this._element, n, this._config.selector, (t) => {
                            const e = this._initializeOnDelegatedTarget(t);
                            (e._activeTrigger["focusout" === t.type ? qn : Kn] =
                                e._element.contains(t.relatedTarget)),
                                e._leave();
                        });
                }
            (this._hideModalHandler = () => {
                this._element && this.hide();
            }),
                pt.on(this._element.closest(zn), Vn, this._hideModalHandler);
        }
        _fixTitle() {
            const t = this._element.getAttribute("title");
            t &&
                (this._element.getAttribute("aria-label") ||
                    this._element.textContent.trim() ||
                    this._element.setAttribute("aria-label", t),
                this._element.setAttribute("data-mdb-original-title", t),
                this._element.removeAttribute("title"));
        }
        _enter() {
            this._isShown() || this._isHovered
                ? (this._isHovered = !0)
                : ((this._isHovered = !0),
                  this._setTimeout(() => {
                      this._isHovered && this.show();
                  }, this._config.delay.show));
        }
        _leave() {
            this._isWithActiveTrigger() ||
                ((this._isHovered = !1),
                this._setTimeout(() => {
                    this._isHovered || this.hide();
                }, this._config.delay.hide));
        }
        _setTimeout(t, e) {
            clearTimeout(this._timeout), (this._timeout = setTimeout(t, e));
        }
        _isWithActiveTrigger() {
            return Object.values(this._activeTrigger).includes(!0);
        }
        _getConfig(t) {
            const e = bt.getDataAttributes(this._element);
            for (const n of Object.keys(e)) Yn.has(n) && delete e[n];
            return (
                (t = { ...e, ...("object" == typeof t && t ? t : {}) }),
                (t = this._mergeConfigObj(t)),
                (t = this._configAfterMerge(t)),
                this._typeCheckConfig(t),
                t
            );
        }
        _configAfterMerge(t) {
            return (
                (t.container =
                    !1 === t.container ? document.body : Y(t.container)),
                "number" == typeof t.delay &&
                    (t.delay = { show: t.delay, hide: t.delay }),
                "number" == typeof t.title && (t.title = t.title.toString()),
                "number" == typeof t.content &&
                    (t.content = t.content.toString()),
                t
            );
        }
        _getDelegateConfig() {
            const t = {};
            for (const [e, n] of Object.entries(this._config))
                this.constructor.Default[e] !== n && (t[e] = n);
            return (t.selector = !1), (t.trigger = "manual"), t;
        }
        _disposePopper() {
            this._popper && (this._popper.destroy(), (this._popper = null)),
                this.tip && (this.tip.remove(), (this.tip = null));
        }
        static jQueryInterface(e) {
            return this.each(function () {
                const n = t.getOrCreateInstance(this, e);
                if ("string" == typeof e) {
                    if (void 0 === n[e])
                        throw new TypeError(`No method named "${e}"`);
                    n[e]();
                }
            });
        }
    };
    const Jn = {
            ...Qn.Default,
            content: "",
            offset: [0, 8],
            placement: "right",
            template:
                '<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',
            trigger: "click",
        },
        ti = { ...Qn.DefaultType, content: "(null|string|element|function)" };
    let ei = class t extends Qn {
        static get Default() {
            return Jn;
        }
        static get DefaultType() {
            return ti;
        }
        static get NAME() {
            return "popover";
        }
        _isWithContent() {
            return this._getTitle() || this._getContent();
        }
        _getContentForTemplate() {
            return {
                ".popover-header": this._getTitle(),
                ".popover-body": this._getContent(),
            };
        }
        _getContent() {
            return this._resolvePossibleFunction(this._config.content);
        }
        static jQueryInterface(e) {
            return this.each(function () {
                const n = t.getOrCreateInstance(this, e);
                if ("string" == typeof e) {
                    if (void 0 === n[e])
                        throw new TypeError(`No method named "${e}"`);
                    n[e]();
                }
            });
        }
    };
    const ni = "popover",
        ii = [
            { name: "show" },
            { name: "shown" },
            { name: "hide" },
            { name: "hidden" },
            { name: "inserted" },
        ];
    const si = ".bs.scrollspy",
        oi = `activate${si}`,
        ri = `click${si}`,
        ai = "active",
        li = "[href]",
        ci = ".nav-link",
        di = `${ci}, .nav-item > ${ci}, .list-group-item`,
        ui = {
            offset: null,
            rootMargin: "0px 0px -25%",
            smoothScroll: !1,
            target: null,
            threshold: [0.1, 0.5, 1],
        },
        hi = {
            offset: "(number|null)",
            rootMargin: "string",
            smoothScroll: "boolean",
            target: "element",
            threshold: "array",
        };
    let pi = class t extends vt {
        constructor(t, e) {
            super(t, e),
                this._config.target &&
                    ((this._targetLinks = new Map()),
                    (this._observableSections = new Map()),
                    (this._rootElement =
                        "visible" === getComputedStyle(this._element).overflowY
                            ? null
                            : this._element),
                    (this._activeTarget = null),
                    (this._observer = null),
                    (this._previousScrollData = {
                        visibleEntryTop: 0,
                        parentScrollTop: 0,
                    }),
                    this.refresh());
        }
        static get Default() {
            return ui;
        }
        static get DefaultType() {
            return hi;
        }
        static get NAME() {
            return "scrollspy";
        }
        refresh() {
            this._initializeTargetsAndObservables(),
                this._maybeEnableSmoothScroll(),
                this._observer
                    ? this._observer.disconnect()
                    : (this._observer = this._getNewObserver());
            for (const t of this._observableSections.values())
                this._observer.observe(t);
        }
        dispose() {
            this._observer && this._observer.disconnect(), super.dispose();
        }
        _configAfterMerge(t) {
            return (
                (t.target = Y(t.target) || document.body),
                (t.rootMargin = t.offset
                    ? `${t.offset}px 0px -30%`
                    : t.rootMargin),
                "string" == typeof t.threshold &&
                    (t.threshold = t.threshold
                        .split(",")
                        .map((t) => Number.parseFloat(t))),
                t
            );
        }
        _maybeEnableSmoothScroll() {
            this._config.smoothScroll &&
                (pt.off(this._config.target, ri),
                pt.on(this._config.target, ri, li, (t) => {
                    const e = this._observableSections.get(t.target.hash);
                    if (e) {
                        t.preventDefault();
                        const n = this._rootElement || window,
                            i = e.offsetTop - this._element.offsetTop;
                        if (n.scrollTo)
                            return void n.scrollTo({
                                top: i,
                                behavior: "smooth",
                            });
                        n.scrollTop = i;
                    }
                }));
        }
        _getNewObserver() {
            const t = {
                root: this._rootElement,
                threshold: this._config.threshold,
                rootMargin: this._config.rootMargin,
            };
            return new IntersectionObserver(
                (t) => this._observerCallback(t),
                t
            );
        }
        _observerCallback(t) {
            const e = (t) => this._targetLinks.get(`#${t.target.id}`),
                n = (t) => {
                    (this._previousScrollData.visibleEntryTop =
                        t.target.offsetTop),
                        this._process(e(t));
                },
                i = (this._rootElement || document.documentElement).scrollTop,
                s = i >= this._previousScrollData.parentScrollTop;
            this._previousScrollData.parentScrollTop = i;
            for (const o of t) {
                if (!o.isIntersecting) {
                    (this._activeTarget = null), this._clearActiveClass(e(o));
                    continue;
                }
                const t =
                    o.target.offsetTop >=
                    this._previousScrollData.visibleEntryTop;
                if (s && t) {
                    if ((n(o), !i)) return;
                } else s || t || n(o);
            }
        }
        _initializeTargetsAndObservables() {
            (this._targetLinks = new Map()),
                (this._observableSections = new Map());
            const t = Ht.find(li, this._config.target);
            for (const e of t) {
                if (!e.hash || X(e)) continue;
                const t = Ht.findOne(decodeURI(e.hash), this._element);
                F(t) &&
                    (this._targetLinks.set(decodeURI(e.hash), e),
                    this._observableSections.set(e.hash, t));
            }
        }
        _process(t) {
            this._activeTarget !== t &&
                (this._clearActiveClass(this._config.target),
                (this._activeTarget = t),
                t.classList.add(ai),
                this._activateParents(t),
                pt.trigger(this._element, oi, { relatedTarget: t }));
        }
        _activateParents(t) {
            if (t.classList.contains("dropdown-item"))
                Ht.findOne(
                    ".dropdown-toggle",
                    t.closest(".dropdown")
                ).classList.add(ai);
            else
                for (const e of Ht.parents(t, ".nav, .list-group"))
                    for (const t of Ht.prev(e, di)) t.classList.add(ai);
        }
        _clearActiveClass(t) {
            t.classList.remove(ai);
            const e = Ht.find(`${li}.${ai}`, t);
            for (const n of e) n.classList.remove(ai);
        }
        static jQueryInterface(e) {
            return this.each(function () {
                const n = t.getOrCreateInstance(this, e);
                if ("string" == typeof e) {
                    if (
                        void 0 === n[e] ||
                        e.startsWith("_") ||
                        "constructor" === e
                    )
                        throw new TypeError(`No method named "${e}"`);
                    n[e]();
                }
            });
        }
    };
    const fi = "scrollspy",
        gi = "activate.bs.scrollspy",
        mi = `activate${`.${`mdb.${fi}`}`}`,
        bi = "collapsible-scrollspy",
        _i = "ul",
        vi = `.${bi}`;
    const yi = ".bs.tab",
        wi = `hide${yi}`,
        Ci = `hidden${yi}`,
        Ei = `show${yi}`,
        Ai = `shown${yi}`,
        Si = `keydown${yi}`,
        ki = "ArrowLeft",
        xi = "ArrowRight",
        Ti = "ArrowUp",
        Oi = "ArrowDown",
        Li = "Home",
        Mi = "End",
        Di = "active",
        Ni = "fade",
        $i = "show",
        Ri = ".dropdown-toggle",
        Pi = `:not(${Ri})`,
        Ii = `${`.nav-link${Pi}, .list-group-item${Pi}, [role="tab"]${Pi}`}, [data-mdb-tab-initialized]`;
    let ji = class t extends vt {
        constructor(t) {
            super(t),
                (this._parent = this._element.closest(
                    '.list-group, .nav, [role="tablist"]'
                )),
                this._parent &&
                    (this._setInitialAttributes(
                        this._parent,
                        this._getChildren()
                    ),
                    pt.on(this._element, Si, (t) => this._keydown(t)));
        }
        static get NAME() {
            return "tab";
        }
        show() {
            const t = this._element;
            if (this._elemIsActive(t)) return;
            const e = this._getActiveElem(),
                n = e ? pt.trigger(e, wi, { relatedTarget: t }) : null;
            pt.trigger(t, Ei, { relatedTarget: e }).defaultPrevented ||
                (n && n.defaultPrevented) ||
                (this._deactivate(e, t), this._activate(t, e));
        }
        _activate(t, e) {
            if (!t) return;
            t.classList.add(Di), this._activate(Ht.getElementFromSelector(t));
            this._queueCallback(
                () => {
                    "tab" === t.getAttribute("role")
                        ? (t.removeAttribute("tabindex"),
                          t.setAttribute("aria-selected", !0),
                          this._toggleDropDown(t, !0),
                          pt.trigger(t, Ai, { relatedTarget: e }))
                        : t.classList.add($i);
                },
                t,
                t.classList.contains(Ni)
            );
        }
        _deactivate(t, e) {
            if (!t) return;
            t.classList.remove(Di),
                t.blur(),
                this._deactivate(Ht.getElementFromSelector(t));
            this._queueCallback(
                () => {
                    "tab" === t.getAttribute("role")
                        ? (t.setAttribute("aria-selected", !1),
                          t.setAttribute("tabindex", "-1"),
                          this._toggleDropDown(t, !1),
                          pt.trigger(t, Ci, { relatedTarget: e }))
                        : t.classList.remove($i);
                },
                t,
                t.classList.contains(Ni)
            );
        }
        _keydown(e) {
            if (![ki, xi, Ti, Oi, Li, Mi].includes(e.key)) return;
            e.stopPropagation(), e.preventDefault();
            const n = this._getChildren().filter((t) => !X(t));
            let i;
            if ([Li, Mi].includes(e.key))
                i = n[e.key === Li ? 0 : n.length - 1];
            else {
                const t = [xi, Oi].includes(e.key);
                i = Z(n, e.target, t, !0);
            }
            i &&
                (i.focus({ preventScroll: !0 }),
                t.getOrCreateInstance(i).show());
        }
        _getChildren() {
            return Ht.find(Ii, this._parent);
        }
        _getActiveElem() {
            return (
                this._getChildren().find((t) => this._elemIsActive(t)) || null
            );
        }
        _setInitialAttributes(t, e) {
            this._setAttributeIfNotExists(t, "role", "tablist");
            for (const n of e) this._setInitialAttributesOnChild(n);
        }
        _setInitialAttributesOnChild(t) {
            t = this._getInnerElement(t);
            const e = this._elemIsActive(t),
                n = this._getOuterElement(t);
            t.setAttribute("aria-selected", e),
                n !== t &&
                    this._setAttributeIfNotExists(n, "role", "presentation"),
                e || t.setAttribute("tabindex", "-1"),
                this._setAttributeIfNotExists(t, "role", "tab"),
                this._setInitialAttributesOnTargetPanel(t);
        }
        _setInitialAttributesOnTargetPanel(t) {
            const e = Ht.getElementFromSelector(t);
            e &&
                (this._setAttributeIfNotExists(e, "role", "tabpanel"),
                t.id &&
                    this._setAttributeIfNotExists(
                        e,
                        "aria-labelledby",
                        `${t.id}`
                    ));
        }
        _toggleDropDown(t, e) {
            const n = this._getOuterElement(t);
            if (!n.classList.contains("dropdown")) return;
            const i = (t, i) => {
                const s = Ht.findOne(t, n);
                s && s.classList.toggle(i, e);
            };
            i(Ri, Di),
                i(".dropdown-menu", $i),
                n.setAttribute("aria-expanded", e);
        }
        _setAttributeIfNotExists(t, e, n) {
            t.hasAttribute(e) || t.setAttribute(e, n);
        }
        _elemIsActive(t) {
            return t.classList.contains(Di);
        }
        _getInnerElement(t) {
            return t.matches(Ii) ? t : Ht.findOne(Ii, t);
        }
        _getOuterElement(t) {
            return t.closest(".nav-item, .list-group-item") || t;
        }
        static jQueryInterface(e) {
            return this.each(function () {
                const n = t.getOrCreateInstance(this);
                if ("string" == typeof e) {
                    if (
                        void 0 === n[e] ||
                        e.startsWith("_") ||
                        "constructor" === e
                    )
                        throw new TypeError(`No method named "${e}"`);
                    n[e]();
                }
            });
        }
    };
    const Wi = ".mdb.tab",
        Bi = "show.bs.tab",
        Hi = "shown.bs.tab",
        Yi = `show${Wi}`,
        Fi = `shown${Wi}`,
        Xi = `hide${Wi}`,
        zi = `hidden${Wi}`,
        Vi = "active",
        Ki = "fade",
        qi = "show";
    const Ui = "tooltip",
        Gi = [
            { name: "show" },
            { name: "shown" },
            { name: "hide" },
            { name: "hidden" },
            { name: "inserted" },
        ];
    (() => {
        var t = {
                454: (t, e, n) => {
                    n.d(e, { Z: () => o });
                    var i = n(645),
                        s = n.n(i)()(function (t) {
                            return t[1];
                        });
                    s.push([
                        t.id,
                        "INPUT:-webkit-autofill,SELECT:-webkit-autofill,TEXTAREA:-webkit-autofill{animation-name:onautofillstart}INPUT:not(:-webkit-autofill),SELECT:not(:-webkit-autofill),TEXTAREA:not(:-webkit-autofill){animation-name:onautofillcancel}@keyframes onautofillstart{}@keyframes onautofillcancel{}",
                        "",
                    ]);
                    const o = s;
                },
                645: (t) => {
                    t.exports = function (t) {
                        var e = [];
                        return (
                            (e.toString = function () {
                                return this.map(function (e) {
                                    var n = t(e);
                                    return e[2]
                                        ? "@media "
                                              .concat(e[2], " {")
                                              .concat(n, "}")
                                        : n;
                                }).join("");
                            }),
                            (e.i = function (t, n, i) {
                                "string" == typeof t && (t = [[null, t, ""]]);
                                var s = {};
                                if (i)
                                    for (var o = 0; o < this.length; o++) {
                                        var r = this[o][0];
                                        null != r && (s[r] = !0);
                                    }
                                for (var a = 0; a < t.length; a++) {
                                    var l = [].concat(t[a]);
                                    (i && s[l[0]]) ||
                                        (n &&
                                            (l[2]
                                                ? (l[2] = ""
                                                      .concat(n, " and ")
                                                      .concat(l[2]))
                                                : (l[2] = n)),
                                        e.push(l));
                                }
                            }),
                            e
                        );
                    };
                },
                810: () => {
                    !(function () {
                        if ("undefined" != typeof window)
                            try {
                                var t = new window.CustomEvent("test", {
                                    cancelable: !0,
                                });
                                if (
                                    (t.preventDefault(),
                                    !0 !== t.defaultPrevented)
                                )
                                    throw new Error(
                                        "Could not prevent default"
                                    );
                            } catch (n) {
                                var e = function (t, e) {
                                    var n, i;
                                    return (
                                        ((e = e || {}).bubbles = !!e.bubbles),
                                        (e.cancelable = !!e.cancelable),
                                        (n =
                                            document.createEvent(
                                                "CustomEvent"
                                            )).initCustomEvent(
                                            t,
                                            e.bubbles,
                                            e.cancelable,
                                            e.detail
                                        ),
                                        (i = n.preventDefault),
                                        (n.preventDefault = function () {
                                            i.call(this);
                                            try {
                                                Object.defineProperty(
                                                    this,
                                                    "defaultPrevented",
                                                    {
                                                        get: function () {
                                                            return !0;
                                                        },
                                                    }
                                                );
                                            } catch (t) {
                                                this.defaultPrevented = !0;
                                            }
                                        }),
                                        n
                                    );
                                };
                                (e.prototype = window.Event.prototype),
                                    (window.CustomEvent = e);
                            }
                    })();
                },
                379: (t, e, n) => {
                    var i,
                        s,
                        o =
                            ((s = {}),
                            function (t) {
                                if (void 0 === s[t]) {
                                    var e = document.querySelector(t);
                                    if (
                                        window.HTMLIFrameElement &&
                                        e instanceof window.HTMLIFrameElement
                                    )
                                        try {
                                            e = e.contentDocument.head;
                                        } catch (n) {
                                            e = null;
                                        }
                                    s[t] = e;
                                }
                                return s[t];
                            }),
                        r = [];
                    function a(t) {
                        for (var e = -1, n = 0; n < r.length; n++)
                            if (r[n].identifier === t) {
                                e = n;
                                break;
                            }
                        return e;
                    }
                    function l(t, e) {
                        for (var n = {}, i = [], s = 0; s < t.length; s++) {
                            var o = t[s],
                                l = e.base ? o[0] + e.base : o[0],
                                c = n[l] || 0,
                                d = "".concat(l, " ").concat(c);
                            n[l] = c + 1;
                            var u = a(d),
                                h = { css: o[1], media: o[2], sourceMap: o[3] };
                            -1 !== u
                                ? (r[u].references++, r[u].updater(h))
                                : r.push({
                                      identifier: d,
                                      updater: m(h, e),
                                      references: 1,
                                  }),
                                i.push(d);
                        }
                        return i;
                    }
                    function c(t) {
                        var e = document.createElement("style"),
                            i = t.attributes || {};
                        if (void 0 === i.nonce) {
                            var s = n.nc;
                            s && (i.nonce = s);
                        }
                        if (
                            (Object.keys(i).forEach(function (t) {
                                e.setAttribute(t, i[t]);
                            }),
                            "function" == typeof t.insert)
                        )
                            t.insert(e);
                        else {
                            var r = o(t.insert || "head");
                            if (!r)
                                throw new Error(
                                    "Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid."
                                );
                            r.appendChild(e);
                        }
                        return e;
                    }
                    var d,
                        u =
                            ((d = []),
                            function (t, e) {
                                return (d[t] = e), d.filter(Boolean).join("\n");
                            });
                    function h(t, e, n, i) {
                        var s = n
                            ? ""
                            : i.media
                            ? "@media ".concat(i.media, " {").concat(i.css, "}")
                            : i.css;
                        if (t.styleSheet) t.styleSheet.cssText = u(e, s);
                        else {
                            var o = document.createTextNode(s),
                                r = t.childNodes;
                            r[e] && t.removeChild(r[e]),
                                r.length
                                    ? t.insertBefore(o, r[e])
                                    : t.appendChild(o);
                        }
                    }
                    function p(t, e, n) {
                        var i = n.css,
                            s = n.media,
                            o = n.sourceMap;
                        if (
                            (s
                                ? t.setAttribute("media", s)
                                : t.removeAttribute("media"),
                            o &&
                                "undefined" != typeof btoa &&
                                (i +=
                                    "\n/*# sourceMappingURL=data:application/json;base64,".concat(
                                        btoa(
                                            unescape(
                                                encodeURIComponent(
                                                    JSON.stringify(o)
                                                )
                                            )
                                        ),
                                        " */"
                                    )),
                            t.styleSheet)
                        )
                            t.styleSheet.cssText = i;
                        else {
                            for (; t.firstChild; ) t.removeChild(t.firstChild);
                            t.appendChild(document.createTextNode(i));
                        }
                    }
                    var f = null,
                        g = 0;
                    function m(t, e) {
                        var n, i, s;
                        if (e.singleton) {
                            var o = g++;
                            (n = f || (f = c(e))),
                                (i = h.bind(null, n, o, !1)),
                                (s = h.bind(null, n, o, !0));
                        } else
                            (n = c(e)),
                                (i = p.bind(null, n, e)),
                                (s = function () {
                                    !(function (t) {
                                        if (null === t.parentNode) return !1;
                                        t.parentNode.removeChild(t);
                                    })(n);
                                });
                        return (
                            i(t),
                            function (e) {
                                if (e) {
                                    if (
                                        e.css === t.css &&
                                        e.media === t.media &&
                                        e.sourceMap === t.sourceMap
                                    )
                                        return;
                                    i((t = e));
                                } else s();
                            }
                        );
                    }
                    t.exports = function (t, e) {
                        (e = e || {}).singleton ||
                            "boolean" == typeof e.singleton ||
                            (e.singleton =
                                (void 0 === i &&
                                    (i = Boolean(
                                        window &&
                                            document &&
                                            document.all &&
                                            !window.atob
                                    )),
                                i));
                        var n = l((t = t || []), e);
                        return function (t) {
                            if (
                                ((t = t || []),
                                "[object Array]" ===
                                    Object.prototype.toString.call(t))
                            ) {
                                for (var i = 0; i < n.length; i++) {
                                    var s = a(n[i]);
                                    r[s].references--;
                                }
                                for (
                                    var o = l(t, e), c = 0;
                                    c < n.length;
                                    c++
                                ) {
                                    var d = a(n[c]);
                                    0 === r[d].references &&
                                        (r[d].updater(), r.splice(d, 1));
                                }
                                n = o;
                            }
                        };
                    };
                },
            },
            e = {};
        function n(i) {
            var s = e[i];
            if (void 0 !== s) return s.exports;
            var o = (e[i] = { id: i, exports: {} });
            return t[i](o, o.exports, n), o.exports;
        }
        (n.n = (t) => {
            var e = t && t.__esModule ? () => t.default : () => t;
            return n.d(e, { a: e }), e;
        }),
            (n.d = (t, e) => {
                for (var i in e)
                    n.o(e, i) &&
                        !n.o(t, i) &&
                        Object.defineProperty(t, i, {
                            enumerable: !0,
                            get: e[i],
                        });
            }),
            (n.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e)),
            (() => {
                var t = n(379),
                    e = n.n(t),
                    i = n(454);
                function s(t) {
                    if (!t.hasAttribute("autocompleted")) {
                        t.setAttribute("autocompleted", "");
                        var e = new window.CustomEvent("onautocomplete", {
                            bubbles: !0,
                            cancelable: !0,
                            detail: null,
                        });
                        t.dispatchEvent(e) || (t.value = "");
                    }
                }
                function o(t) {
                    t.hasAttribute("autocompleted") &&
                        (t.removeAttribute("autocompleted"),
                        t.dispatchEvent(
                            new window.CustomEvent("onautocomplete", {
                                bubbles: !0,
                                cancelable: !1,
                                detail: null,
                            })
                        ));
                }
                e()(i.Z, { insert: "head", singleton: !1 }),
                    i.Z.locals,
                    n(810),
                    document.addEventListener(
                        "animationstart",
                        function (t) {
                            "onautofillstart" === t.animationName
                                ? s(t.target)
                                : o(t.target);
                        },
                        !0
                    ),
                    document.addEventListener(
                        "input",
                        function (t) {
                            "insertReplacementText" !== t.inputType &&
                            "data" in t
                                ? o(t.target)
                                : s(t.target);
                        },
                        !0
                    );
            })();
    })();
    class Zi {
        constructor(t) {
            (t = d(t)) &&
                ((this._element = t),
                s.setData(this._element, this.constructor.DATA_KEY, this));
        }
        dispose() {
            s.removeData(this._element, this.constructor.DATA_KEY),
                D.off(this._element, this.constructor.EVENT_KEY),
                Object.getOwnPropertyNames(this).forEach((t) => {
                    this[t] = null;
                });
        }
        static getInstance(t) {
            return s.getData(d(t), this.DATA_KEY);
        }
        static getOrCreateInstance(t, e = {}) {
            return (
                this.getInstance(t) ||
                new this(t, "object" == typeof e ? e : null)
            );
        }
        static get NAME() {
            throw new Error(
                'You have to implement the static method "NAME", for each component!'
            );
        }
        static get DATA_KEY() {
            return `mdb.${this.NAME}`;
        }
        static get EVENT_KEY() {
            return `.${this.DATA_KEY}`;
        }
    }
    const Qi = "active",
        Ji = "form-notch",
        ts = "form-notch-leading",
        es = "form-notch-middle",
        ns = `.${Ji}`,
        is = `.${ts}`,
        ss = `.${es}`;
    class os extends Zi {
        constructor(t) {
            super(t),
                (this._label = null),
                (this._labelWidth = 0),
                (this._labelMarginLeft = 0),
                (this._notchLeading = null),
                (this._notchMiddle = null),
                (this._notchTrailing = null),
                (this._initiated = !1),
                (this._helper = null),
                (this._counter = !1),
                (this._counterElement = null),
                (this._maxLength = 0),
                (this._leadingIcon = null),
                this._element &&
                    (this.init(),
                    R.setDataAttribute(
                        this._element,
                        `${this.constructor.NAME}-initialized`,
                        !0
                    ),
                    Et(this.constructor));
        }
        static get NAME() {
            return "input";
        }
        get input() {
            return (
                P.findOne("input", this._element) ||
                P.findOne("textarea", this._element)
            );
        }
        init() {
            this._initiated ||
                (this._getLabelData(),
                this._applyDivs(),
                this._applyNotch(),
                this._activate(),
                this._getHelper(),
                this._getCounter(),
                (this._initiated = !0));
        }
        update() {
            this._getLabelData(),
                this._getNotchData(),
                this._applyNotch(),
                this._activate(),
                this._getHelper(),
                this._getCounter();
        }
        forceActive() {
            R.addClass(this.input, Qi);
        }
        forceInactive() {
            R.removeClass(this.input, Qi);
        }
        dispose() {
            this._removeBorder(),
                R.removeDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`
                ),
                super.dispose();
        }
        _getLabelData() {
            (this._label = P.findOne("label", this._element)),
                null === this._label
                    ? this._showPlaceholder()
                    : (this._getLabelWidth(),
                      this._getLabelPositionInInputGroup(),
                      this._toggleDefaultDatePlaceholder());
        }
        _getHelper() {
            this._helper = P.findOne(".form-helper", this._element);
        }
        _getCounter() {
            (this._counter = R.getDataAttribute(this.input, "showcounter")),
                this._counter &&
                    ((this._maxLength = this.input.maxLength),
                    this._showCounter());
        }
        _showCounter() {
            if (P.find(".form-counter", this._element).length > 0) return;
            (this._counterElement = document.createElement("div")),
                R.addClass(this._counterElement, "form-counter");
            const t = this.input.value.length;
            (this._counterElement.innerHTML = `${t} / ${this._maxLength}`),
                this._helper.appendChild(this._counterElement),
                this._bindCounter();
        }
        _bindCounter() {
            D.on(this.input, "input", () => {
                const t = this.input.value.length;
                this._counterElement.innerHTML = `${t} / ${this._maxLength}`;
            });
        }
        _toggleDefaultDatePlaceholder(t = this.input) {
            if (!("date" === t.getAttribute("type"))) return;
            document.activeElement === t || t.value
                ? (t.style.opacity = 1)
                : (t.style.opacity = 0);
        }
        _showPlaceholder() {
            R.addClass(this.input, "placeholder-active");
        }
        _getNotchData() {
            (this._notchMiddle = P.findOne(ss, this._element)),
                (this._notchLeading = P.findOne(is, this._element));
        }
        _getLabelWidth() {
            this._labelWidth = 0.8 * this._label.clientWidth + 8;
        }
        _getLabelPositionInInputGroup() {
            if (
                ((this._labelMarginLeft = 0),
                !this._element.classList.contains("input-group"))
            )
                return;
            const t = this.input,
                e = P.prev(t, ".input-group-text")[0];
            this._labelMarginLeft = void 0 === e ? 0 : e.offsetWidth - 1;
        }
        _applyDivs() {
            const t = P.find(ns, this._element),
                e = b("div");
            R.addClass(e, Ji),
                (this._notchLeading = b("div")),
                R.addClass(this._notchLeading, ts),
                (this._notchMiddle = b("div")),
                R.addClass(this._notchMiddle, es),
                (this._notchTrailing = b("div")),
                R.addClass(this._notchTrailing, "form-notch-trailing"),
                t.length >= 1 ||
                    (e.append(this._notchLeading),
                    e.append(this._notchMiddle),
                    e.append(this._notchTrailing),
                    this._element.append(e));
        }
        _applyNotch() {
            (this._notchMiddle.style.width = `${this._labelWidth}px`),
                (this._notchLeading.style.width = `${
                    this._labelMarginLeft + 9
                }px`),
                null !== this._label &&
                    (this._label.style.marginLeft = `${this._labelMarginLeft}px`);
        }
        _removeBorder() {
            const t = P.findOne(ns, this._element);
            t && t.remove();
        }
        _activate(t) {
            g(() => {
                this._getElements(t);
                const e = t ? t.target : this.input;
                "" !== e.value && R.addClass(e, Qi),
                    this._toggleDefaultDatePlaceholder(e);
            });
        }
        _getElements(t) {
            if (
                (t &&
                    ((this._element = t.target.parentNode),
                    (this._label = P.findOne("label", this._element))),
                t && this._label)
            ) {
                const e = this._labelWidth;
                this._getLabelData(),
                    e !== this._labelWidth &&
                        ((this._notchMiddle = P.findOne(
                            ".form-notch-middle",
                            t.target.parentNode
                        )),
                        (this._notchLeading = P.findOne(
                            is,
                            t.target.parentNode
                        )),
                        this._applyNotch());
            }
        }
        _deactivate(t) {
            const e = t ? t.target : this.input;
            "" === e.value && e.classList.remove(Qi),
                this._toggleDefaultDatePlaceholder(e);
        }
        static activate(t) {
            return function (e) {
                t._activate(e);
            };
        }
        static deactivate(t) {
            return function (e) {
                t._deactivate(e);
            };
        }
        static jQueryInterface(t, e) {
            return this.each(function () {
                let n = s.getData(this, "mdb.input");
                const i = "object" == typeof t && t;
                if (
                    (n || !/dispose/.test(t)) &&
                    (n || (n = new os(this, i)), "string" == typeof t)
                ) {
                    if (void 0 === n[t])
                        throw new TypeError(`No method named "${t}"`);
                    n[t](e);
                }
            });
        }
    }
    const rs = "dropdown",
        as = ".bs.dropdown",
        ls = "ArrowUp",
        cs = "ArrowDown",
        ds = `hide${as}`,
        us = `hidden${as}`,
        hs = `show${as}`,
        ps = `shown${as}`,
        fs = "show",
        gs = "[data-mdb-dropdown-initialized]:not(.disabled):not(:disabled)",
        ms = `${gs}.${fs}`,
        bs = ".dropdown-menu",
        _s = q() ? "top-end" : "top-start",
        vs = q() ? "top-start" : "top-end",
        ys = q() ? "bottom-end" : "bottom-start",
        ws = q() ? "bottom-start" : "bottom-end",
        Cs = q() ? "left-start" : "right-start",
        Es = q() ? "right-start" : "left-start",
        As = {
            autoClose: !0,
            boundary: "clippingParents",
            display: "dynamic",
            offset: [0, 2],
            popperConfig: null,
            reference: "toggle",
        },
        Ss = {
            autoClose: "(boolean|string)",
            boundary: "(string|element)",
            display: "string",
            offset: "(array|string|function)",
            popperConfig: "(null|object|function)",
            reference: "(string|element|object)",
        };
    let ks = class t extends vt {
        constructor(t, e) {
            super(t, e),
                (this._popper = null),
                (this._parent = this._element.parentNode),
                (this._menu =
                    Ht.next(this._element, bs)[0] ||
                    Ht.prev(this._element, bs)[0] ||
                    Ht.findOne(bs, this._parent)),
                (this._inNavbar = this._detectNavbar());
        }
        static get Default() {
            return As;
        }
        static get DefaultType() {
            return Ss;
        }
        static get NAME() {
            return rs;
        }
        toggle() {
            return this._isShown() ? this.hide() : this.show();
        }
        show() {
            if (X(this._element) || this._isShown()) return;
            const t = { relatedTarget: this._element };
            if (!pt.trigger(this._element, hs, t).defaultPrevented) {
                if (
                    (this._createPopper(),
                    "ontouchstart" in document.documentElement &&
                        !this._parent.closest(".navbar-nav"))
                )
                    for (const t of [].concat(...document.body.children))
                        pt.on(t, "mouseover", V);
                this._element.focus(),
                    this._element.setAttribute("aria-expanded", !0),
                    this._menu.classList.add(fs),
                    this._element.classList.add(fs),
                    pt.trigger(this._element, ps, t);
            }
        }
        hide() {
            if (X(this._element) || !this._isShown()) return;
            const t = { relatedTarget: this._element };
            this._completeHide(t);
        }
        dispose() {
            this._popper && this._popper.destroy(), super.dispose();
        }
        update() {
            (this._inNavbar = this._detectNavbar()),
                this._popper && this._popper.update();
        }
        _completeHide(t) {
            if (!pt.trigger(this._element, ds, t).defaultPrevented) {
                if ("ontouchstart" in document.documentElement)
                    for (const t of [].concat(...document.body.children))
                        pt.off(t, "mouseover", V);
                this._popper && this._popper.destroy(),
                    this._menu.classList.remove(fs),
                    this._element.classList.remove(fs),
                    this._element.setAttribute("aria-expanded", "false"),
                    bt.removeDataAttribute(this._menu, "popper"),
                    pt.trigger(this._element, us, t);
            }
        }
        _getConfig(t) {
            if (
                "object" == typeof (t = super._getConfig(t)).reference &&
                !H(t.reference) &&
                "function" != typeof t.reference.getBoundingClientRect
            )
                throw new TypeError(
                    `${rs.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`
                );
            return t;
        }
        _createPopper() {
            if (void 0 === Nn)
                throw new TypeError(
                    "Bootstrap's dropdowns require Popper (https://popper.js.org)"
                );
            let t = this._element;
            "parent" === this._config.reference
                ? (t = this._parent)
                : H(this._config.reference)
                ? (t = Y(this._config.reference))
                : "object" == typeof this._config.reference &&
                  (t = this._config.reference);
            const e = this._getPopperConfig();
            this._popper = Dn(t, this._menu, e);
        }
        _isShown() {
            return this._menu.classList.contains(fs);
        }
        _getPlacement() {
            const t = this._parent;
            if (t.classList.contains("dropend")) return Cs;
            if (t.classList.contains("dropstart")) return Es;
            if (t.classList.contains("dropup-center")) return "top";
            if (t.classList.contains("dropdown-center")) return "bottom";
            const e =
                "end" ===
                getComputedStyle(this._menu)
                    .getPropertyValue("--mdb-position")
                    .trim();
            return t.classList.contains("dropup") ? (e ? vs : _s) : e ? ws : ys;
        }
        _detectNavbar() {
            return null !== this._element.closest(".navbar");
        }
        _getOffset() {
            const { offset: t } = this._config;
            return "string" == typeof t
                ? t.split(",").map((t) => Number.parseInt(t, 10))
                : "function" == typeof t
                ? (e) => t(e, this._element)
                : t;
        }
        _getPopperConfig() {
            const t = {
                placement: this._getPlacement(),
                modifiers: [
                    {
                        name: "preventOverflow",
                        options: { boundary: this._config.boundary },
                    },
                    { name: "offset", options: { offset: this._getOffset() } },
                ],
            };
            return (
                (this._inNavbar || "static" === this._config.display) &&
                    (bt.setDataAttribute(this._menu, "popper", "static"),
                    (t.modifiers = [{ name: "applyStyles", enabled: !1 }])),
                { ...t, ...U(this._config.popperConfig, [t]) }
            );
        }
        _selectMenuItem({ key: t, target: e }) {
            const n = Ht.find(
                ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",
                this._menu
            ).filter((t) => F(t));
            n.length && Z(n, e, t === cs, !n.includes(e)).focus();
        }
        static jQueryInterface(e) {
            return this.each(function () {
                const n = t.getOrCreateInstance(this, e);
                if ("string" == typeof e) {
                    if (void 0 === n[e])
                        throw new TypeError(`No method named "${e}"`);
                    n[e]();
                }
            });
        }
        static clearMenus(e) {
            if (2 === e.button || ("keyup" === e.type && "Tab" !== e.key))
                return;
            const n = Ht.find(ms);
            for (const i of n) {
                const n = t.getInstance(i);
                if (!n || !1 === n._config.autoClose) continue;
                const s = e.composedPath(),
                    o = s.includes(n._menu);
                if (
                    s.includes(n._element) ||
                    ("inside" === n._config.autoClose && !o) ||
                    ("outside" === n._config.autoClose && o)
                )
                    continue;
                if (
                    n._menu.contains(e.target) &&
                    (("keyup" === e.type && "Tab" === e.key) ||
                        /input|select|option|textarea|form/i.test(
                            e.target.tagName
                        ))
                )
                    continue;
                const r = { relatedTarget: n._element };
                "click" === e.type && (r.clickEvent = e), n._completeHide(r);
            }
        }
        static dataApiKeydownHandler(e) {
            const n = /input|textarea/i.test(e.target.tagName),
                i = "Escape" === e.key,
                s = [ls, cs].includes(e.key);
            if (!s && !i) return;
            if (n && !i) return;
            e.preventDefault();
            const o = this.matches(gs)
                    ? this
                    : Ht.prev(this, gs)[0] ||
                      Ht.next(this, gs)[0] ||
                      Ht.findOne(gs, e.delegateTarget.parentNode),
                r = t.getOrCreateInstance(o);
            if (s)
                return e.stopPropagation(), r.show(), void r._selectMenuItem(e);
            r._isShown() && (e.stopPropagation(), r.hide(), o.focus());
        }
    };
    const xs = "dropdown",
        Ts = `.${`mdb.${xs}`}`,
        Os = {
            offset: [0, 2],
            flip: !0,
            boundary: "clippingParents",
            reference: "toggle",
            display: "dynamic",
            popperConfig: null,
            dropdownAnimation: "on",
        },
        Ls = {
            offset: "(array|string|function)",
            flip: "boolean",
            boundary: "(string|element)",
            reference: "(string|element|object)",
            display: "string",
            popperConfig: "(null|object|function)",
            dropdownAnimation: "string",
        },
        Ms = "hide.bs.dropdown",
        Ds = "hidden.bs.dropdown",
        Ns = "show.bs.dropdown",
        $s = "shown.bs.dropdown",
        Rs = `hide${Ts}`,
        Ps = `hidden${Ts}`,
        Is = `show${Ts}`,
        js = `shown${Ts}`,
        Ws = "animation",
        Bs = "fade-in",
        Hs = "fade-out";
    const Ys = "animation",
        Fs = {
            animation: "string",
            animationStart: "string",
            animationShowOnLoad: "boolean",
            onStart: "(null|function)",
            onEnd: "(null|function)",
            onHide: "(null|function)",
            onShow: "(null|function)",
            animationOnScroll: "(string)",
            animationWindowHeight: "number",
            animationOffset: "(number|string)",
            animationDelay: "(number|string)",
            animationDuration: "(number|string)",
            animationReverse: "boolean",
            animationInterval: "(number|string)",
            animationRepeat: "(number|boolean)",
            animationReset: "boolean",
        },
        Xs = {
            animation: "fade",
            animationStart: "onClick",
            animationShowOnLoad: !0,
            onStart: null,
            onEnd: null,
            onHide: null,
            onShow: null,
            animationOnScroll: "once",
            animationWindowHeight: 0,
            animationOffset: 0,
            animationDelay: 0,
            animationDuration: 500,
            animationReverse: !1,
            animationInterval: 0,
            animationRepeat: !1,
            animationReset: !1,
        };
    class zs extends Zi {
        constructor(t, e) {
            super(t),
                (this._animateElement = this._getAnimateElement()),
                (this._isFirstScroll = !0),
                (this._repeatAnimateOnScroll = !0),
                (this._options = this._getConfig(e)),
                R.setDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`,
                    !0
                ),
                Et(this.constructor);
        }
        static get NAME() {
            return Ys;
        }
        init() {
            this._init();
        }
        startAnimation() {
            this._startAnimation();
        }
        stopAnimation() {
            this._clearAnimationClass();
        }
        changeAnimationType(t) {
            this._options.animation = t;
        }
        dispose() {
            D.off(this._element, "mousedown"),
                D.off(this._animateElement, "animationend"),
                D.off(window, "scroll"),
                D.off(this._element, "mouseover"),
                R.removeDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`
                ),
                super.dispose();
        }
        _init() {
            switch (this._options.animationStart) {
                case "onHover":
                    this._bindHoverEvents();
                    break;
                case "onLoad":
                    this._startAnimation();
                    break;
                case "onScroll":
                    this._bindScrollEvents();
                    break;
                case "onClick":
                    this._bindClickEvents();
            }
            this._bindTriggerOnEndCallback(),
                this._options.animationReset &&
                    this._bindResetAnimationAfterFinish();
        }
        _getAnimateElement() {
            const t = R.getDataAttribute(this._element, "animation-target");
            return t ? P.find(t)[0] : this._element;
        }
        _getConfig(t) {
            const e = R.getDataAttributes(this._animateElement);
            return (t = { ...Xs, ...e, ...t }), u(Ys, t, Fs), t;
        }
        _animateOnScroll() {
            const t = R.offset(this._animateElement).top,
                e = this._animateElement.offsetHeight,
                n = window.innerHeight,
                i =
                    t + this._options.animationOffset <= n &&
                    t + this._options.animationOffset + e >= 0,
                s = "visible" === this._animateElement.style.visibility;
            switch (!0) {
                case i && this._isFirstScroll:
                    (this._isFirstScroll = !1), this._startAnimation();
                    break;
                case !i && this._isFirstScroll:
                    (this._isFirstScroll = !1), this._hideAnimateElement();
                    break;
                case i && !s && this._repeatAnimateOnScroll:
                    "repeat" !== this._options.animationOnScroll &&
                        (this._repeatAnimateOnScroll = !1),
                        this._callback(this._options.onShow),
                        this._showAnimateElement(),
                        this._startAnimation();
                    break;
                case !i && s && this._repeatAnimateOnScroll:
                    this._hideAnimateElement(),
                        this._clearAnimationClass(),
                        this._callback(this._options.onHide);
            }
        }
        _addAnimatedClass() {
            R.addClass(this._animateElement, "animation"),
                R.addClass(this._animateElement, this._options.animation);
        }
        _clearAnimationClass() {
            this._animateElement.classList.remove(
                this._options.animation,
                "animation"
            );
        }
        _removeInvisibleClass() {
            R.removeClass(this._animateElement, "invisible");
        }
        _startAnimation() {
            this._callback(this._options.onStart),
                this._removeInvisibleClass(),
                this._addAnimatedClass(),
                this._options.animationRepeat &&
                    !this._options.animationInterval &&
                    this._setAnimationRepeat(),
                this._options.animationReverse && this._setAnimationReverse(),
                this._options.animationDelay && this._setAnimationDelay(),
                this._options.animationDuration && this._setAnimationDuration(),
                this._options.animationInterval && this._setAnimationInterval();
        }
        _setAnimationReverse() {
            R.style(this._animateElement, {
                animationIterationCount:
                    !0 === this._options.animationRepeat ? "infinite" : "2",
                animationDirection: "alternate",
            });
        }
        _setAnimationDuration() {
            R.style(this._animateElement, {
                animationDuration: `${this._options.animationDuration}ms`,
            });
        }
        _setAnimationDelay() {
            R.style(this._animateElement, {
                animationDelay: `${this._options.animationDelay}ms`,
            });
        }
        _setAnimationRepeat() {
            R.style(this._animateElement, {
                animationIterationCount:
                    !0 === this._options.animationRepeat
                        ? "infinite"
                        : this._options.animationRepeat,
            });
        }
        _setAnimationInterval() {
            D.on(this._animateElement, "animationend", () => {
                this._clearAnimationClass(),
                    setTimeout(() => {
                        this._addAnimatedClass();
                    }, this._options.animationInterval);
            });
        }
        _hideAnimateElement() {
            R.style(this._animateElement, { visibility: "hidden" });
        }
        _showAnimateElement() {
            R.style(this._animateElement, { visibility: "visible" });
        }
        _bindResetAnimationAfterFinish() {
            D.on(this._animateElement, "animationend", () => {
                this._clearAnimationClass();
            });
        }
        _bindTriggerOnEndCallback() {
            D.on(this._animateElement, "animationend", () => {
                this._callback(this._options.onEnd);
            });
        }
        _bindScrollEvents() {
            this._options.animationShowOnLoad || this._animateOnScroll(),
                D.on(window, "scroll", () => {
                    this._animateOnScroll();
                });
        }
        _bindClickEvents() {
            D.on(this._element, "mousedown", () => {
                this._startAnimation();
            });
        }
        _bindHoverEvents() {
            D.one(this._element, "mouseover", () => {
                this._startAnimation();
            }),
                D.one(this._animateElement, "animationend", () => {
                    setTimeout(() => {
                        this._bindHoverEvents();
                    }, 100);
                });
        }
        _callback(t) {
            t instanceof Function && t();
        }
        static autoInit(t) {
            t._init();
        }
        static jQueryInterface(t) {
            new zs(this[0], t).init();
        }
    }
    const Vs = "backdrop",
        Ks = "show",
        qs = `mousedown.bs.${Vs}`,
        Us = {
            className: "modal-backdrop",
            clickCallback: null,
            isAnimated: !1,
            isVisible: !0,
            rootElement: "body",
        },
        Gs = {
            className: "string",
            clickCallback: "(function|null)",
            isAnimated: "boolean",
            isVisible: "boolean",
            rootElement: "(element|string)",
        };
    class Zs extends _t {
        constructor(t) {
            super(),
                (this._config = this._getConfig(t)),
                (this._isAppended = !1),
                (this._element = null);
        }
        static get Default() {
            return Us;
        }
        static get DefaultType() {
            return Gs;
        }
        static get NAME() {
            return Vs;
        }
        show(t) {
            if (!this._config.isVisible) return void U(t);
            this._append();
            const e = this._getElement();
            this._config.isAnimated && K(e),
                e.classList.add(Ks),
                this._emulateAnimation(() => {
                    U(t);
                });
        }
        hide(t) {
            this._config.isVisible
                ? (this._getElement().classList.remove(Ks),
                  this._emulateAnimation(() => {
                      this.dispose(), U(t);
                  }))
                : U(t);
        }
        dispose() {
            this._isAppended &&
                (pt.off(this._element, qs),
                this._element.remove(),
                (this._isAppended = !1));
        }
        _getElement() {
            if (!this._element) {
                const t = document.createElement("div");
                (t.className = this._config.className),
                    this._config.isAnimated && t.classList.add("fade"),
                    (this._element = t);
            }
            return this._element;
        }
        _configAfterMerge(t) {
            return (t.rootElement = Y(t.rootElement)), t;
        }
        _append() {
            if (this._isAppended) return;
            const t = this._getElement();
            this._config.rootElement.append(t),
                pt.on(t, qs, () => {
                    U(this._config.clickCallback);
                }),
                (this._isAppended = !0);
        }
        _emulateAnimation(t) {
            G(t, this._getElement(), this._config.isAnimated);
        }
    }
    const Qs = (t, e = "hide") => {
            const n = `click.dismiss${t.EVENT_KEY}`,
                i = t.NAME;
            pt.on(document, n, `[data-mdb-dismiss="${i}"]`, function (n) {
                if (
                    (["A", "AREA"].includes(this.tagName) && n.preventDefault(),
                    X(this))
                )
                    return;
                const s =
                    Ht.getElementFromSelector(this) || this.closest(`.${i}`);
                t.getOrCreateInstance(s)[e]();
            });
        },
        Js = ".bs.focustrap",
        to = `focusin${Js}`,
        eo = `keydown.tab${Js}`,
        no = "backward",
        io = { autofocus: !0, trapElement: null },
        so = { autofocus: "boolean", trapElement: "element" };
    let oo = class extends _t {
        constructor(t) {
            super(),
                (this._config = this._getConfig(t)),
                (this._isActive = !1),
                (this._lastTabNavDirection = null);
        }
        static get Default() {
            return io;
        }
        static get DefaultType() {
            return so;
        }
        static get NAME() {
            return "focustrap";
        }
        activate() {
            this._isActive ||
                (this._config.autofocus && this._config.trapElement.focus(),
                pt.off(document, Js),
                pt.on(document, to, (t) => this._handleFocusin(t)),
                pt.on(document, eo, (t) => this._handleKeydown(t)),
                (this._isActive = !0));
        }
        deactivate() {
            this._isActive && ((this._isActive = !1), pt.off(document, Js));
        }
        _handleFocusin(t) {
            const { trapElement: e } = this._config;
            if (t.target === document || t.target === e || e.contains(t.target))
                return;
            const n = Ht.focusableChildren(e);
            0 === n.length
                ? e.focus()
                : this._lastTabNavDirection === no
                ? n[n.length - 1].focus()
                : n[0].focus();
        }
        _handleKeydown(t) {
            "Tab" === t.key &&
                (this._lastTabNavDirection = t.shiftKey ? no : "forward");
        }
    };
    const ro = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",
        ao = ".sticky-top",
        lo = "padding-right",
        co = "margin-right";
    class uo {
        constructor() {
            this._element = document.body;
        }
        getWidth() {
            const t = document.documentElement.clientWidth;
            return Math.abs(window.innerWidth - t);
        }
        hide() {
            const t = this.getWidth();
            this._disableOverFlow(),
                this._setElementAttributes(this._element, lo, (e) => e + t),
                this._setElementAttributes(ro, lo, (e) => e + t),
                this._setElementAttributes(ao, co, (e) => e - t);
        }
        reset() {
            this._resetElementAttributes(this._element, "overflow"),
                this._resetElementAttributes(this._element, lo),
                this._resetElementAttributes(ro, lo),
                this._resetElementAttributes(ao, co);
        }
        isOverflowing() {
            return this.getWidth() > 0;
        }
        _disableOverFlow() {
            this._saveInitialAttribute(this._element, "overflow"),
                (this._element.style.overflow = "hidden");
        }
        _setElementAttributes(t, e, n) {
            const i = this.getWidth();
            this._applyManipulationCallback(t, (t) => {
                if (
                    t !== this._element &&
                    window.innerWidth > t.clientWidth + i
                )
                    return;
                this._saveInitialAttribute(t, e);
                const s = window.getComputedStyle(t).getPropertyValue(e);
                t.style.setProperty(e, `${n(Number.parseFloat(s))}px`);
            });
        }
        _saveInitialAttribute(t, e) {
            const n = t.style.getPropertyValue(e);
            n && bt.setDataAttribute(t, e, n);
        }
        _resetElementAttributes(t, e) {
            this._applyManipulationCallback(t, (t) => {
                const n = bt.getDataAttribute(t, e);
                null !== n
                    ? (bt.removeDataAttribute(t, e), t.style.setProperty(e, n))
                    : t.style.removeProperty(e);
            });
        }
        _applyManipulationCallback(t, e) {
            if (H(t)) e(t);
            else for (const n of Ht.find(t, this._element)) e(n);
        }
    }
    const ho = ".bs.modal",
        po = `hide${ho}`,
        fo = `hidePrevented${ho}`,
        go = `hidden${ho}`,
        mo = `show${ho}`,
        bo = `shown${ho}`,
        _o = `resize${ho}`,
        vo = `click.dismiss${ho}`,
        yo = `mousedown.dismiss${ho}`,
        wo = `keydown.dismiss${ho}`,
        Co = "modal-open",
        Eo = "show",
        Ao = "modal-static",
        So = { backdrop: !0, focus: !0, keyboard: !0 },
        ko = {
            backdrop: "(boolean|string)",
            focus: "boolean",
            keyboard: "boolean",
        };
    let xo = class t extends vt {
        constructor(t, e) {
            super(t, e),
                (this._dialog = Ht.findOne(".modal-dialog", this._element)),
                (this._backdrop = this._initializeBackDrop()),
                (this._focustrap = this._initializeFocusTrap()),
                (this._isShown = !1),
                (this._isTransitioning = !1),
                (this._scrollBar = new uo()),
                this._addEventListeners();
        }
        static get Default() {
            return So;
        }
        static get DefaultType() {
            return ko;
        }
        static get NAME() {
            return "modal";
        }
        toggle(t) {
            return this._isShown ? this.hide() : this.show(t);
        }
        show(t) {
            if (this._isShown || this._isTransitioning) return;
            pt.trigger(this._element, mo, { relatedTarget: t })
                .defaultPrevented ||
                ((this._isShown = !0),
                (this._isTransitioning = !0),
                this._scrollBar.hide(),
                document.body.classList.add(Co),
                this._adjustDialog(),
                this._backdrop.show(() => this._showElement(t)));
        }
        hide() {
            if (!this._isShown || this._isTransitioning) return;
            pt.trigger(this._element, po).defaultPrevented ||
                ((this._isShown = !1),
                (this._isTransitioning = !0),
                this._focustrap.deactivate(),
                this._element.classList.remove(Eo),
                this._queueCallback(
                    () => this._hideModal(),
                    this._element,
                    this._isAnimated()
                ));
        }
        dispose() {
            pt.off(window, ho),
                pt.off(this._dialog, ho),
                this._backdrop.dispose(),
                this._focustrap.deactivate(),
                super.dispose();
        }
        handleUpdate() {
            this._adjustDialog();
        }
        _initializeBackDrop() {
            return new Zs({
                isVisible:
                    Boolean(this._config.backdrop) &&
                    Boolean(!this._config.modalNonInvasive),
                isAnimated: this._isAnimated(),
            });
        }
        _initializeFocusTrap() {
            return new oo({ trapElement: this._element });
        }
        _showElement(t) {
            document.body.contains(this._element) ||
                document.body.append(this._element),
                (this._element.style.display = "block"),
                this._element.removeAttribute("aria-hidden"),
                this._element.setAttribute("aria-modal", !0),
                this._element.setAttribute("role", "dialog"),
                (this._element.scrollTop = 0);
            const e = Ht.findOne(".modal-body", this._dialog);
            e && (e.scrollTop = 0),
                K(this._element),
                this._element.classList.add(Eo);
            this._queueCallback(
                () => {
                    this._config.focus && this._focustrap.activate(),
                        (this._isTransitioning = !1),
                        pt.trigger(this._element, bo, { relatedTarget: t });
                },
                this._dialog,
                this._isAnimated()
            );
        }
        _addEventListeners() {
            pt.on(this._element, wo, (t) => {
                "Escape" === t.key &&
                    (this._config.keyboard
                        ? this.hide()
                        : this._triggerBackdropTransition());
            }),
                pt.on(window, _o, () => {
                    this._isShown &&
                        !this._isTransitioning &&
                        this._adjustDialog();
                }),
                pt.on(this._element, yo, (t) => {
                    pt.one(this._element, vo, (e) => {
                        this._element === t.target &&
                            this._element === e.target &&
                            ("static" !== this._config.backdrop
                                ? this._config.backdrop && this.hide()
                                : this._triggerBackdropTransition());
                    });
                });
        }
        _hideModal() {
            (this._element.style.display = "none"),
                this._element.setAttribute("aria-hidden", !0),
                this._element.removeAttribute("aria-modal"),
                this._element.removeAttribute("role"),
                (this._isTransitioning = !1),
                this._backdrop.hide(() => {
                    document.body.classList.remove(Co),
                        this._resetAdjustments(),
                        this._scrollBar.reset(),
                        pt.trigger(this._element, go);
                });
        }
        _isAnimated() {
            return this._element.classList.contains("fade");
        }
        _triggerBackdropTransition() {
            if (pt.trigger(this._element, fo).defaultPrevented) return;
            const t =
                    this._element.scrollHeight >
                    document.documentElement.clientHeight,
                e = this._element.style.overflowY;
            "hidden" === e ||
                this._element.classList.contains(Ao) ||
                (t || (this._element.style.overflowY = "hidden"),
                this._element.classList.add(Ao),
                this._queueCallback(() => {
                    this._element.classList.remove(Ao),
                        this._queueCallback(() => {
                            this._element.style.overflowY = e;
                        }, this._dialog);
                }, this._dialog),
                this._element.focus());
        }
        _adjustDialog() {
            const t =
                    this._element.scrollHeight >
                    document.documentElement.clientHeight,
                e = this._scrollBar.getWidth(),
                n = e > 0;
            if (n && !t) {
                const t = q() ? "paddingLeft" : "paddingRight";
                this._element.style[t] = `${e}px`;
            }
            if (!n && t) {
                const t = q() ? "paddingRight" : "paddingLeft";
                this._element.style[t] = `${e}px`;
            }
        }
        _resetAdjustments() {
            (this._element.style.paddingLeft = ""),
                (this._element.style.paddingRight = "");
        }
        static jQueryInterface(e, n) {
            return this.each(function () {
                const i = t.getOrCreateInstance(this, e);
                if ("string" == typeof e) {
                    if (void 0 === i[e])
                        throw new TypeError(`No method named "${e}"`);
                    i[e](n);
                }
            });
        }
    };
    const To = (t, e) => {
            P.find(t).forEach((t) => {
                const n = R.getDataAttribute(t, e);
                void 0 === n
                    ? t.style.removeProperty(e)
                    : (R.removeDataAttribute(t, e), (t.style[e] = n));
            });
        },
        Oo = "modal",
        Lo = "bs.modal",
        Mo = `.${Lo}`,
        Do = "modal-non-invasive-open",
        No = "modal-non-invasive-show",
        $o = ".modal-content",
        Ro = `show${Mo}`,
        Po = `shown${Mo}`,
        Io = `hidden${Mo}`,
        jo = [
            { name: "show", parametersToCopy: ["relatedTarget"] },
            { name: "shown", parametersToCopy: ["relatedTarget"] },
            { name: "hide" },
            { name: "hidePrevented" },
            { name: "hidden" },
        ],
        Wo = {
            backdrop: !0,
            keyboard: !0,
            focus: !0,
            show: !0,
            modalNonInvasive: !1,
        },
        Bo = {
            backdrop: "(boolean|string)",
            keyboard: "boolean",
            focus: "boolean",
            show: "boolean",
            modalNonInvasive: "boolean",
        };
    class Ho extends xo {
        constructor(t, e) {
            super(t, e),
                (this._config = this._getConfig(e)),
                (this._modalContentRect = ""),
                (this._modalContentComputedStyles = ""),
                (this._isNonInvasive = this._config.modalNonInvasive),
                (this._isScrollable = ""),
                (this._isBottomRight = ""),
                (this._isBottomLeft = ""),
                (this._isTopRight = ""),
                (this._isTopLeft = ""),
                (this._isSideTopModal = ""),
                (this._isSideBottomModal = ""),
                (this._isSideModal = ""),
                (this._isModalBottom = ""),
                this._isNonInvasive &&
                    ((this._config.backdrop = !1),
                    (this._config.focus = !1),
                    (this._isBodyOverflowing = !0),
                    this._onModalShow(),
                    this._onModalShown(),
                    this._onModalHidden(),
                    this._listenToWindowResize()),
                s.setData(t, Lo, this),
                this._bindMdbEvents(),
                R.setDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`,
                    !0
                ),
                Et(this.constructor);
        }
        static get NAME() {
            return Oo;
        }
        dispose() {
            D.off(this._element, Ro),
                D.off(this._element, Po),
                D.off(this._element, "hide.bs.modal"),
                D.off(this._element, Io),
                D.off(this._element, "hidePrevented.bs.modal"),
                R.removeDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`
                ),
                super.dispose();
        }
        _onModalShow() {
            D.on(this._element, Ro, () => {
                this._addNonInvasiveClass();
            });
        }
        _onModalShown() {
            D.on(this._element, Po, () => {
                const t = P.findOne($o, this._element);
                (this._isScrollable = P.findOne(
                    ".modal-dialog-scrollable",
                    this._element
                )),
                    (this._isBottomRight = P.findOne(
                        ".modal-bottom-right",
                        this._element
                    )),
                    (this._isBottomLeft = P.findOne(
                        ".modal-bottom-left",
                        this._element
                    )),
                    (this._isTopRight = P.findOne(
                        ".modal-top-right",
                        this._element
                    )),
                    (this._isTopLeft = P.findOne(
                        ".modal-top-left",
                        this._element
                    )),
                    (this._isSideTopModal =
                        this._isTopLeft || this._isTopRight),
                    (this._isSideBottomModal =
                        this._isBottomLeft || this._isBottomRight),
                    (this._isSideModal =
                        this._isSideTopModal || this._isSideBottomModal),
                    (this._isModalBottom = P.findOne(
                        ".modal-bottom",
                        this._element
                    )),
                    (this._modalContentRect = t.getBoundingClientRect()),
                    (this._modalContentComputedStyles =
                        window.getComputedStyle(t)),
                    (this._modalDialogComputedStyles = window.getComputedStyle(
                        P.findOne(".modal-dialog", this._element)
                    )),
                    (this._topOffset = parseInt(
                        this._modalDialogComputedStyles.top,
                        0
                    )),
                    (this._leftOffset = parseInt(
                        this._modalDialogComputedStyles.left,
                        0
                    )),
                    (this._rightOffset = parseInt(
                        this._modalDialogComputedStyles.right,
                        0
                    )),
                    (this._bottomOffset = parseInt(
                        this._modalDialogComputedStyles.bottom,
                        0
                    )),
                    this._addOpenClass(),
                    this._setStyles();
            });
        }
        _listenToWindowResize() {
            D.on(window, "resize", this._handleWindowResize.bind(this));
        }
        _handleWindowResize() {
            const t = P.findOne($o, this._element);
            if (
                (this._resetStyles(),
                (this._modalContentRect = t.getBoundingClientRect()),
                (this._modalContentComputedStyles = window.getComputedStyle(t)),
                this._isSideTopModal || this._isSideBottomModal)
            ) {
                let t = 0,
                    e = 0;
                return (
                    (this._isBottomRight || this._isBottomLeft) &&
                        (e = -this._bottomOffset),
                    (this._isBottomRight || this._isTopRight) &&
                        (t = -this._rightOffset),
                    (this._isBottomLeft || this._isTopLeft) &&
                        (t = this._leftOffset),
                    void this._setStyles(t, e)
                );
            }
            this._setStyles();
        }
        _showBackdrop(t) {
            this._isNonInvasive
                ? "function" == typeof t && t()
                : super._showBackdrop(t);
        }
        _adjustDialog() {
            super._adjustDialog();
            const t = document.body.classList.contains(Do);
            (this._isNonInvasive || t) && (this._isBodyOverflowing = !1),
                this._isNonInvasive &&
                    (this._resetAdjustments(),
                    To("body", "overflow"),
                    To("body", "paddingRight"),
                    To(
                        ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",
                        "paddingRight"
                    ),
                    To(".sticky-top", "marginRight"));
        }
        _onModalHidden() {
            D.on(this._element, Io, (t) => {
                t.stopImmediatePropagation(),
                    this._removeOpenClass(),
                    this._resetStyles(),
                    this._removeNonInvasiveClass();
            });
        }
        _addOpenClass() {
            this._element.classList.add(No);
        }
        _removeOpenClass() {
            this._element.classList.remove(No);
        }
        _addNonInvasiveClass() {
            document.body.classList.add(Do);
        }
        _removeNonInvasiveClass() {
            P.findOne(`.modal.show.${No}`, document.body)
                ? document.body.classList.add("modal-open")
                : document.body.classList.remove(Do);
        }
        _setStyles(t = 0, e = 0) {
            const n = window.innerWidth >= 992;
            (this._element.style.left = `${this._modalContentRect.left + t}px`),
                (this._element.style.width =
                    this._modalContentComputedStyles.width),
                this._isScrollable ||
                    ((this._element.style.height =
                        this._modalContentComputedStyles.height),
                    (this._element.style.display = "")),
                n &&
                    ((this._isSideBottomModal || this._isModalBottom) &&
                        (this._element.style.top = `${
                            this._modalContentRect.top + e
                        }px`),
                    this._isSideModal &&
                        (this._element.style.overflowX = "auto")),
                n || (this._element.style.height = "");
        }
        _resetStyles() {
            (this._element.style.left = ""),
                (this._element.style.top = ""),
                (this._element.style.height = ""),
                (this._element.style.width = ""),
                this._isScrollable || (this._element.style.display = ""),
                this._isSideModal && (this._element.style.overflowX = "");
        }
        _getConfig(t) {
            let e;
            this._element && (e = l(this._element));
            const n = {
                ...Wo,
                ...R.getDataAttributes(this._element),
                ...R.getDataAttributes(e),
                ...t,
            };
            return u(Oo, n, Bo), n;
        }
        _bindMdbEvents() {
            D.extend(this._element, jo, Oo);
        }
        static jQueryInterface(t, e) {
            return this.each(function () {
                let n = s.getData(this, Lo);
                const i = {
                    ...Wo,
                    ...R.getDataAttributes(this),
                    ...("object" == typeof t && t ? t : {}),
                };
                if ((n || (n = new Ho(this, i)), "string" == typeof t)) {
                    if (void 0 === n[t])
                        throw new TypeError(`No method named "${t}"`);
                    n[t](e);
                } else i.show && n.show(e);
            });
        }
    }
    function Yo(t) {
        return getComputedStyle(t);
    }
    function Fo(t, e) {
        for (const n in e) {
            let i = e[n];
            "number" == typeof i && (i = `${i}px`), (t.style[n] = i);
        }
        return t;
    }
    function Xo(t) {
        const e = document.createElement("div");
        return (e.className = t), e;
    }
    const zo =
        "undefined" != typeof Element &&
        (Element.prototype.matches ||
            Element.prototype.webkitMatchesSelector ||
            Element.prototype.mozMatchesSelector ||
            Element.prototype.msMatchesSelector);
    function Vo(t, e) {
        if (!zo) throw new Error("No element matching method supported");
        return zo.call(t, e);
    }
    function Ko(t) {
        t.remove ? t.remove() : t.parentNode && t.parentNode.removeChild(t);
    }
    function qo(t, e) {
        return Array.prototype.filter.call(t.children, (t) => Vo(t, e));
    }
    const Uo = {
            main: "ps",
            rtl: "ps__rtl",
            element: {
                thumb: (t) => `ps__thumb-${t}`,
                rail: (t) => `ps__rail-${t}`,
                consuming: "ps__child--consume",
            },
            state: {
                focus: "ps--focus",
                clicking: "ps--clicking",
                active: (t) => `ps--active-${t}`,
                scrolling: (t) => `ps--scrolling-${t}`,
            },
        },
        Go = { x: null, y: null };
    function Zo(t, e) {
        const n = t.element.classList,
            i = Uo.state.scrolling(e);
        n.contains(i) ? clearTimeout(Go[e]) : n.add(i);
    }
    function Qo(t, e) {
        Go[e] = setTimeout(
            () =>
                t.isAlive && t.element.classList.remove(Uo.state.scrolling(e)),
            t.settings.scrollingThreshold
        );
    }
    let Jo = class {
            constructor(t) {
                (this.element = t), (this.handlers = {});
            }
            bind(t, e) {
                void 0 === this.handlers[t] && (this.handlers[t] = []),
                    this.handlers[t].push(e),
                    this.element.addEventListener(t, e, !1);
            }
            unbind(t, e) {
                this.handlers[t] = this.handlers[t].filter(
                    (n) =>
                        !(!e || n === e) ||
                        (this.element.removeEventListener(t, n, !1), !1)
                );
            }
            unbindAll() {
                for (const t in this.handlers) this.unbind(t);
            }
            get isEmpty() {
                return Object.keys(this.handlers).every(
                    (t) => 0 === this.handlers[t].length
                );
            }
        },
        tr = class {
            constructor() {
                this.eventElements = [];
            }
            eventElement(t) {
                let e = this.eventElements.filter((e) => e.element === t)[0];
                return e || ((e = new Jo(t)), this.eventElements.push(e)), e;
            }
            bind(t, e, n) {
                this.eventElement(t).bind(e, n);
            }
            unbind(t, e, n) {
                const i = this.eventElement(t);
                i.unbind(e, n),
                    i.isEmpty &&
                        this.eventElements.splice(
                            this.eventElements.indexOf(i),
                            1
                        );
            }
            unbindAll() {
                this.eventElements.forEach((t) => t.unbindAll()),
                    (this.eventElements = []);
            }
            once(t, e, n) {
                const i = this.eventElement(t),
                    s = (t) => {
                        i.unbind(e, s), n(t);
                    };
                i.bind(e, s);
            }
        };
    function er(t) {
        if ("function" == typeof window.CustomEvent) return new CustomEvent(t);
        const e = document.createEvent("CustomEvent");
        return e.initCustomEvent(t, !1, !1, void 0), e;
    }
    function nr(t, e, n, i = !0, s = !1) {
        let o;
        if ("top" === e)
            o = [
                "contentHeight",
                "containerHeight",
                "scrollTop",
                "y",
                "up",
                "down",
            ];
        else {
            if ("left" !== e)
                throw new Error("A proper axis should be provided");
            o = [
                "contentWidth",
                "containerWidth",
                "scrollLeft",
                "x",
                "left",
                "right",
            ];
        }
        !(function (t, e, [n, i, s, o, r, a], l = !0, c = !1) {
            const d = t.element;
            (t.reach[o] = null), d[s] < 1 && (t.reach[o] = "start");
            d[s] > t[n] - t[i] - 1 && (t.reach[o] = "end");
            e &&
                (d.dispatchEvent(er(`ps-scroll-${o}`)),
                e < 0
                    ? d.dispatchEvent(er(`ps-scroll-${r}`))
                    : e > 0 && d.dispatchEvent(er(`ps-scroll-${a}`)),
                l &&
                    (function (t, e) {
                        Zo(t, e), Qo(t, e);
                    })(t, o));
            t.reach[o] &&
                (e || c) &&
                d.dispatchEvent(er(`ps-${o}-reach-${t.reach[o]}`));
        })(t, n, o, i, s);
    }
    function ir(t) {
        return parseInt(t, 10) || 0;
    }
    const sr = {
        isWebKit:
            "undefined" != typeof document &&
            "WebkitAppearance" in document.documentElement.style,
        supportsTouch:
            "undefined" != typeof window &&
            ("ontouchstart" in window ||
                ("maxTouchPoints" in window.navigator &&
                    window.navigator.maxTouchPoints > 0) ||
                (window.DocumentTouch &&
                    document instanceof window.DocumentTouch)),
        supportsIePointer:
            "undefined" != typeof navigator && navigator.msMaxTouchPoints,
        isChrome:
            "undefined" != typeof navigator &&
            /Chrome/i.test(navigator && navigator.userAgent),
    };
    function or(t) {
        const e = t.element,
            n = Math.floor(e.scrollTop),
            i = e.getBoundingClientRect();
        (t.containerWidth = Math.floor(i.width)),
            (t.containerHeight = Math.floor(i.height)),
            (t.contentWidth = e.scrollWidth),
            (t.contentHeight = e.scrollHeight),
            e.contains(t.scrollbarXRail) ||
                (qo(e, Uo.element.rail("x")).forEach((t) => Ko(t)),
                e.appendChild(t.scrollbarXRail)),
            e.contains(t.scrollbarYRail) ||
                (qo(e, Uo.element.rail("y")).forEach((t) => Ko(t)),
                e.appendChild(t.scrollbarYRail)),
            !t.settings.suppressScrollX &&
            t.containerWidth + t.settings.scrollXMarginOffset < t.contentWidth
                ? ((t.scrollbarXActive = !0),
                  (t.railXWidth = t.containerWidth - t.railXMarginWidth),
                  (t.railXRatio = t.containerWidth / t.railXWidth),
                  (t.scrollbarXWidth = rr(
                      t,
                      ir((t.railXWidth * t.containerWidth) / t.contentWidth)
                  )),
                  (t.scrollbarXLeft = ir(
                      ((t.negativeScrollAdjustment + e.scrollLeft) *
                          (t.railXWidth - t.scrollbarXWidth)) /
                          (t.contentWidth - t.containerWidth)
                  )))
                : (t.scrollbarXActive = !1),
            !t.settings.suppressScrollY &&
            t.containerHeight + t.settings.scrollYMarginOffset < t.contentHeight
                ? ((t.scrollbarYActive = !0),
                  (t.railYHeight = t.containerHeight - t.railYMarginHeight),
                  (t.railYRatio = t.containerHeight / t.railYHeight),
                  (t.scrollbarYHeight = rr(
                      t,
                      ir((t.railYHeight * t.containerHeight) / t.contentHeight)
                  )),
                  (t.scrollbarYTop = ir(
                      (n * (t.railYHeight - t.scrollbarYHeight)) /
                          (t.contentHeight - t.containerHeight)
                  )))
                : (t.scrollbarYActive = !1),
            t.scrollbarXLeft >= t.railXWidth - t.scrollbarXWidth &&
                (t.scrollbarXLeft = t.railXWidth - t.scrollbarXWidth),
            t.scrollbarYTop >= t.railYHeight - t.scrollbarYHeight &&
                (t.scrollbarYTop = t.railYHeight - t.scrollbarYHeight),
            (function (t, e) {
                const n = { width: e.railXWidth },
                    i = Math.floor(t.scrollTop);
                e.isRtl
                    ? (n.left =
                          e.negativeScrollAdjustment +
                          t.scrollLeft +
                          e.containerWidth -
                          e.contentWidth)
                    : (n.left = t.scrollLeft);
                e.isScrollbarXUsingBottom
                    ? (n.bottom = e.scrollbarXBottom - i)
                    : (n.top = e.scrollbarXTop + i);
                Fo(e.scrollbarXRail, n);
                const s = { top: i, height: e.railYHeight };
                e.isScrollbarYUsingRight
                    ? e.isRtl
                        ? (s.right =
                              e.contentWidth -
                              (e.negativeScrollAdjustment + t.scrollLeft) -
                              e.scrollbarYRight -
                              e.scrollbarYOuterWidth -
                              9)
                        : (s.right = e.scrollbarYRight - t.scrollLeft)
                    : e.isRtl
                    ? (s.left =
                          e.negativeScrollAdjustment +
                          t.scrollLeft +
                          2 * e.containerWidth -
                          e.contentWidth -
                          e.scrollbarYLeft -
                          e.scrollbarYOuterWidth)
                    : (s.left = e.scrollbarYLeft + t.scrollLeft);
                Fo(e.scrollbarYRail, s),
                    Fo(e.scrollbarX, {
                        left: e.scrollbarXLeft,
                        width: e.scrollbarXWidth - e.railBorderXWidth,
                    }),
                    Fo(e.scrollbarY, {
                        top: e.scrollbarYTop,
                        height: e.scrollbarYHeight - e.railBorderYWidth,
                    });
            })(e, t),
            t.scrollbarXActive
                ? e.classList.add(Uo.state.active("x"))
                : (e.classList.remove(Uo.state.active("x")),
                  (t.scrollbarXWidth = 0),
                  (t.scrollbarXLeft = 0),
                  (e.scrollLeft = !0 === t.isRtl ? t.contentWidth : 0)),
            t.scrollbarYActive
                ? e.classList.add(Uo.state.active("y"))
                : (e.classList.remove(Uo.state.active("y")),
                  (t.scrollbarYHeight = 0),
                  (t.scrollbarYTop = 0),
                  (e.scrollTop = 0));
    }
    function rr(t, e) {
        return (
            t.settings.minScrollbarLength &&
                (e = Math.max(e, t.settings.minScrollbarLength)),
            t.settings.maxScrollbarLength &&
                (e = Math.min(e, t.settings.maxScrollbarLength)),
            e
        );
    }
    function ar(t, [e, n, i, s, o, r, a, l, c]) {
        const d = t.element;
        let u = null,
            h = null,
            p = null;
        function f(e) {
            e.touches && e.touches[0] && (e[i] = e.touches[0].pageY),
                (d[a] = u + p * (e[i] - h)),
                Zo(t, l),
                or(t),
                e.stopPropagation(),
                e.preventDefault();
        }
        function g() {
            Qo(t, l),
                t[c].classList.remove(Uo.state.clicking),
                t.event.unbind(t.ownerDocument, "mousemove", f);
        }
        function m(o, l) {
            (u = d[a]),
                l && o.touches && (o[i] = o.touches[0].pageY),
                (h = o[i]),
                (p = (t[n] - t[e]) / (t[s] - t[r])),
                l
                    ? t.event.bind(t.ownerDocument, "touchmove", f)
                    : (t.event.bind(t.ownerDocument, "mousemove", f),
                      t.event.once(t.ownerDocument, "mouseup", g),
                      o.preventDefault()),
                t[c].classList.add(Uo.state.clicking),
                o.stopPropagation();
        }
        t.event.bind(t[o], "mousedown", (t) => {
            m(t);
        }),
            t.event.bind(t[o], "touchstart", (t) => {
                m(t, !0);
            });
    }
    const lr = {
        "click-rail": function (t) {
            t.event.bind(t.scrollbarY, "mousedown", (t) => t.stopPropagation()),
                t.event.bind(t.scrollbarYRail, "mousedown", (e) => {
                    const n =
                        e.pageY -
                            window.pageYOffset -
                            t.scrollbarYRail.getBoundingClientRect().top >
                        t.scrollbarYTop
                            ? 1
                            : -1;
                    (t.element.scrollTop += n * t.containerHeight),
                        or(t),
                        e.stopPropagation();
                }),
                t.event.bind(t.scrollbarX, "mousedown", (t) =>
                    t.stopPropagation()
                ),
                t.event.bind(t.scrollbarXRail, "mousedown", (e) => {
                    const n =
                        e.pageX -
                            window.pageXOffset -
                            t.scrollbarXRail.getBoundingClientRect().left >
                        t.scrollbarXLeft
                            ? 1
                            : -1;
                    (t.element.scrollLeft += n * t.containerWidth),
                        or(t),
                        e.stopPropagation();
                });
        },
        "drag-thumb": function (t) {
            ar(t, [
                "containerWidth",
                "contentWidth",
                "pageX",
                "railXWidth",
                "scrollbarX",
                "scrollbarXWidth",
                "scrollLeft",
                "x",
                "scrollbarXRail",
            ]),
                ar(t, [
                    "containerHeight",
                    "contentHeight",
                    "pageY",
                    "railYHeight",
                    "scrollbarY",
                    "scrollbarYHeight",
                    "scrollTop",
                    "y",
                    "scrollbarYRail",
                ]);
        },
        keyboard: function (t) {
            const e = t.element;
            t.event.bind(t.ownerDocument, "keydown", (n) => {
                if (
                    (n.isDefaultPrevented && n.isDefaultPrevented()) ||
                    n.defaultPrevented
                )
                    return;
                if (
                    !Vo(e, ":hover") &&
                    !Vo(t.scrollbarX, ":focus") &&
                    !Vo(t.scrollbarY, ":focus")
                )
                    return;
                let i = document.activeElement
                    ? document.activeElement
                    : t.ownerDocument.activeElement;
                if (i) {
                    if ("IFRAME" === i.tagName)
                        i = i.contentDocument.activeElement;
                    else for (; i.shadowRoot; ) i = i.shadowRoot.activeElement;
                    if (
                        Vo((s = i), "input,[contenteditable]") ||
                        Vo(s, "select,[contenteditable]") ||
                        Vo(s, "textarea,[contenteditable]") ||
                        Vo(s, "button,[contenteditable]")
                    )
                        return;
                }
                var s;
                let o = 0,
                    r = 0;
                switch (n.which) {
                    case 37:
                        o = n.metaKey
                            ? -t.contentWidth
                            : n.altKey
                            ? -t.containerWidth
                            : -30;
                        break;
                    case 38:
                        r = n.metaKey
                            ? t.contentHeight
                            : n.altKey
                            ? t.containerHeight
                            : 30;
                        break;
                    case 39:
                        o = n.metaKey
                            ? t.contentWidth
                            : n.altKey
                            ? t.containerWidth
                            : 30;
                        break;
                    case 40:
                        r = n.metaKey
                            ? -t.contentHeight
                            : n.altKey
                            ? -t.containerHeight
                            : -30;
                        break;
                    case 32:
                        r = n.shiftKey ? t.containerHeight : -t.containerHeight;
                        break;
                    case 33:
                        r = t.containerHeight;
                        break;
                    case 34:
                        r = -t.containerHeight;
                        break;
                    case 36:
                        r = t.contentHeight;
                        break;
                    case 35:
                        r = -t.contentHeight;
                        break;
                    default:
                        return;
                }
                (t.settings.suppressScrollX && 0 !== o) ||
                    (t.settings.suppressScrollY && 0 !== r) ||
                    ((e.scrollTop -= r),
                    (e.scrollLeft += o),
                    or(t),
                    (function (n, i) {
                        const s = Math.floor(e.scrollTop);
                        if (0 === n) {
                            if (!t.scrollbarYActive) return !1;
                            if (
                                (0 === s && i > 0) ||
                                (s >= t.contentHeight - t.containerHeight &&
                                    i < 0)
                            )
                                return !t.settings.wheelPropagation;
                        }
                        const o = e.scrollLeft;
                        if (0 === i) {
                            if (!t.scrollbarXActive) return !1;
                            if (
                                (0 === o && n < 0) ||
                                (o >= t.contentWidth - t.containerWidth &&
                                    n > 0)
                            )
                                return !t.settings.wheelPropagation;
                        }
                        return !0;
                    })(o, r) && n.preventDefault());
            });
        },
        wheel: function (t) {
            const e = t.element;
            function n(n) {
                const [i, s] = (function (t) {
                    let e = t.deltaX,
                        n = -1 * t.deltaY;
                    return (
                        (void 0 !== e && void 0 !== n) ||
                            ((e = (-1 * t.wheelDeltaX) / 6),
                            (n = t.wheelDeltaY / 6)),
                        t.deltaMode &&
                            1 === t.deltaMode &&
                            ((e *= 10), (n *= 10)),
                        e != e && n != n && ((e = 0), (n = t.wheelDelta)),
                        t.shiftKey ? [-n, -e] : [e, n]
                    );
                })(n);
                if (
                    (function (t, n, i) {
                        if (!sr.isWebKit && e.querySelector("select:focus"))
                            return !0;
                        if (!e.contains(t)) return !1;
                        let s = t;
                        for (; s && s !== e; ) {
                            if (s.classList.contains(Uo.element.consuming))
                                return !0;
                            const t = Yo(s);
                            if (i && t.overflowY.match(/(scroll|auto)/)) {
                                const t = s.scrollHeight - s.clientHeight;
                                if (
                                    t > 0 &&
                                    ((s.scrollTop > 0 && i < 0) ||
                                        (s.scrollTop < t && i > 0))
                                )
                                    return !0;
                            }
                            if (n && t.overflowX.match(/(scroll|auto)/)) {
                                const t = s.scrollWidth - s.clientWidth;
                                if (
                                    t > 0 &&
                                    ((s.scrollLeft > 0 && n < 0) ||
                                        (s.scrollLeft < t && n > 0))
                                )
                                    return !0;
                            }
                            s = s.parentNode;
                        }
                        return !1;
                    })(n.target, i, s)
                )
                    return;
                let o = !1;
                t.settings.useBothWheelAxes
                    ? t.scrollbarYActive && !t.scrollbarXActive
                        ? (s
                              ? (e.scrollTop -= s * t.settings.wheelSpeed)
                              : (e.scrollTop += i * t.settings.wheelSpeed),
                          (o = !0))
                        : t.scrollbarXActive &&
                          !t.scrollbarYActive &&
                          (i
                              ? (e.scrollLeft += i * t.settings.wheelSpeed)
                              : (e.scrollLeft -= s * t.settings.wheelSpeed),
                          (o = !0))
                    : ((e.scrollTop -= s * t.settings.wheelSpeed),
                      (e.scrollLeft += i * t.settings.wheelSpeed)),
                    or(t),
                    (o =
                        o ||
                        (function (n, i) {
                            const s = Math.floor(e.scrollTop),
                                o = 0 === e.scrollTop,
                                r = s + e.offsetHeight === e.scrollHeight,
                                a = 0 === e.scrollLeft,
                                l =
                                    e.scrollLeft + e.offsetWidth ===
                                    e.scrollWidth;
                            let c;
                            return (
                                (c =
                                    Math.abs(i) > Math.abs(n)
                                        ? o || r
                                        : a || l),
                                !c || !t.settings.wheelPropagation
                            );
                        })(i, s)),
                    o &&
                        !n.ctrlKey &&
                        (n.stopPropagation(), n.preventDefault());
            }
            void 0 !== window.onwheel
                ? t.event.bind(e, "wheel", n)
                : void 0 !== window.onmousewheel &&
                  t.event.bind(e, "mousewheel", n);
        },
        touch: function (t) {
            if (!sr.supportsTouch && !sr.supportsIePointer) return;
            const e = t.element;
            function n(n, i) {
                (e.scrollTop -= i), (e.scrollLeft -= n), or(t);
            }
            let i = {},
                s = 0,
                o = {},
                r = null;
            function a(t) {
                return t.targetTouches ? t.targetTouches[0] : t;
            }
            function l(t) {
                return (
                    (!t.pointerType ||
                        "pen" !== t.pointerType ||
                        0 !== t.buttons) &&
                    (!(!t.targetTouches || 1 !== t.targetTouches.length) ||
                        !(
                            !t.pointerType ||
                            "mouse" === t.pointerType ||
                            t.pointerType === t.MSPOINTER_TYPE_MOUSE
                        ))
                );
            }
            function c(t) {
                if (!l(t)) return;
                const e = a(t);
                (i.pageX = e.pageX),
                    (i.pageY = e.pageY),
                    (s = new Date().getTime()),
                    null !== r && clearInterval(r);
            }
            function d(r) {
                if (l(r)) {
                    const l = a(r),
                        c = { pageX: l.pageX, pageY: l.pageY },
                        d = c.pageX - i.pageX,
                        u = c.pageY - i.pageY;
                    if (
                        (function (t, n, i) {
                            if (!e.contains(t)) return !1;
                            let s = t;
                            for (; s && s !== e; ) {
                                if (s.classList.contains(Uo.element.consuming))
                                    return !0;
                                const t = Yo(s);
                                if (i && t.overflowY.match(/(scroll|auto)/)) {
                                    const t = s.scrollHeight - s.clientHeight;
                                    if (
                                        t > 0 &&
                                        ((s.scrollTop > 0 && i < 0) ||
                                            (s.scrollTop < t && i > 0))
                                    )
                                        return !0;
                                }
                                if (n && t.overflowX.match(/(scroll|auto)/)) {
                                    const t = s.scrollWidth - s.clientWidth;
                                    if (
                                        t > 0 &&
                                        ((s.scrollLeft > 0 && n < 0) ||
                                            (s.scrollLeft < t && n > 0))
                                    )
                                        return !0;
                                }
                                s = s.parentNode;
                            }
                            return !1;
                        })(r.target, d, u)
                    )
                        return;
                    n(d, u), (i = c);
                    const h = new Date().getTime(),
                        p = h - s;
                    p > 0 && ((o.x = d / p), (o.y = u / p), (s = h)),
                        (function (n, i) {
                            const s = Math.floor(e.scrollTop),
                                o = e.scrollLeft,
                                r = Math.abs(n),
                                a = Math.abs(i);
                            if (a > r) {
                                if (
                                    (i < 0 &&
                                        s ===
                                            t.contentHeight -
                                                t.containerHeight) ||
                                    (i > 0 && 0 === s)
                                )
                                    return (
                                        0 === window.scrollY &&
                                        i > 0 &&
                                        sr.isChrome
                                    );
                            } else if (
                                r > a &&
                                ((n < 0 &&
                                    o === t.contentWidth - t.containerWidth) ||
                                    (n > 0 && 0 === o))
                            )
                                return !0;
                            return !0;
                        })(d, u) && r.preventDefault();
                }
            }
            function u() {
                t.settings.swipeEasing &&
                    (clearInterval(r),
                    (r = setInterval(function () {
                        t.isInitialized
                            ? clearInterval(r)
                            : o.x || o.y
                            ? Math.abs(o.x) < 0.01 && Math.abs(o.y) < 0.01
                                ? clearInterval(r)
                                : (n(30 * o.x, 30 * o.y),
                                  (o.x *= 0.8),
                                  (o.y *= 0.8))
                            : clearInterval(r);
                    }, 10)));
            }
            sr.supportsTouch
                ? (t.event.bind(e, "touchstart", c),
                  t.event.bind(e, "touchmove", d),
                  t.event.bind(e, "touchend", u))
                : sr.supportsIePointer &&
                  (window.PointerEvent
                      ? (t.event.bind(e, "pointerdown", c),
                        t.event.bind(e, "pointermove", d),
                        t.event.bind(e, "pointerup", u))
                      : window.MSPointerEvent &&
                        (t.event.bind(e, "MSPointerDown", c),
                        t.event.bind(e, "MSPointerMove", d),
                        t.event.bind(e, "MSPointerUp", u)));
        },
    };
    let cr = class {
        constructor(t, e = {}) {
            if (
                ("string" == typeof t && (t = document.querySelector(t)),
                !t || !t.nodeName)
            )
                throw new Error(
                    "no element is specified to initialize PerfectScrollbar"
                );
            (this.element = t),
                t.classList.add(Uo.main),
                (this.settings = {
                    handlers: [
                        "click-rail",
                        "drag-thumb",
                        "keyboard",
                        "wheel",
                        "touch",
                    ],
                    maxScrollbarLength: null,
                    minScrollbarLength: null,
                    scrollingThreshold: 1e3,
                    scrollXMarginOffset: 0,
                    scrollYMarginOffset: 0,
                    suppressScrollX: !1,
                    suppressScrollY: !1,
                    swipeEasing: !0,
                    useBothWheelAxes: !1,
                    wheelPropagation: !0,
                    wheelSpeed: 1,
                });
            for (const r in e) this.settings[r] = e[r];
            (this.containerWidth = null),
                (this.containerHeight = null),
                (this.contentWidth = null),
                (this.contentHeight = null);
            const n = () => t.classList.add(Uo.state.focus),
                i = () => t.classList.remove(Uo.state.focus);
            (this.isRtl = "rtl" === Yo(t).direction),
                !0 === this.isRtl && t.classList.add(Uo.rtl),
                (this.isNegativeScroll = (() => {
                    const e = t.scrollLeft;
                    let n = null;
                    return (
                        (t.scrollLeft = -1),
                        (n = t.scrollLeft < 0),
                        (t.scrollLeft = e),
                        n
                    );
                })()),
                (this.negativeScrollAdjustment = this.isNegativeScroll
                    ? t.scrollWidth - t.clientWidth
                    : 0),
                (this.event = new tr()),
                (this.ownerDocument = t.ownerDocument || document),
                (this.scrollbarXRail = Xo(Uo.element.rail("x"))),
                t.appendChild(this.scrollbarXRail),
                (this.scrollbarX = Xo(Uo.element.thumb("x"))),
                this.scrollbarXRail.appendChild(this.scrollbarX),
                this.scrollbarX.setAttribute("tabindex", 0),
                this.event.bind(this.scrollbarX, "focus", n),
                this.event.bind(this.scrollbarX, "blur", i),
                (this.scrollbarXActive = null),
                (this.scrollbarXWidth = null),
                (this.scrollbarXLeft = null);
            const s = Yo(this.scrollbarXRail);
            (this.scrollbarXBottom = parseInt(s.bottom, 10)),
                isNaN(this.scrollbarXBottom)
                    ? ((this.isScrollbarXUsingBottom = !1),
                      (this.scrollbarXTop = ir(s.top)))
                    : (this.isScrollbarXUsingBottom = !0),
                (this.railBorderXWidth =
                    ir(s.borderLeftWidth) + ir(s.borderRightWidth)),
                Fo(this.scrollbarXRail, { display: "block" }),
                (this.railXMarginWidth = ir(s.marginLeft) + ir(s.marginRight)),
                Fo(this.scrollbarXRail, { display: "" }),
                (this.railXWidth = null),
                (this.railXRatio = null),
                (this.scrollbarYRail = Xo(Uo.element.rail("y"))),
                t.appendChild(this.scrollbarYRail),
                (this.scrollbarY = Xo(Uo.element.thumb("y"))),
                this.scrollbarYRail.appendChild(this.scrollbarY),
                this.scrollbarY.setAttribute("tabindex", 0),
                this.event.bind(this.scrollbarY, "focus", n),
                this.event.bind(this.scrollbarY, "blur", i),
                (this.scrollbarYActive = null),
                (this.scrollbarYHeight = null),
                (this.scrollbarYTop = null);
            const o = Yo(this.scrollbarYRail);
            (this.scrollbarYRight = parseInt(o.right, 10)),
                isNaN(this.scrollbarYRight)
                    ? ((this.isScrollbarYUsingRight = !1),
                      (this.scrollbarYLeft = ir(o.left)))
                    : (this.isScrollbarYUsingRight = !0),
                (this.scrollbarYOuterWidth = this.isRtl
                    ? (function (t) {
                          const e = Yo(t);
                          return (
                              ir(e.width) +
                              ir(e.paddingLeft) +
                              ir(e.paddingRight) +
                              ir(e.borderLeftWidth) +
                              ir(e.borderRightWidth)
                          );
                      })(this.scrollbarY)
                    : null),
                (this.railBorderYWidth =
                    ir(o.borderTopWidth) + ir(o.borderBottomWidth)),
                Fo(this.scrollbarYRail, { display: "block" }),
                (this.railYMarginHeight = ir(o.marginTop) + ir(o.marginBottom)),
                Fo(this.scrollbarYRail, { display: "" }),
                (this.railYHeight = null),
                (this.railYRatio = null),
                (this.reach = {
                    x:
                        t.scrollLeft <= 0
                            ? "start"
                            : t.scrollLeft >=
                              this.contentWidth - this.containerWidth
                            ? "end"
                            : null,
                    y:
                        t.scrollTop <= 0
                            ? "start"
                            : t.scrollTop >=
                              this.contentHeight - this.containerHeight
                            ? "end"
                            : null,
                }),
                (this.isAlive = !0),
                this.settings.handlers.forEach((t) => lr[t](this)),
                (this.lastScrollTop = Math.floor(t.scrollTop)),
                (this.lastScrollLeft = t.scrollLeft),
                this.event.bind(this.element, "scroll", (t) =>
                    this.onScroll(t)
                ),
                or(this);
        }
        update() {
            this.isAlive &&
                ((this.negativeScrollAdjustment = this.isNegativeScroll
                    ? this.element.scrollWidth - this.element.clientWidth
                    : 0),
                Fo(this.scrollbarXRail, { display: "block" }),
                Fo(this.scrollbarYRail, { display: "block" }),
                (this.railXMarginWidth =
                    ir(Yo(this.scrollbarXRail).marginLeft) +
                    ir(Yo(this.scrollbarXRail).marginRight)),
                (this.railYMarginHeight =
                    ir(Yo(this.scrollbarYRail).marginTop) +
                    ir(Yo(this.scrollbarYRail).marginBottom)),
                Fo(this.scrollbarXRail, { display: "none" }),
                Fo(this.scrollbarYRail, { display: "none" }),
                or(this),
                nr(this, "top", 0, !1, !0),
                nr(this, "left", 0, !1, !0),
                Fo(this.scrollbarXRail, { display: "" }),
                Fo(this.scrollbarYRail, { display: "" }));
        }
        onScroll(t) {
            this.isAlive &&
                (or(this),
                nr(this, "top", this.element.scrollTop - this.lastScrollTop),
                nr(this, "left", this.element.scrollLeft - this.lastScrollLeft),
                (this.lastScrollTop = Math.floor(this.element.scrollTop)),
                (this.lastScrollLeft = this.element.scrollLeft));
        }
        destroy() {
            this.isAlive &&
                (this.event.unbindAll(),
                Ko(this.scrollbarX),
                Ko(this.scrollbarY),
                Ko(this.scrollbarXRail),
                Ko(this.scrollbarYRail),
                this.removePsClasses(),
                (this.element = null),
                (this.scrollbarX = null),
                (this.scrollbarY = null),
                (this.scrollbarXRail = null),
                (this.scrollbarYRail = null),
                (this.isAlive = !1));
        }
        removePsClasses() {
            this.element.className = this.element.className
                .split(" ")
                .filter((t) => !t.match(/^ps([-_].+|)$/))
                .join(" ");
        }
    };
    class dr {
        constructor(t, e = {}, n) {
            (this._element = t),
                (this._toggler = n),
                (this._event = e.event || "blur"),
                (this._condition = e.condition || (() => !0)),
                (this._selector =
                    e.selector ||
                    'button, a, input, select, textarea, [tabindex]:not([tabindex="-1"])'),
                (this._onlyVisible = e.onlyVisible || !1),
                (this._focusableElements = []),
                (this._firstElement = null),
                (this._lastElement = null),
                (this.handler = (t) => {
                    this._condition(t) &&
                        t.target === this._lastElement &&
                        (t.preventDefault(), this._firstElement.focus());
                });
        }
        trap() {
            this._setElements(), this._init(), this._setFocusTrap();
        }
        disable() {
            this._focusableElements.forEach((t) => {
                t.removeEventListener(this._event, this.handler);
            }),
                this._toggler && this._toggler.focus();
        }
        update() {
            this._setElements(), this._setFocusTrap();
        }
        _init() {
            const t = (e) => {
                this._firstElement &&
                    "Tab" === e.key &&
                    !this._focusableElements.includes(e.target) &&
                    (e.preventDefault(),
                    this._firstElement.focus(),
                    window.removeEventListener("keydown", t));
            };
            window.addEventListener("keydown", t);
        }
        _filterVisible(t) {
            return t.filter((t) => {
                if (!h(t)) return !1;
                const e = P.parents(t, "*");
                for (let n = 0; n < e.length; n++) {
                    const t = window.getComputedStyle(e[n]);
                    if (
                        t &&
                        ("none" === t.display || "hidden" === t.visibility)
                    )
                        return !1;
                }
                return !0;
            });
        }
        _setElements() {
            const t = P.find(this._selector, this._element);
            (this._focusableElements = t.filter((t) => {
                const e =
                    "true" === t.getAttribute("data-mdb-disabled") ||
                    t.hasAttribute("disabled");
                return t.disabled || e ? null : t;
            })),
                this._onlyVisible &&
                    (this._focusableElements = this._filterVisible(
                        this._focusableElements
                    )),
                (this._firstElement = this._focusableElements[0]),
                (this._lastElement =
                    this._focusableElements[
                        this._focusableElements.length - 1
                    ]);
        }
        _setFocusTrap() {
            this._focusableElements.forEach((t, e) => {
                e === this._focusableElements.length - 1
                    ? t.addEventListener(this._event, this.handler)
                    : t.removeEventListener(this._event, this.handler);
            });
        }
    }
    const ur = 40,
        hr = { threshold: 10, direction: "all" };
    class pr {
        constructor(t, e) {
            (this._element = t),
                (this._startPosition = null),
                (this._options = { ...hr, ...e });
        }
        handleTouchStart(t) {
            this._startPosition = this._getCoordinates(t);
        }
        handleTouchMove(t) {
            if (!this._startPosition) return;
            const e = this._getCoordinates(t),
                n = {
                    x: e.x - this._startPosition.x,
                    y: e.y - this._startPosition.y,
                },
                i = this._getDirection(n);
            if ("all" === this._options.direction) {
                if (
                    i.y.value < this._options.threshold &&
                    i.x.value < this._options.threshold
                )
                    return;
                const t = i.y.value > i.x.value ? i.y.direction : i.x.direction;
                return (
                    D.trigger(this._element, `swipe${t}`),
                    D.trigger(this._element, "swipe", { direction: t }),
                    void (this._startPosition = null)
                );
            }
            const s =
                "left" === this._options.direction || "right" === this._options
                    ? "x"
                    : "y";
            i[s].direction === this._options.direction &&
                i[s].value > this._options.threshold &&
                (D.trigger(this._element, `swipe${i[s].direction}`),
                (this._startPosition = null));
        }
        handleTouchEnd() {
            this._startPosition = null;
        }
        _getCoordinates(t) {
            const [e] = t.touches;
            return { x: e.clientX, y: e.clientY };
        }
        _getDirection(t) {
            return {
                x: {
                    direction: t.x < 0 ? "left" : "right",
                    value: Math.abs(t.x),
                },
                y: { direction: t.y < 0 ? "up" : "down", value: Math.abs(t.y) },
            };
        }
    }
    class fr {
        constructor(t, e = "swipe", n = {}) {
            (this._element = t),
                (this._event = e),
                (this.swipe = new pr(t, n)),
                (this._touchStartHandler = this._handleTouchStart.bind(this)),
                (this._touchMoveHandler = this._handleTouchMove.bind(this)),
                (this._touchEndHandler = this._handleTouchEnd.bind(this));
        }
        dispose() {
            this._element.removeEventListener(
                "touchstart",
                this._touchStartHandler
            ),
                this._element.removeEventListener(
                    "touchmove",
                    this._touchMoveHandler
                ),
                window.removeEventListener("touchend", this._touchEndHandler);
        }
        init() {
            this._element.addEventListener("touchstart", (t) =>
                this._handleTouchStart(t)
            ),
                this._element.addEventListener("touchmove", (t) =>
                    this._handleTouchMove(t)
                ),
                window.addEventListener("touchend", (t) =>
                    this._handleTouchEnd(t)
                );
        }
        _handleTouchStart(t) {
            this[this._event].handleTouchStart(t);
        }
        _handleTouchMove(t) {
            this[this._event].handleTouchMove(t);
        }
        _handleTouchEnd(t) {
            this[this._event].handleTouchEnd(t);
        }
    }
    const gr = "ripple",
        mr = "ripple-surface",
        br = "ripple-wave",
        _r = "input-wrapper",
        vr = [".btn", `[data-mdb-${gr}-init]`],
        yr = "ripple-surface-unbound",
        wr = [0, 0, 0],
        Cr = [
            "primary",
            "secondary",
            "success",
            "danger",
            "warning",
            "info",
            "light",
            "dark",
        ],
        Er = {
            rippleCentered: !1,
            rippleColor: "",
            rippleDuration: "500ms",
            rippleRadius: 0,
            rippleUnbound: !1,
        },
        Ar = {
            rippleCentered: "boolean",
            rippleColor: "string",
            rippleDuration: "string",
            rippleRadius: "number",
            rippleUnbound: "boolean",
        };
    class Sr extends Zi {
        constructor(t, e) {
            super(t),
                (this._options = this._getConfig(e)),
                this._element &&
                    (R.addClass(this._element, mr),
                    R.setDataAttribute(
                        this._element,
                        `${this.constructor.NAME}-initialized`,
                        !0
                    ),
                    Et(this.constructor)),
                (this._clickHandler = this._createRipple.bind(this)),
                (this._rippleTimer = null),
                (this._isMinWidthSet = !1),
                (this._rippleInSpan = !1),
                this.init();
        }
        static get NAME() {
            return gr;
        }
        init() {
            this._addClickEvent(this._element);
        }
        dispose() {
            D.off(this._element, "mousedown", this._clickHandler),
                R.removeDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`
                ),
                super.dispose();
        }
        _autoInit(t) {
            vr.forEach((e) => {
                P.closest(t.target, e) &&
                    (this._element = P.closest(t.target, e));
            });
            const e = R.getDataAttributes(this._element);
            if (
                !this._element.classList.contains("btn") ||
                !1 !== e.rippleInit
            ) {
                if (
                    ((this._options = this._getConfig()),
                    "input" === this._element.tagName.toLowerCase())
                ) {
                    const t = this._element.parentNode;
                    if (
                        ((this._rippleInSpan = !0),
                        "span" === t.tagName.toLowerCase() &&
                            t.classList.contains(mr))
                    )
                        this._element = t;
                    else {
                        const e = getComputedStyle(this._element).boxShadow,
                            n = this._element,
                            i = document.createElement("span");
                        n.classList.contains("btn-block") &&
                            (i.style.display = "block"),
                            D.one(i, "mouseup", (t) => {
                                0 === t.button && n.click();
                            }),
                            i.classList.add(mr, _r),
                            R.addStyle(i, { border: 0, "box-shadow": e }),
                            t.replaceChild(i, this._element),
                            i.appendChild(this._element),
                            (this._element = i);
                    }
                    this._element.focus();
                }
                this._element.style.minWidth ||
                    (R.style(this._element, {
                        "min-width": `${getComputedStyle(this._element).width}`,
                    }),
                    (this._isMinWidthSet = !0)),
                    R.addClass(this._element, mr),
                    this._createRipple(t);
            }
        }
        _addClickEvent(t) {
            D.on(t, "mousedown", this._clickHandler);
        }
        _getEventLayer(t) {
            return {
                layerX: Math.round(
                    t.clientX - t.target.getBoundingClientRect().x
                ),
                layerY: Math.round(
                    t.clientY - t.target.getBoundingClientRect().y
                ),
            };
        }
        _createRipple(t) {
            if (null === this._element) return;
            R.hasClass(this._element, mr) || R.addClass(this._element, mr);
            const { layerX: e, layerY: n } = this._getEventLayer(t),
                i = e,
                s = n,
                o = this._element.offsetHeight,
                r = this._element.offsetWidth,
                a = this._durationToMsNumber(this._options.rippleDuration),
                l = {
                    offsetX: this._options.rippleCentered ? o / 2 : i,
                    offsetY: this._options.rippleCentered ? r / 2 : s,
                    height: o,
                    width: r,
                },
                c = this._getDiameter(l),
                d = this._options.rippleRadius || c / 2,
                u = 0.5 * a,
                h = a - 0.5 * a,
                p = {
                    left: this._options.rippleCentered
                        ? r / 2 - d + "px"
                        : i - d + "px",
                    top: this._options.rippleCentered
                        ? o / 2 - d + "px"
                        : s - d + "px",
                    height: `${2 * this._options.rippleRadius || c}px`,
                    width: `${2 * this._options.rippleRadius || c}px`,
                    transitionDelay: `0s, ${u}ms`,
                    transitionDuration: `${a}ms, ${h}ms`,
                },
                f = b("div");
            this._createHTMLRipple({
                wrapper: this._element,
                ripple: f,
                styles: p,
            }),
                this._removeHTMLRipple({ ripple: f, duration: a });
        }
        _createHTMLRipple({ wrapper: t, ripple: e, styles: n }) {
            Object.keys(n).forEach((t) => (e.style[t] = n[t])),
                e.classList.add(br),
                "" !== this._options.rippleColor &&
                    (this._removeOldColorClasses(t), this._addColor(e, t)),
                this._toggleUnbound(t),
                this._appendRipple(e, t);
        }
        _removeHTMLRipple({ ripple: t, duration: e }) {
            this._rippleTimer &&
                (clearTimeout(this._rippleTimer), (this._rippleTimer = null)),
                (this._rippleTimer = setTimeout(() => {
                    t &&
                        (t.remove(),
                        this._element &&
                            (P.find(`.${br}`, this._element).forEach((t) => {
                                t.remove();
                            }),
                            this._isMinWidthSet &&
                                (R.style(this._element, { "min-width": "" }),
                                (this._isMinWidthSet = !1)),
                            this._rippleInSpan &&
                            this._element.classList.contains(_r)
                                ? this._removeWrapperSpan()
                                : R.removeClass(this._element, mr)));
                }, e));
        }
        _removeWrapperSpan() {
            const t = this._element.firstChild;
            this._element.replaceWith(t),
                (this._element = t),
                this._element.focus(),
                (this._rippleInSpan = !1);
        }
        _durationToMsNumber(t) {
            return Number(t.replace("ms", "").replace("s", "000"));
        }
        _getConfig(t = {}) {
            const e = R.getDataAttributes(this._element);
            return (t = { ...Er, ...e, ...t }), u(gr, t, Ar), t;
        }
        _getDiameter({ offsetX: t, offsetY: e, height: n, width: i }) {
            const s = e <= n / 2,
                o = t <= i / 2,
                r = (t, e) => Math.sqrt(t ** 2 + e ** 2),
                a = e === n / 2 && t === i / 2,
                l = !0 === s && !1 === o,
                c = !0 === s && !0 === o,
                d = !1 === s && !0 === o,
                u = !1 === s && !1 === o,
                h = {
                    topLeft: r(t, e),
                    topRight: r(i - t, e),
                    bottomLeft: r(t, n - e),
                    bottomRight: r(i - t, n - e),
                };
            let p = 0;
            return (
                a || u
                    ? (p = h.topLeft)
                    : d
                    ? (p = h.topRight)
                    : c
                    ? (p = h.bottomRight)
                    : l && (p = h.bottomLeft),
                2 * p
            );
        }
        _appendRipple(t, e) {
            e.appendChild(t),
                setTimeout(() => {
                    R.addClass(t, "active");
                }, 50);
        }
        _toggleUnbound(t) {
            !0 === this._options.rippleUnbound
                ? R.addClass(t, yr)
                : t.classList.remove(yr);
        }
        _addColor(t, e) {
            if (Cr.find((t) => t === this._options.rippleColor.toLowerCase()))
                R.addClass(
                    e,
                    `${mr}-${this._options.rippleColor.toLowerCase()}`
                );
            else {
                const e = this._colorToRGB(this._options.rippleColor).join(","),
                    n =
                        "rgba({{color}}, 0.2) 0, rgba({{color}}, 0.3) 40%, rgba({{color}}, 0.4) 50%, rgba({{color}}, 0.5) 60%, rgba({{color}}, 0) 70%"
                            .split("{{color}}")
                            .join(`${e}`);
                t.style.backgroundImage = `radial-gradient(circle, ${n})`;
            }
        }
        _removeOldColorClasses(t) {
            const e = new RegExp(`${mr}-[a-z]+`, "gi");
            (t.classList.value.match(e) || []).forEach((e) => {
                t.classList.remove(e);
            });
        }
        _colorToRGB(t) {
            return "transparent" === t.toLowerCase()
                ? wr
                : "#" === t[0]
                ? ((e = t).length < 7 &&
                      (e = `#${e[1]}${e[1]}${e[2]}${e[2]}${e[3]}${e[3]}`),
                  [
                      parseInt(e.substr(1, 2), 16),
                      parseInt(e.substr(3, 2), 16),
                      parseInt(e.substr(5, 2), 16),
                  ])
                : (-1 === t.indexOf("rgb") &&
                      (t = (function (t) {
                          const e = document.body.appendChild(
                                  document.createElement("fictum")
                              ),
                              n = "rgb(1, 2, 3)";
                          return (
                              (e.style.color = n),
                              e.style.color !== n
                                  ? wr
                                  : ((e.style.color = t),
                                    e.style.color === n || "" === e.style.color
                                        ? wr
                                        : ((t = getComputedStyle(e).color),
                                          document.body.removeChild(e),
                                          t))
                          );
                      })(t)),
                  0 === t.indexOf("rgb")
                      ? (function (t) {
                            return (
                                ((t = t
                                    .match(/[.\d]+/g)
                                    .map((t) => +Number(t))).length = 3),
                                t
                            );
                        })(t)
                      : wr);
            var e;
        }
        static autoInitial(t) {
            return function (e) {
                t._autoInit(e);
            };
        }
        static jQueryInterface(t) {
            return this.each(function () {
                return s.getData(this, "mdb.ripple") ? null : new Sr(this, t);
            });
        }
    }
    const kr = "sidenav",
        xr = "mdb.sidenav",
        Tr = "rotate-icon",
        Or = '[data-mdb-toggle="sidenav"]',
        Lr = ".sidenav-collapse",
        Mr = ".sidenav-link",
        Dr = m ? 100 : -100,
        Nr = m ? -100 : 100;
    let $r = 0;
    const Rr = {
            accordion: "(boolean)",
            backdrop: "(boolean)",
            backdropClass: "(null|string)",
            closeOnEsc: "(boolean)",
            color: "(string)",
            content: "(null|string)",
            expandable: "(boolean)",
            expandOnHover: "(boolean)",
            focusTrap: "(boolean)",
            hidden: "(boolean)",
            mode: "(string)",
            scrollContainer: "(null|string)",
            slim: "(boolean)",
            slimCollapsed: "(boolean)",
            slimWidth: "(number)",
            position: "(string)",
            right: "(boolean)",
            transitionDuration: "(number)",
            width: "(number)",
        },
        Pr = {
            accordion: !1,
            backdrop: !0,
            backdropClass: null,
            closeOnEsc: !0,
            color: "primary",
            content: null,
            expandable: !0,
            expandOnHover: !1,
            focusTrap: !0,
            hidden: !0,
            mode: "over",
            scrollContainer: null,
            slim: !1,
            slimCollapsed: !1,
            slimWidth: 77,
            position: "fixed",
            right: !1,
            transitionDuration: 300,
            width: 240,
        };
    class Ir extends Zi {
        constructor(t, e = {}) {
            super(t),
                (this._options = e),
                $r++,
                (this._ID = $r),
                (this._backdrop = null),
                (this._content = null),
                (this._initialContentStyle = null),
                (this._slimCollapsed = !1),
                (this._activeNode = null),
                (this._tempSlim = !1),
                (this._focusTrap = null),
                (this._perfectScrollbar = null),
                (this._touch = null),
                (this.escHandler = (t) => {
                    27 === t.keyCode &&
                        this.toggler &&
                        h(this.toggler) &&
                        (this._update(!1),
                        D.off(window, "keydown", this.escHandler));
                }),
                (this.hashHandler = () => {
                    this._setActiveElements();
                }),
                t && this._setup(),
                R.setDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`,
                    !0
                ),
                Et(this.constructor);
        }
        static get NAME() {
            return kr;
        }
        get container() {
            if ("fixed" === this.options.position) return P.findOne("body");
            const t = (e) => {
                if (!e.parentNode || e.parentNode === document) return e;
                return "relative" === e.parentNode.style.position ||
                    e.parentNode.classList.contains("position-relative")
                    ? e.parentNode
                    : t(e.parentNode);
            };
            return t(this._element);
        }
        get isVisible() {
            let t = 0,
                e = window.innerWidth;
            if ("fixed" !== this.options.position) {
                const n = this.container.getBoundingClientRect();
                (t = n.x), (e = n.x + n.width);
            }
            const { x: n } = this._element.getBoundingClientRect();
            if ((this.options.right && !m) || (!this.options.right && m)) {
                let t = 0;
                if (
                    (this.container.scrollHeight >
                        this.container.clientHeight &&
                        (t =
                            this.container.offsetWidth -
                            this.container.clientWidth),
                    "BODY" === this.container.tagName)
                ) {
                    const e = document.documentElement.clientWidth;
                    t = Math.abs(window.innerWidth - e);
                }
                return Math.abs(n + t - e) > 10;
            }
            return Math.abs(n - t) < 10;
        }
        get links() {
            return P.find(Mr, this._element);
        }
        get navigation() {
            return P.find(".sidenav-menu", this._element);
        }
        get options() {
            const t = {
                ...Pr,
                ...R.getDataAttributes(this._element),
                ...this._options,
            };
            return u(kr, t, Rr), t;
        }
        get sidenavStyle() {
            return {
                width: `${this.width}px`,
                height: "fixed" === this.options.position ? "100vh" : "100%",
                position: this.options.position,
                transitionDuration: this.transitionDuration,
                transitionProperty: "transform, width, padding, margin",
                transitionTimingFunction: "linear",
            };
        }
        get toggler() {
            return P.find(Or).find((t) => {
                const e = R.getDataAttribute(t, "target");
                return P.findOne(e) === this._element;
            });
        }
        get transitionDuration() {
            return this.options.transitionDuration / 1e3 + "s";
        }
        get translation() {
            return this.options.right ? Nr : Dr;
        }
        get width() {
            return this._slimCollapsed
                ? this.options.slimWidth
                : this.options.width;
        }
        changeMode(t) {
            this._setMode(t);
        }
        dispose() {
            this._backdrop && this._removeBackdrop(),
                D.off(window, "keydown", this.escHandler),
                D.off(window, "hashchange", this.hashHandler),
                this._touch.dispose(),
                s.removeData(this._element, xr),
                R.removeDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`
                ),
                super.dispose();
        }
        hide() {
            this._setVisibility(!1), this._update(!1);
        }
        show() {
            this._setVisibility(!0), this._update(!0);
        }
        toggle() {
            this._setVisibility(!this.isVisible), this._update(!this.isVisible);
        }
        toggleSlim() {
            this._setSlim(!this._slimCollapsed);
        }
        update(t) {
            (this._options = t), this._setup();
        }
        _appendArrow(t) {
            const e = b("i");
            ["fas", "fa-angle-down", Tr].forEach((t) => {
                R.addClass(e, t);
            }),
                0 === P.find(`.${Tr}`, t).length && t.appendChild(e);
        }
        _collapseItems() {
            this.navigation.forEach((t) => {
                P.find(Lr, t).forEach((t) => {
                    te.getInstance(t).hide();
                });
            });
        }
        _setupBackdrop() {
            const t = [];
            this.options.backdropClass && t.push(this.options.backdropClass);
            const e = {
                transition: `opacity ${this.transitionDuration} ease-out`,
                position: this.options.position,
                width: "fixed" === this.options.position ? "100vw" : "100%",
                height: "fixed" === this.options.position ? "100vh" : "100%",
            };
            if (!this._backdrop) {
                const n = b("div");
                t.push("sidenav-backdrop"),
                    (e.opacity = 0),
                    D.on(n, "click", () => {
                        this._setVisibility(!1), this._update(!1);
                    }),
                    (this._backdrop = n);
            }
            this._backdrop.classList.add(...t), R.style(this._backdrop, e);
        }
        _getOffsetValue(t, { index: e, property: n, offsets: i }) {
            return (
                this._getPxValue(this._initialContentStyle[e][i[n].property]) +
                (t ? i[n].value : 0)
            );
        }
        _getProperty(...t) {
            return t
                .map((t, e) =>
                    0 === e ? t : t[0].toUpperCase().concat(t.slice(1))
                )
                .join("");
        }
        _getPxValue(t) {
            return t ? parseFloat(t) : 0;
        }
        _handleSwipe(t, e) {
            e &&
            this._slimCollapsed &&
            this.options.slim &&
            this.options.expandable
                ? this.toggleSlim()
                : e ||
                  (!this._slimCollapsed &&
                  this.options.slim &&
                  this.options.expandable
                      ? this.toggleSlim()
                      : this.toggler && h(this.toggler) && this.toggle());
        }
        _isActive(t, e) {
            if (e) return e === t;
            if (t.attributes.href) {
                const e = window.location.href.split(/#|\?/)[0],
                    n = window.location.href.split("?")[0];
                return (
                    new URL(t, window.location.href).href === e ||
                    new URL(t, window.location.href).href === n
                );
            }
            return !1;
        }
        _isAllToBeCollapsed() {
            return (
                0 ===
                P.find("[data-mdb-collapse-init]", this._element).filter(
                    (t) => "true" === t.getAttribute("aria-expanded")
                ).length
            );
        }
        _isAllCollapsed() {
            return 0 === P.find(Lr, this._element).filter((t) => h(t)).length;
        }
        _setup() {
            this._setupTouch(),
                this.options.focusTrap && this._setupFocusTrap(),
                this.options.backdrop &&
                    (this._setupBackdrop(),
                    this.options.hidden ||
                        "over" !== this.options.mode ||
                        this._appendBackdrop()),
                this._setupCollapse(),
                this.options.slimCollapsed &&
                    R.addClass(this._element, "sidenav-slim"),
                this.options.slim && this._setupSlim(),
                this._setupInitialStyling(),
                this._setupScrolling(),
                this.options.content && this._setupContent(),
                this._setupActiveState(),
                this._setupRippleEffect(),
                this.options.hidden ||
                    (this.options.right && this.show(),
                    this._updateOffsets(!0, !0));
        }
        _setupActiveState() {
            this._setActiveElements(),
                this.links.forEach((t) => {
                    D.on(t, "click", () => this._setActiveElements(t)),
                        D.on(t, "keydown", (e) => {
                            13 === e.keyCode && this._setActiveElements(t);
                        });
                }),
                D.on(window, "hashchange", this.hashHandler);
        }
        _setupCollapse() {
            this.navigation.forEach((t, e) => {
                P.find(Lr, t).forEach((n, i) =>
                    this._setupCollapseList({
                        list: n,
                        index: i,
                        menu: t,
                        menuIndex: e,
                    })
                );
            });
        }
        _generateCollpaseID(t, e) {
            return `sidenav-collapse-${this._ID}-${e}-${t}`;
        }
        _setupCollapseList({ list: t, index: e, menu: n, menuIndex: i }) {
            const s = this._generateCollpaseID(e, i);
            t.classList.add("collapse"), t.setAttribute("id", s);
            const [o] = P.prev(t, Mr);
            R.setDataAttribute(o, "collapse-init", ""),
                o.setAttribute("href", `#${s}`),
                o.setAttribute("role", "button");
            const r =
                te.getInstance(t) ||
                new te(t, {
                    toggle: !1,
                    parent: this.options.accordion ? n : t,
                });
            this._appendArrow(o),
                R.hasClass(t, "show") && this._rotateArrow(o, 180),
                D.on(o, "click", (e) => {
                    this._toggleCategory(e, r, t),
                        this._tempSlim &&
                            this._isAllToBeCollapsed() &&
                            (this._setSlim(!0), (this._tempSlim = !1)),
                        "over" === this.options.mode &&
                            this._focusTrap &&
                            this._focusTrap.update();
                }),
                D.on(t, "show.bs.collapse", () => this._rotateArrow(o, 180)),
                D.on(t, "hide.bs.collapse", () => this._rotateArrow(o, 0)),
                D.on(t, "shown.bs.collapse", () => {
                    "over" === this.options.mode &&
                        this._focusTrap &&
                        this._focusTrap.update();
                }),
                D.on(t, "hidden.bs.collapse", () => {
                    this._tempSlim &&
                        this._isAllCollapsed() &&
                        (this._setSlim(!0), (this._tempSlim = !1)),
                        "over" === this.options.mode &&
                            this._focusTrap &&
                            this._focusTrap.update();
                });
        }
        _setupContent() {
            (this._content = P.find(this.options.content)),
                this._initialContentStyle ||
                    (this._initialContentStyle = this._content.map((t) => {
                        const {
                            paddingLeft: e,
                            paddingRight: n,
                            marginLeft: i,
                            marginRight: s,
                            transition: o,
                        } = window.getComputedStyle(t);
                        return {
                            paddingLeft: e,
                            paddingRight: n,
                            marginLeft: i,
                            marginRight: s,
                            transition: o,
                        };
                    }));
        }
        _setupFocusTrap() {
            this._focusTrap = new dr(
                this._element,
                {
                    event: "keydown",
                    condition: (t) => 9 === t.keyCode,
                    onlyVisible: !0,
                },
                this.toggler
            );
        }
        _setupInitialStyling() {
            this._setColor(), R.style(this._element, this.sidenavStyle);
        }
        _setupScrolling() {
            let t = this._element;
            if (this.options.scrollContainer) {
                t = P.findOne(this.options.scrollContainer, this._element);
                const n = ((e = t.parentNode.children), Array.from(e))
                    .filter((e) => e !== t)
                    .reduce((t, e) => t + e.clientHeight, 0);
                R.style(t, {
                    maxHeight: `calc(100% - ${n}px)`,
                    position: "relative",
                });
            }
            var e;
            this._perfectScrollbar = new cr(t, {
                suppressScrollX: !0,
                handlers: ["click-rail", "drag-thumb", "wheel", "touch"],
            });
        }
        _setupSlim() {
            (this._slimCollapsed = this.options.slimCollapsed),
                this._toggleSlimDisplay(this._slimCollapsed),
                this.options.expandOnHover &&
                    (this._element.addEventListener("mouseenter", () => {
                        this._slimCollapsed && this._setSlim(!1);
                    }),
                    this._element.addEventListener("mouseleave", () => {
                        this._slimCollapsed || this._setSlim(!0);
                    }));
        }
        _setupRippleEffect() {
            this.links.forEach((t) => {
                let e = Sr.getInstance(t);
                if (e && e._options.color !== this.options.color) e.dispose();
                else if (e) return;
                e = new Sr(t, { rippleColor: this.options.color });
            });
        }
        _setupTouch() {
            (this._touch = new fr(this._element, "swipe", { threshold: 20 })),
                this._touch.init(),
                D.on(this._element, "swipeleft", (t) =>
                    this._handleSwipe(t, this.options.right)
                ),
                D.on(this._element, "swiperight", (t) =>
                    this._handleSwipe(t, !this.options.right)
                );
        }
        _setActive(t, e) {
            R.addClass(t, "active"),
                this._activeNode && this._activeNode.classList.remove("active"),
                (this._activeNode = t);
            const [n] = P.parents(this._activeNode, Lr);
            if (!n) return void this._setActiveCategory();
            const [i] = P.prev(n, Mr);
            this._setActiveCategory(i),
                e || this._slimCollapsed || te.getInstance(n).show();
        }
        _setActiveCategory(t) {
            this.navigation.forEach((e) => {
                P.find(Lr, e).forEach((e) => {
                    const [n] = P.prev(e, Mr);
                    n !== t
                        ? n.classList.remove("active")
                        : R.addClass(n, "active");
                });
            });
        }
        _setActiveElements(t) {
            this.navigation.forEach((e) => {
                P.find(Mr, e)
                    .filter((t) => 0 === P.next(t, Lr).length)
                    .forEach((e) => {
                        this._isActive(e, t) &&
                            e !== this._activeNode &&
                            this._setActive(e, t);
                    });
            });
        }
        _setColor() {
            const t = [
                    "primary",
                    "secondary",
                    "success",
                    "info",
                    "warning",
                    "danger",
                    "light",
                    "dark",
                ],
                { color: e } = this.options,
                n = t.includes(e) ? e : "primary";
            t.forEach((t) => {
                this._element.classList.remove(`sidenav-${t}`);
            }),
                R.addClass(this._element, `sidenav-${n}`);
        }
        _setContentOffsets(t, e, n) {
            this._content.forEach((i, s) => {
                const o = this._getOffsetValue(t, {
                        index: s,
                        property: "padding",
                        offsets: e,
                    }),
                    r = this._getOffsetValue(t, {
                        index: s,
                        property: "margin",
                        offsets: e,
                    }),
                    a = {};
                n || (a.transition = `all ${this.transitionDuration} linear`),
                    (a[e.padding.property] = `${o}px`),
                    (a[e.margin.property] = `${r}px`),
                    R.style(i, a),
                    t &&
                        (n
                            ? R.style(i, {
                                  transition:
                                      this._initialContentStyle[s].transition,
                              })
                            : D.on(i, "transitionend", () => {
                                  R.style(i, {
                                      transition:
                                          this._initialContentStyle[s]
                                              .transition,
                                  });
                              }));
            });
        }
        _setMode(t) {
            this.options.mode !== t &&
                ((this._options.mode = t), this._update(this.isVisible));
        }
        _setSlim(t) {
            const e = t ? ["collapse", "collapsed"] : ["expand", "expanded"];
            this._triggerEvents(...e),
                t
                    ? (this._collapseItems(),
                      R.addClass(this._element, "sidenav-slim"))
                    : R.removeClass(this._element, "sidenav-slim"),
                (this._slimCollapsed = t),
                this._toggleSlimDisplay(t),
                R.style(this._element, { width: `${this.width}px` }),
                this._updateOffsets(this.isVisible);
        }
        _setTabindex(t) {
            this.links.forEach((e) => {
                e.tabIndex = t ? 1 : -1;
            });
        }
        _setVisibility(t) {
            const e = t ? ["show", "shown"] : ["hide", "hidden"];
            this._triggerEvents(...e);
        }
        _rotateArrow(t, e) {
            const [n] = P.children(t, `.${Tr}`);
            n && R.style(n, { transform: `rotate(${e}deg)` });
        }
        async _toggleBackdrop(t) {
            t && "over" === this.options.mode
                ? this._appendBackdrop()
                : (R.style(this._backdrop, { opacity: 0 }),
                  await setTimeout(() => {
                      this._removeBackdrop();
                  }, this.options.transitionDuration));
        }
        _removeBackdrop() {
            this._backdrop.parentNode === this.container &&
                this.container.removeChild(this._backdrop);
        }
        _appendBackdrop() {
            this.container.appendChild(this._backdrop),
                setTimeout(() => R.style(this._backdrop, { opacity: 1 }), 0);
        }
        _toggleCategory(t, e) {
            t.preventDefault(),
                e.toggle(),
                this._slimCollapsed &&
                    this.options.expandable &&
                    ((this._tempSlim = !0), this._setSlim(!1));
        }
        _toggleSlimDisplay(t) {
            const e = P.find('[data-mdb-slim="true"]', this._element),
                n = P.find('[data-mdb-slim="false"]', this._element),
                i = () => {
                    e.forEach((t) => {
                        R.style(t, {
                            display: this._slimCollapsed ? "unset" : "none",
                        });
                    }),
                        n.forEach((t) => {
                            R.style(t, {
                                display: this._slimCollapsed ? "none" : "unset",
                            });
                        });
                };
            t ? setTimeout(() => i(), this.options.transitionDuration) : i();
        }
        async _triggerEvents(t, e) {
            D.trigger(this._element, `${t}.mdb.sidenav`),
                e &&
                    (await setTimeout(() => {
                        D.trigger(this._element, `${e}.mdb.sidenav`);
                    }, this.options.transitionDuration + 5));
        }
        _update(t) {
            this.toggler && this._updateTogglerAria(t),
                this._updateDisplay(t),
                this.options.backdrop && this._toggleBackdrop(t),
                this._updateOffsets(t),
                t &&
                    this.options.closeOnEsc &&
                    "side" !== this.options.mode &&
                    D.on(window, "keydown", this.escHandler),
                this.options.focusTrap && this._updateFocus(t);
        }
        _updateDisplay(t) {
            const e = t ? 0 : this.translation;
            R.style(this._element, { transform: `translateX(${e}%)` });
        }
        _updateFocus(t) {
            if (
                (this._setTabindex(t),
                "over" === this.options.mode && this.options.focusTrap)
            ) {
                if (t) return void this._focusTrap.trap();
                this._focusTrap.disable();
            }
            this._focusTrap.disable();
        }
        _updateOffsets(t, e = !1) {
            const [n, i] =
                    (this.options.right && !m) || (!this.options.right && m)
                        ? ["right", "left"]
                        : ["left", "right"],
                s = {
                    property: this._getProperty("padding", n),
                    value: "over" === this.options.mode ? 0 : this.width,
                },
                o = {
                    property: this._getProperty("margin", i),
                    value: "push" === this.options.mode ? -1 * this.width : 0,
                };
            D.trigger(this._element, "update.mdb.sidenav", {
                margin: o,
                padding: s,
            }),
                this._content &&
                    this._setContentOffsets(t, { padding: s, margin: o }, e);
        }
        _updateTogglerAria(t) {
            this.toggler.setAttribute("aria-expanded", t);
        }
        static toggleSidenav() {
            return function (t) {
                const e = P.closest(t.target, Or),
                    n = R.getDataAttributes(e).target;
                P.find(n).forEach((t) => {
                    (Ir.getInstance(t) || new Ir(t)).toggle();
                });
            };
        }
        static jQueryInterface(t, e) {
            return this.each(function () {
                let n = s.getData(this, xr);
                const i = "object" == typeof t && t;
                if (
                    (n || !/dispose/.test(t)) &&
                    (n || (n = new Ir(this, i)), "string" == typeof t)
                ) {
                    if (void 0 === n[t])
                        throw new TypeError(`No method named "${t}"`);
                    n[t](e);
                }
            });
        }
    }
    const jr = ".bs.alert",
        Wr = `close${jr}`,
        Br = `closed${jr}`;
    let Hr = class t extends vt {
        static get NAME() {
            return "alert";
        }
        close() {
            if (pt.trigger(this._element, Wr).defaultPrevented) return;
            this._element.classList.remove("show");
            const t = this._element.classList.contains("fade");
            this._queueCallback(() => this._destroyElement(), this._element, t);
        }
        _destroyElement() {
            this._element.remove(),
                pt.trigger(this._element, Br),
                this.dispose();
        }
        static jQueryInterface(e) {
            return this.each(function () {
                const n = t.getOrCreateInstance(this);
                if ("string" == typeof e) {
                    if (
                        void 0 === n[e] ||
                        e.startsWith("_") ||
                        "constructor" === e
                    )
                        throw new TypeError(`No method named "${e}"`);
                    n[e](this);
                }
            });
        }
    };
    const Yr = {
            position: "top",
            container: null,
            refresh: 1e3,
            filter: (t) => t,
        },
        Fr = {
            position: "string",
            container: "(undefined|null|string)",
            refresh: "number",
            filter: "function",
        };
    class Xr {
        constructor(t, e, n) {
            (this._element = t),
                (this._selector = e),
                (this._options = this._getConfig(n)),
                (this._offset = null),
                this._options.container &&
                    (this._parent = P.findOne(this._options.container));
        }
        get stackableElements() {
            return P.find(this._selector)
                .filter((t, e) => this._options.filter(t, e))
                .map((t) => ({ el: t, rect: t.getBoundingClientRect() }))
                .filter(({ el: t, rect: e }) => {
                    const n = t !== this._element && h(t);
                    return null === this._offset
                        ? n
                        : n && this._getBoundryOffset(e) < this._offset;
                })
                .sort(
                    (t, e) =>
                        this._getBoundryOffset(e.rect) -
                        this._getBoundryOffset(t.rect)
                );
        }
        get nextElements() {
            return P.find(this._selector)
                .filter((t) => t !== this._element)
                .filter((t, e) => this._options.filter(t, e))
                .filter(
                    (t) => (
                        (this._offset = null),
                        this._getBoundryOffset(t.getBoundingClientRect()) >
                            this._offset
                    )
                );
        }
        _getConfig(t) {
            const e = { ...Yr, ...t };
            return u("Stack", e, Fr), e;
        }
        _getBoundryOffset(t) {
            const { position: e } = this._options;
            let n = 0,
                i = window.innerHeight;
            if (this._parent) {
                const t = this._parent.getBoundingClientRect();
                (n = t.top), (i = t.bottom);
            }
            return "top" === e ? t.top - n : i - t.bottom;
        }
        calculateOffset() {
            const [t] = this.stackableElements;
            return (
                (this._offset = t
                    ? this._getBoundryOffset(t.rect) + t.rect.height
                    : 0),
                this._offset
            );
        }
    }
    const zr = "alert",
        Vr = {
            position: "(string || null)",
            delay: "number",
            autohide: "boolean",
            width: "(string || null)",
            offset: "number",
            stacking: "boolean",
            hidden: "boolean",
            appendToBody: "boolean",
            color: "(string || null)",
            container: "(string|null)",
        },
        Kr = {
            position: null,
            delay: 1e3,
            autohide: !1,
            width: null,
            offset: 10,
            stacking: !1,
            hidden: !1,
            appendToBody: !1,
            color: null,
            container: null,
        },
        qr = [{ name: "close" }, { name: "closed" }];
    class Ur extends Hr {
        constructor(t, e = {}) {
            super(t, e),
                (this._options = this._getConfig(e)),
                this._init(),
                R.setDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`,
                    !0
                ),
                Et(this.constructor);
        }
        dispose() {
            D.off(this._element, "close.bs.alert"),
                D.off(this._element, "closed.bs.alert"),
                R.removeDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`
                ),
                super.dispose();
        }
        get verticalOffset() {
            return this._options.stacking
                ? this.stackUtil.calculateOffset()
                : 0;
        }
        get parent() {
            const [t] = P.parents(this._element, this._options.container);
            return t;
        }
        get position() {
            const [t, e] = this._options.position.split("-");
            return { y: t, x: e };
        }
        update(t = {}) {
            null !== this._timeout &&
                (clearTimeout(this._timeout), (this._timeout = null)),
                (this._options = this._getConfig(t)),
                this._setup();
        }
        hide() {
            if (this._element && this._element.classList.contains("show")) {
                R.toggleClass(this._element, "show");
                const t = (e) => {
                    R.style(e.target, { display: "none" }),
                        null !== this._timeout &&
                            (clearTimeout(this._timeout),
                            (this._timeout = null)),
                        this._options.stacking && this._updateAlertStack(),
                        D.off(e.target, "transitionend", t);
                };
                D.on(this._element, "transitionend", t);
            }
        }
        show() {
            if (
                (this._options.autohide && this._setupAutohide(),
                !this._element.classList.contains("show") &&
                    (R.style(this._element, { display: "block" }),
                    h(this._element)))
            ) {
                const t = (e) => {
                    R.style(e.target, { display: "block" }),
                        D.off(e.target, "transitionend", t);
                };
                R.toggleClass(this._element, "show"),
                    this._options.position && this._setupAlignment(),
                    D.on(this._element, "transitionend", t);
            }
        }
        _init() {
            this._options.hidden && R.style(this._element, { display: "none" }),
                this._bindMdbEvents(),
                this._setup();
        }
        _setup() {
            this._options.color && this._setColor(),
                this._options.stacking && this._setupStacking(),
                this._options.autohide && this._setupAutohide(),
                this._options.width && this._setupWidth(),
                this._options.appendToBody && this._appendToBody(),
                this._options.position &&
                    (this._setupAlignment(), this._setupPosition());
        }
        _setupStacking() {
            (this.stackUtil = new Xr(this._element, ".alert", {
                position: this.position.y,
                offset: this._options.offset,
                container: this._options.container,
                filter: (t) => {
                    const e = Ur.getInstance(t);
                    return (
                        !!e &&
                        e._options.container === this._options.container &&
                        e._options.position === this._options.position
                    );
                },
            })),
                D.on(this._element, "closed.bs.alert", () => {
                    this._updateAlertStack();
                });
        }
        _setColor() {
            const t = [
                    "primary",
                    "secondary",
                    "success",
                    "info",
                    "warning",
                    "danger",
                    "light",
                    "dark",
                ],
                e = t.includes(this._options.color)
                    ? this._options.color
                    : "primary";
            t.forEach((t) => {
                this._element.classList.remove(`alert-${t}`);
            }),
                R.addClass(this._element, `alert-${e}`);
        }
        _setupWidth() {
            R.style(this._element, { width: this._options.width });
        }
        _setupAutohide() {
            this._timeout = setTimeout(() => {
                this.hide();
            }, this._options.delay);
        }
        _setupAlignment() {
            const t = "top" === this.position.y ? "bottom" : "top",
                e = "left" === this.position.x ? "right" : "left";
            "center" === this.position.x
                ? R.style(this._element, {
                      [this.position.y]: `${
                          this.verticalOffset + this._options.offset
                      }px`,
                      [t]: "unset",
                      left: "50%",
                      transform: "translate(-50%)",
                  })
                : R.style(this._element, {
                      [this.position.y]: `${
                          this.verticalOffset + this._options.offset
                      }px`,
                      [this.position.x]: `${this._options.offset}px`,
                      [t]: "unset",
                      [e]: "unset",
                      transform: "unset",
                  });
        }
        _setupPosition() {
            this._options.container
                ? (R.addClass(this.parent, "parent-alert-relative"),
                  R.addClass(this._element, "alert-absolute"))
                : R.addClass(this._element, "alert-fixed");
        }
        _appendToBody() {
            this._element.parentNode.removeChild(this._element),
                document.body.appendChild(this._element);
        }
        _getConfig(t) {
            const e = { ...Kr, ...R.getDataAttributes(this._element), ...t };
            return u(zr, e, Vr), e;
        }
        _bindMdbEvents() {
            D.extend(this._element, qr, zr);
        }
        _updatePosition() {
            R.style(this._element, {
                [this.position.y]: `${
                    this.verticalOffset + this._options.offset
                }px`,
            });
        }
        _updateAlertStack() {
            this.stackUtil.nextElements.forEach((t) => {
                const e = Ur.getInstance(t);
                e && e._updatePosition();
            });
        }
    }
    const Gr = ".bs.toast",
        Zr = `mouseover${Gr}`,
        Qr = `mouseout${Gr}`,
        Jr = `focusin${Gr}`,
        ta = `focusout${Gr}`,
        ea = `hide${Gr}`,
        na = `hidden${Gr}`,
        ia = `show${Gr}`,
        sa = `shown${Gr}`,
        oa = "hide",
        ra = "show",
        aa = "showing",
        la = { animation: "boolean", autohide: "boolean", delay: "number" },
        ca = { animation: !0, autohide: !0, delay: 5e3 };
    let da = class t extends vt {
        constructor(t, e) {
            super(t, e),
                (this._timeout = null),
                (this._hasMouseInteraction = !1),
                (this._hasKeyboardInteraction = !1),
                this._setListeners();
        }
        static get Default() {
            return ca;
        }
        static get DefaultType() {
            return la;
        }
        static get NAME() {
            return "toast";
        }
        show() {
            if (pt.trigger(this._element, ia).defaultPrevented) return;
            this._clearTimeout(),
                this._config.animation && this._element.classList.add("fade");
            this._element.classList.remove(oa),
                K(this._element),
                this._element.classList.add(ra, aa),
                this._queueCallback(
                    () => {
                        this._element.classList.remove(aa),
                            pt.trigger(this._element, sa),
                            this._maybeScheduleHide();
                    },
                    this._element,
                    this._config.animation
                );
        }
        hide() {
            if (!this.isShown()) return;
            if (pt.trigger(this._element, ea).defaultPrevented) return;
            this._element.classList.add(aa),
                this._queueCallback(
                    () => {
                        this._element.classList.add(oa),
                            this._element.classList.remove(aa, ra),
                            pt.trigger(this._element, na);
                    },
                    this._element,
                    this._config.animation
                );
        }
        dispose() {
            this._clearTimeout(),
                this.isShown() && this._element.classList.remove(ra),
                super.dispose();
        }
        isShown() {
            return this._element.classList.contains(ra);
        }
        _maybeScheduleHide() {
            this._config.autohide &&
                (this._hasMouseInteraction ||
                    this._hasKeyboardInteraction ||
                    (this._timeout = setTimeout(() => {
                        this.hide();
                    }, this._config.delay)));
        }
        _onInteraction(t, e) {
            switch (t.type) {
                case "mouseover":
                case "mouseout":
                    this._hasMouseInteraction = e;
                    break;
                case "focusin":
                case "focusout":
                    this._hasKeyboardInteraction = e;
            }
            if (e) return void this._clearTimeout();
            const n = t.relatedTarget;
            this._element === n ||
                this._element.contains(n) ||
                this._maybeScheduleHide();
        }
        _setListeners() {
            pt.on(this._element, Zr, (t) => this._onInteraction(t, !0)),
                pt.on(this._element, Qr, (t) => this._onInteraction(t, !1)),
                pt.on(this._element, Jr, (t) => this._onInteraction(t, !0)),
                pt.on(this._element, ta, (t) => this._onInteraction(t, !1));
        }
        _clearTimeout() {
            clearTimeout(this._timeout), (this._timeout = null);
        }
        static jQueryInterface(e) {
            return this.each(function () {
                const n = t.getOrCreateInstance(this, e);
                if ("string" == typeof e) {
                    if (void 0 === n[e])
                        throw new TypeError(`No method named "${e}"`);
                    n[e](this);
                }
            });
        }
    };
    const ua = "toast",
        ha = "show.bs.toast",
        pa = "hidden.bs.toast",
        fa = [{ name: "shown" }, { name: "hide" }],
        ga = {
            position: "(string|null)",
            animation: "boolean",
            autohide: "boolean",
            width: "(string || null)",
            color: "(string|null)",
            delay: "(boolean|number)",
            offset: "number",
            appendToBody: "boolean",
            stacking: "boolean",
        },
        ma = {
            position: null,
            animation: !0,
            autohide: !0,
            width: null,
            color: null,
            delay: 500,
            offset: 10,
            appendToBody: !1,
            stacking: !0,
        };
    class ba extends da {
        constructor(t, e = {}) {
            super(t, e),
                (this._config = this._getConfig(e)),
                this._setup(),
                R.setDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`,
                    !0
                ),
                Et(this.constructor);
        }
        get parent() {
            const [t] = P.parents(this._element, this._config.container);
            return t;
        }
        get position() {
            if (!this._config.position) return null;
            const [t, e] = this._config.position.split("-");
            return { y: t, x: e };
        }
        get verticalOffset() {
            return this._config.stacking && this.position
                ? this.stackUtil.calculateOffset()
                : 0;
        }
        update(t = {}) {
            (this._config = this._getConfig(t)),
                this._setupColor(),
                this._config.position &&
                    (this._config.stacking &&
                        (this._setupStacking(),
                        D.on(this._element, "hidden.bs.toast", () => {
                            setTimeout(() => this._updateToastStack(), 150);
                        })),
                    this._setupPosition(),
                    this._setupAlignment());
        }
        dispose() {
            D.off(this._element, ha),
                D.off(this._element, "shown.bs.toast"),
                D.off(this._element, "hide.bs.toast"),
                D.off(this._element, pa),
                R.removeDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`
                ),
                super.dispose();
        }
        _setup() {
            this._setupColor(),
                this._config.width && this._setupWidth(),
                this._config.position &&
                    (this._config.stacking &&
                        (this._setupStacking(),
                        D.on(this._element, "hidden.bs.toast", () => {
                            setTimeout(() => this._updateToastStack(), 150);
                        })),
                    this._setupPosition(),
                    this._setupDisplay(),
                    !this._config.container &&
                        this._config.appendToBody &&
                        this._appendToBody(),
                    this._bindMdbEvents());
        }
        _setupStacking() {
            (this.stackUtil = new Xr(this._element, ".toast", {
                position: this.position.y,
                offset: this._config.offset,
                container: this._config.container,
                filter: (t) => {
                    const e = ba.getInstance(t);
                    return (
                        !!e &&
                        e._config.container === this._config.container &&
                        e._config.position === this._config.position
                    );
                },
            })),
                D.on(this._element, "closed.bs.alert", () => {
                    this._updateAlertStack();
                });
        }
        _setupColor() {
            if (!this._config.color) return;
            const t = P.findOne(".toast-header", this._element),
                e = [
                    "primary",
                    "secondary",
                    "success",
                    "info",
                    "warning",
                    "danger",
                    "light",
                    "dark",
                ],
                n = e.includes(this._config.color)
                    ? this._config.color
                    : "primary";
            e.forEach((e) => {
                this._element.classList.remove(`toast-${e}`),
                    t && t.classList.remove(`toast-${e}`);
            }),
                R.addClass(this._element, `toast-${n}`),
                t && R.addClass(t, `toast-${n}`);
        }
        _setupWidth() {
            R.style(this._element, { width: this._config.width });
        }
        _setupPosition() {
            this._config.container
                ? (R.addClass(this.parent, "parent-toast-relative"),
                  R.addClass(this._element, "toast-absolute"))
                : R.addClass(this._element, "toast-fixed");
        }
        _setupAlignment() {
            const t = "top" === this.position.y ? "bottom" : "top",
                e = "left" === this.position.x ? "right" : "left";
            "center" === this.position.x
                ? R.style(this._element, {
                      [this.position.y]: `${
                          this.verticalOffset + this._config.offset
                      }px`,
                      [t]: "unset",
                      left: "50%",
                      transform: "translate(-50%)",
                  })
                : R.style(this._element, {
                      [this.position.y]: `${
                          this.verticalOffset + this._config.offset
                      }px`,
                      [this.position.x]: `${this._config.offset}px`,
                      [t]: "unset",
                      [e]: "unset",
                      transform: "unset",
                  });
        }
        _setupDisplay() {
            this._element.classList.contains("show") ||
                R.style(this._element, { display: "none" }),
                D.on(this._element, pa, () => {
                    D.trigger(this._element, "hidden.mdb.toast"),
                        R.style(this._element, { display: "none" });
                }),
                D.on(this._element, ha, () => {
                    D.trigger(this._element, "show.mdb.toast")
                        .defaultPrevented ||
                        (this._setupAlignment(),
                        R.style(this._element, { display: "block" }));
                });
        }
        _bindMdbEvents() {
            D.extend(this._element, fa, ua);
        }
        _getConfig(t) {
            const e = { ...ma, ...R.getDataAttributes(this._element), ...t };
            return u(ua, e, ga), e;
        }
        _appendToBody() {
            this._element.parentNode.removeChild(this._element),
                document.body.appendChild(this._element);
        }
        _updatePosition() {
            R.style(this._element, {
                [this.position.y]: `${
                    this.verticalOffset + this._config.offset
                }px`,
            });
        }
        _updateToastStack() {
            this.stackUtil.nextElements.forEach((t) => {
                const e = ba.getInstance(t);
                e && e._updatePosition();
            });
        }
        static jQueryInterface(t, e = {}) {
            return this.each(function () {
                let n;
                if (
                    ((n =
                        "object" == typeof t
                            ? new ba(this, t)
                            : ba.getOrCreateInstance(this, t)),
                    "string" == typeof t)
                ) {
                    if (void 0 === n[t])
                        throw new TypeError(`No method named "${t}"`);
                    n[t](e);
                }
            });
        }
    }
    const _a = ".form-check-input",
        va = "selected",
        ya = "active";
    class wa {
        constructor(t, e, n, i, s, o, r, a, l, c, d) {
            (this.id = t),
                (this.nativeOption = e),
                (this.multiple = n),
                (this.value = i),
                (this.label = s),
                (this.selected = o),
                (this.disabled = r),
                (this.hidden = a),
                (this.secondaryText = l),
                (this.groupId = c),
                (this.icon = d),
                (this.node = null),
                (this.active = !1);
        }
        select() {
            this.multiple ? this._selectMultiple() : this._selectSingle();
        }
        _selectSingle() {
            this.selected ||
                (R.addClass(this.node, va),
                this.node.setAttribute("aria-selected", !0),
                (this.selected = !0),
                this.nativeOption && (this.nativeOption.selected = !0));
        }
        _selectMultiple() {
            if (!this.selected) {
                (P.findOne(_a, this.node).checked = !0),
                    R.addClass(this.node, va),
                    this.node.setAttribute("aria-selected", !0),
                    (this.selected = !0),
                    this.nativeOption && (this.nativeOption.selected = !0);
            }
        }
        deselect() {
            this.multiple ? this._deselectMultiple() : this._deselectSingle();
        }
        _deselectSingle() {
            this.selected &&
                (R.removeClass(this.node, va),
                this.node.setAttribute("aria-selected", !1),
                (this.selected = !1),
                this.nativeOption && (this.nativeOption.selected = !1));
        }
        _deselectMultiple() {
            if (this.selected) {
                (P.findOne(_a, this.node).checked = !1),
                    R.removeClass(this.node, va),
                    this.node.setAttribute("aria-selected", !1),
                    (this.selected = !1),
                    this.nativeOption && (this.nativeOption.selected = !1);
            }
        }
        setNode(t) {
            this.node = t;
        }
        setActiveStyles() {
            this.active ||
                this.multiple ||
                ((this.active = !0), R.addClass(this.node, ya));
        }
        removeActiveStyles() {
            this.active && ((this.active = !1), R.removeClass(this.node, ya));
        }
    }
    class Ca {
        constructor(t = !1) {
            (this._multiple = t), (this._selections = []);
        }
        select(t) {
            this._multiple
                ? this._selections.push(t)
                : (this._selections = [t]);
        }
        deselect(t) {
            if (this._multiple) {
                const e = this._selections.findIndex((e) => t === e);
                this._selections.splice(e, 1);
            } else this._selections = [];
        }
        clear() {
            this._selections = [];
        }
        get selection() {
            return this._selections[0];
        }
        get selections() {
            return this._selections;
        }
        get label() {
            return this._selections[0] && this.selection.label;
        }
        get labels() {
            return this._selections.map((t) => t.label).join(", ");
        }
        get value() {
            return this.selections[0] && this.selection.value;
        }
        get values() {
            return this._selections.map((t) => t.value);
        }
    }
    function Ea(t) {
        return t.filter((t) => !t.disabled).every((t) => t.selected);
    }
    const Aa = (t) => {
        "Tab" !== t.code && "Esc" !== t.code && t.preventDefault();
    };


    function Sa(t, e, n, i, s, o, r) {
        const a = document.createElement("div");
        a.classList.add("select-dropdown-container"),
            a.setAttribute("id", `${t}`),
            (a.style.width = `${n}px`);
        const l = document.createElement("div");
        l.setAttribute("tabindex", 0), l.classList.add("select-dropdown");
        const c = b("div");
        R.addClass(c, "select-options-wrapper"), (c.style.maxHeight = `${i}px`);
        const d = ka(o, s, e);
        return (
            c.appendChild(d),
            e.filter &&
                l.appendChild(
                    (function (t) {
                        const e = b("div");
                        R.addClass(e, "input-group");
                        const n = b("input");
                        return (
                            R.addClass(n, "form-control"),
                            R.addClass(n, "select-filter-input"),
                            (n.placeholder = t),
                            n.setAttribute("role", "searchbox"),
                            n.setAttribute("type", "text"),
                            e.appendChild(n),
                            e
                        );
                    })(e.searchPlaceholder)
                ),
            l.appendChild(c),
            r && l.appendChild(r),
            a.appendChild(l),
            a
        );
    }
    function ka(t, e, n) {
        const i = b("div");
        let s;
        return (
            R.addClass(i, "select-options-list"),
            (s = n.multiple
                ? (function (t, e, n) {
                      let i = null;
                      n.selectAll &&
                          (i = (function (t, e, n) {
                              const i = Ea(e),
                                  s = b("div");
                              R.addClass(s, "select-option"),
                                  R.addClass(s, "select-all-option"),
                                  R.addStyle(s, {
                                      height: `${n.optionHeight}px`,
                                  }),
                                  s.setAttribute("role", "option"),
                                  s.setAttribute("aria-selected", i),
                                  i && R.addClass(s, "selected");
                              return s.appendChild(Oa(t, n)), t.setNode(s), s;
                          })(e, t, n));
                      const s = xa(t, n),
                          o = i ? [i, ...s] : s;
                      return o;
                  })(t, e, n)
                : (function (t, e) {
                      const n = xa(t, e);
                      return n;
                  })(t, n)),
            s.forEach((t) => {
                i.appendChild(t);
            }),
            i
        );
    }
    function xa(t, e) {
        const n = [];
        return (
            t.forEach((t) => {
                if (t.hasOwnProperty("options")) {
                    const i = (function (t, e) {
                        const n = b("div");
                        R.addClass(n, "select-option-group"),
                            n.setAttribute("role", "group"),
                            n.setAttribute("id", t.id),
                            t.hidden && R.addClass(n, "d-none");
                        const i = b("label");
                        return (
                            R.addClass(i, "select-option-group-label"),
                            R.addStyle(i, { height: `${e.optionHeight}px` }),
                            i.setAttribute("for", t.id),
                            (i.textContent = t.label),
                            n.appendChild(i),
                            t.options.forEach((t) => {
                                n.appendChild(Ta(t, e));
                            }),
                            n
                        );
                    })(t, e);
                    n.push(i);
                } else n.push(Ta(t, e));
            }),
            n
        );
    }
    function Ta(t, e) {
        if (t.node) return t.node;
        const n = b("div");
        return (
            R.addClass(n, "select-option"),
            R.addStyle(n, { height: `${e.optionHeight}px` }),
            R.setDataAttribute(n, "id", t.id),
            n.setAttribute("role", "option"),
            n.setAttribute("aria-selected", t.selected),
            n.setAttribute("aria-disabled", t.disabled),
            t.selected && R.addClass(n, "selected"),
            t.disabled && R.addClass(n, "disabled"),
            t.hidden && R.addClass(n, "d-none"),
            n.appendChild(Oa(t, e)),
            t.icon &&
                n.appendChild(
                    (function (t) {
                        const e = b("span");
                        R.addClass(e, "select-option-icon-container");
                        const n = b("img");
                        return (
                            R.addClass(n, "select-option-icon"),
                            R.addClass(n, "rounded-circle"),
                            (n.src = t.icon),
                            e.appendChild(n),
                            e
                        );
                    })(t)
                ),
            t.setNode(n),
            n
        );
    }
    function Oa(t, e) {
        const n = b("span");
        R.addClass(n, "select-option-text");
        const i = document.createTextNode(t.label);
        return (
            e.multiple &&
                n.appendChild(
                    (function (t) {
                        const e = b("input");
                        e.setAttribute("type", "checkbox"),
                            R.addClass(e, "form-check-input");
                        const n = b("label");
                        t.selected && e.setAttribute("checked", !0);
                        t.disabled && e.setAttribute("disabled", !0);
                        return e.appendChild(n), e;
                    })(t)
                ),
            n.appendChild(i),
            (t.secondaryText || "number" == typeof t.secondaryText) &&
                n.appendChild(
                    (function (t) {
                        const e = b("span");
                        R.addClass(e, "select-option-secondary-text");
                        const n = document.createTextNode(t);
                        return e.appendChild(n), e;
                    })(t.secondaryText)
                ),
            n
        );
    }


    const La = {
            autoSelect: !1,
            container: "body",
            clearButton: !1,
            disabled: !1,
            displayedLabels: 5,
            formWhite: !1,
            multiple: !1,
            optionsSelectedLabel: "options selected",
            optionHeight: 38,
            selectAll: !0,
            selectAllLabel: "Select all",
            searchPlaceholder: "Search...",
            size: "default",
            visibleOptions: 5,
            filter: !1,
            filterDebounce: 300,
            noResultText: "No results",
            validation: !1,
            validFeedback: "Valid",
            invalidFeedback: "Invalid",
            placeholder: "",
            filterFn: null,
        },
        Ma = {
            autoSelect: "boolean",
            container: "string",
            clearButton: "boolean",
            disabled: "boolean",
            displayedLabels: "number",
            formWhite: "boolean",
            multiple: "boolean",
            optionsSelectedLabel: "string",
            optionHeight: "number",
            selectAll: "boolean",
            selectAllLabel: "string",
            searchPlaceholder: "string",
            size: "string",
            visibleOptions: "number",
            filter: "boolean",
            filterDebounce: "number",
            noResultText: "string",
            validation: "boolean",
            validFeedback: "string",
            invalidFeedback: "string",
            placeholder: "",
            filterFn: "(function|null)",
        },
        Da = "select",
        Na = "mdb.select",
        $a = `.${Na}`,
        Ra = `close${$a}`,
        Pa = `open${$a}`,
        Ia = `optionSelected${$a}`,
        ja = `optionDeselected${$a}`,
        Wa = `valueChanged${$a}`,
        Ba = `opened${$a}`,
        Ha = `closed${$a}`,
        Ya = `search${$a}`,
        Fa = ".select-input",
        Xa = ".select-options-list",
        za = ".form-outline",
        Va = "select-initialized",
        Ka = "open",
        qa = "active",
        Ua = "focused";

    class Ga extends Zi {
        constructor(t, e) {
            super(t),
                (this._config = this._getConfig(e)),
                (this._optionsToRender = this._getOptionsToRender(t)),
                (this._plainOptions = this._getPlainOptions(
                    this._optionsToRender
                )),
                (this._filteredOptionsList = null),
                (this._selectionModel = new Ca(this.multiple)),
                (this._activeOptionIndex = -1),
                (this._activeOption = null),
                (this._wrapperId = this._element.id
                    ? `select-wrapper-${this._element.id}`
                    : o("select-wrapper-")),
                (this._dropdownContainerId = this._element.id
                    ? `select-dropdown-container-${this._element.id}`
                    : o("select-dropdown-container-")),
                (this._selectAllId = this._element.id
                    ? `select-all-${this._element.id}`
                    : o("select-all-")),
                (this._debounceTimeoutId = null),
                (this._dropdownHeight =
                    this._config.optionHeight * this._config.visibleOptions),
                (this._popper = null),
                (this._input = null),
                (this._label = P.next(this._element, ".select-label")[0]),
                (this._fakeValue = null),
                (this._isFakeValueActive = !1),
                (this._customContent = P.next(t, ".select-custom-content")[0]),
                (this._toggleButton = null),
                (this._elementToggle = null),
                (this._wrapper = null),
                (this._inputEl = null),
                (this._dropdownContainer = null),
                (this._container = null),
                (this._selectAllOption = null),
                this._init(),
                (this._mutationObserver = null),
                (this._isOpen = !1),
                this._addMutationObserver(),
                R.setDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`,
                    !0
                ),
                Et(this.constructor);
        }
        static get NAME() {
            return Da;
        }
        get filterInput() {
            return P.findOne(".select-filter-input", this._dropdownContainer);
        }
        get dropdown() {
            return P.findOne(".select-dropdown", this._dropdownContainer);
        }
        get optionsList() {
            return P.findOne(Xa, this._dropdownContainer);
        }
        get optionsWrapper() {
            return P.findOne(
                ".select-options-wrapper",
                this._dropdownContainer
            );
        }
        get clearButton() {
            return P.findOne(".select-clear-btn", this._wrapper);
        }
        get options() {
            return this._filteredOptionsList
                ? this._filteredOptionsList
                : this._plainOptions;
        }
        get value() {
            return this.multiple
                ? this._selectionModel.values
                : this._selectionModel.value;
        }
        get multiple() {
            return this._config.multiple;
        }
        get hasSelectAll() {
            return this.multiple && this._config.selectAll;
        }
        get hasSelection() {
            return (
                this._selectionModel.selection ||
                this._selectionModel.selections.length > 0
            );
        }
        _getConfig(t) {
            const e = R.getDataAttributes(this._element);
            return (
                (t = { ...La, ...e, ...t }),
                this._element.hasAttribute("multiple") && (t.multiple = !0),
                this._element.hasAttribute("disabled") && (t.disabled = !0),
                this._element.tabIndex &&
                    (t.tabIndex = this._element.getAttribute("tabIndex")),
                u(Da, t, Ma),
                t
            );
        }
        _getOptionsToRender(t) {
            const e = [];
            return (
                t.childNodes.forEach((t) => {
                    if ("OPTGROUP" === t.nodeName) {
                        const n = {
                            id: t.id ? `group-${t.id}` : o("group-"),
                            label: t.label,
                            disabled: t.hasAttribute("disabled"),
                            hidden: t.hasAttribute("hidden"),
                            options: [],
                        };
                        t.childNodes.forEach((t) => {
                            "OPTION" === t.nodeName &&
                                n.options.push(this._createOptionObject(t, n));
                        }),
                            e.push(n);
                    } else
                        "OPTION" === t.nodeName &&
                            e.push(this._createOptionObject(t));
                }),
                e
            );
        }
        _getPlainOptions(t) {
            if (!P.findOne("optgroup", this._element)) return t;
            const e = [];
            return (
                t.forEach((t) => {
                    t.hasOwnProperty("options")
                        ? t.options.forEach((t) => {
                              e.push(t);
                          })
                        : e.push(t);
                }),
                e
            );
        }
        _createOptionObject(t, e = {}) {
            const n = t.id ? `option-${t.id}` : o("option-"),
                i = e.id ? e.id : null,
                s = !!e.disabled && e.disabled,
                r = t.selected || t.hasAttribute("selected"),
                a = t.hasAttribute("disabled") || s,
                l = t.hasAttribute("hidden") || (e && e.hidden),
                c = this.multiple,
                d = t.value,
                u = t.label,
                h = R.getDataAttribute(t, "secondaryText"),
                p = R.getDataAttribute(t, "icon");
            return new wa(n, t, c, d, u, r, a, l, h, i, p);
        }
        _getNavigationOptions() {
            const t = this.options.filter((t) => !t.hidden);
            return this.hasSelectAll ? [this._selectAllOption, ...t] : t;
        }
        _init() {
            this._renderMaterialWrapper(),
                (this._wrapper = P.findOne(`#${this._wrapperId}`)),
                (this._input = P.findOne(Fa, this._wrapper)),
                "off" === this._element.getAttribute("autocomplete") &&
                    this._input.setAttribute("autocomplete", "off");
            const t = this._config.container;
            (this._container = "body" === t ? document.body : P.findOne(t)),
                this._initOutlineInput(),
                this._setDefaultSelections(),
                this._updateInputValue(),
                this._appendFakeValue(),
                this._updateFakeLabelPosition(),
                this._updateLabelPosition(),
                this._updateClearButtonVisibility(),
                this._bindComponentEvents(),
                this.hasSelectAll &&
                    (this._selectAllOption = this._createSelectAllOption()),
                (this._dropdownContainer = Sa(
                    this._dropdownContainerId,
                    this._config,
                    this._input.offsetWidth,
                    this._dropdownHeight,
                    this._selectAllOption,
                    this._optionsToRender,
                    this._customContent
                )),
                this._setFirstActiveOption();
        }
        _renderMaterialWrapper() {
            const t = (function (t, e, n) {
                const i = document.createElement("div");
                i.setAttribute("id", t), i.classList.add("select-wrapper");
                const s = b("div");
                R.addClass(s, "form-outline"),
                    s.setAttribute("data-mdb-input-init", ""),
                    e.formWhite && R.addClass(s, "form-white");
                const o = b("input"),
                    r = e.filter ? "combobox" : "listbox",
                    a = e.multiple ? "true" : "false",
                    l = e.disabled ? "true" : "false";
                R.addClass(o, "form-control"),
                    R.addClass(o, "select-input"),
                    "sm" === e.size && R.addClass(o, "form-control-sm"),
                    "lg" === e.size && R.addClass(o, "form-control-lg"),
                    o.setAttribute("type", "text"),
                    o.setAttribute("role", r),
                    o.setAttribute("aria-multiselectable", a),
                    o.setAttribute("aria-disabled", l),
                    o.setAttribute("aria-haspopup", "true"),
                    o.setAttribute("aria-expanded", !1),
                    e.tabIndex && o.setAttribute("tabIndex", e.tabIndex),
                    e.disabled && o.setAttribute("disabled", ""),
                    "" !== e.placeholder &&
                        o.setAttribute("placeholder", e.placeholder),
                    e.validation
                        ? (R.addStyle(o, {
                              "pointer-events": "none",
                              "caret-color": "transparent",
                          }),
                          R.addStyle(s, { cursor: "pointer" }))
                        : o.setAttribute("readonly", "true"),
                    e.validation &&
                        (o.setAttribute("required", "true"),
                        o.setAttribute("aria-required", "true"),
                        o.addEventListener("keydown", Aa));
                const c = b("div");
                R.addClass(c, "valid-feedback");
                const d = document.createTextNode(`${e.validFeedback}`);
                c.appendChild(d);
                const u = b("div");
                R.addClass(u, "invalid-feedback");
                const h = document.createTextNode(`${e.invalidFeedback}`);
                u.appendChild(h);
                const p = b("span");
                R.addClass(p, "select-clear-btn");
                const f = document.createTextNode("âœ•");
                p.appendChild(f), p.setAttribute("tabindex", "0");
                const g = b("span");
                return (
                    R.addClass(g, "select-arrow"),
                    s.appendChild(o),
                    n && s.appendChild(n),
                    e.validation && (s.appendChild(c), s.appendChild(u)),
                    e.clearButton && s.appendChild(p),
                    s.appendChild(g),
                    i.appendChild(s),
                    i
                );
            })(this._wrapperId, this._config, this._label);
            this._element.parentNode.insertBefore(t, this._element),
                R.addClass(this._element, Va),
                t.appendChild(this._element);
        }
        _initOutlineInput() {
            const t = P.findOne(za, this._wrapper);
            new os(t).init();
        }
        _bindComponentEvents() {
            this._listenToComponentKeydown(),
                this._listenToWrapperClick(),
                this._config.disabled ||
                    (this._listenToClearBtnClick(),
                    this._listenToClearBtnKeydown());
        }
        _setDefaultSelections() {
            this.options.forEach((t) => {
                t.selected && this._selectionModel.select(t);
            });
        }
        _listenToComponentKeydown() {
            D.on(this._wrapper, "keydown", this._handleKeydown.bind(this));
        }
        _handleKeydown(t) {
            this._isOpen && !this._config.filter
                ? this._handleOpenKeydown(t)
                : this._handleClosedKeydown(t);
        }
        _handleOpenKeydown(t) {
            const e = t.keyCode,
                n = 27 === e || ((38 === e || e === ur) && t.altKey) || 9 === e;
            if (
                (9 === e &&
                    this._config.autoSelect &&
                    !this.multiple &&
                    this._handleAutoSelection(this._activeOption),
                n)
            )
                return this.close(), void this._input.focus();
            switch (e) {
                case ur:
                    this._setNextOptionActive(),
                        this._scrollToOption(this._activeOption);
                    break;
                case 38:
                    this._setPreviousOptionActive(),
                        this._scrollToOption(this._activeOption);
                    break;
                case 36:
                    this._setFirstOptionActive(),
                        this._scrollToOption(this._activeOption);
                    break;
                case 35:
                    this._setLastOptionActive(),
                        this._scrollToOption(this._activeOption);
                    break;
                case 13:
                    return (
                        t.preventDefault(),
                        void (
                            this._activeOption &&
                            (this.hasSelectAll && 0 === this._activeOptionIndex
                                ? this._handleSelectAll()
                                : this._handleSelection(this._activeOption))
                        )
                    );
                default:
                    return;
            }
            t.preventDefault();
        }
        _handleClosedKeydown(t) {
            const e = t.keyCode;
            13 === e && t.preventDefault();
            if (
                ((13 === e ||
                    ((e === ur || 38 === e) && t.altKey) ||
                    (e === ur && this.multiple)) &&
                    this.open(),
                this.multiple)
            )
                switch (e) {
                    case ur:
                    case 38:
                        this.open();
                        break;
                    default:
                        return;
                }
            else
                switch (e) {
                    case ur:
                        if (t.altKey) return;
                        this._setNextOptionActive(),
                            this._handleSelection(this._activeOption);
                        break;
                    case 38:
                        if (t.altKey) return;
                        this._setPreviousOptionActive(),
                            this._handleSelection(this._activeOption);
                        break;
                    case 36:
                        this._setFirstOptionActive(),
                            this._handleSelection(this._activeOption);
                        break;
                    case 35:
                        this._setLastOptionActive(),
                            this._handleSelection(this._activeOption);
                        break;
                    default:
                        return;
                }
            t.preventDefault();
        }
        _scrollToOption(t) {
            if (!t) return;
            let e;
            const n = this.options.filter((t) => !t.hidden);
            e = this.hasSelectAll ? n.indexOf(t) + 1 : n.indexOf(t);
            const i = e + this._getNumberOfGroupsBeforeOption(e),
                s = this.optionsWrapper,
                o = s.offsetHeight,
                r = this._config.optionHeight,
                a = s.scrollTop;
            if (e > -1) {
                const t = i * r,
                    e = t + r > a + o,
                    n = t < a;
                s.scrollTop = n ? t : e ? t - o + r : a;
            }
        }
        _getNumberOfGroupsBeforeOption(t) {
            const e = this.options.filter((t) => !t.hidden),
                n = this._optionsToRender.filter((t) => !t.hidden),
                i = this.hasSelectAll ? t - 1 : t;
            let s = 0;
            for (let o = 0; o <= i; o++)
                e[o].groupId &&
                    n[s] &&
                    n[s].id &&
                    e[o].groupId === n[s].id &&
                    s++;
            return s;
        }
        _setNextOptionActive() {
            let t = this._activeOptionIndex + 1;
            const e = this._getNavigationOptions();
            if (e[t]) {
                for (; e[t].disabled; ) if (((t += 1), !e[t])) return;
                this._updateActiveOption(e[t], t);
            }
        }
        _setPreviousOptionActive() {
            let t = this._activeOptionIndex - 1;
            const e = this._getNavigationOptions();
            if (e[t]) {
                for (; e[t].disabled; ) if (((t -= 1), !e[t])) return;
                this._updateActiveOption(e[t], t);
            }
        }
        _setFirstOptionActive() {
            const t = this._getNavigationOptions();
            this._updateActiveOption(t[0], 0);
        }
        _setLastOptionActive() {
            const t = this._getNavigationOptions(),
                e = t.length - 1;
            this._updateActiveOption(t[e], e);
        }
        _updateActiveOption(t, e) {
            const n = this._activeOption;
            n && n.removeActiveStyles(),
                t.setActiveStyles(),
                (this._activeOptionIndex = e),
                (this._activeOption = t);
        }
        _listenToWrapperClick() {
            D.on(this._wrapper, "click", () => {
                this.toggle();
            });
        }
        _listenToClearBtnClick() {
            D.on(this.clearButton, "click", (t) => {
                t.preventDefault(), t.stopPropagation(), this._handleClear();
            });
        }
        _listenToClearBtnKeydown() {
            D.on(this.clearButton, "keydown", (t) => {
                13 === t.keyCode &&
                    (this._handleClear(),
                    t.preventDefault(),
                    t.stopPropagation());
            });
        }
        _handleClear() {
            if (this.multiple)
                this._selectionModel.clear(),
                    this._deselectAllOptions(this.options),
                    this.hasSelectAll && this._updateSelectAllState();
            else {
                const t = this._selectionModel.selection;
                this._selectionModel.clear(), t.deselect();
            }
            !0 === this._optionsToRender[0].hidden
                ? this._singleOptionSelect(this._optionsToRender[0])
                : (this._emitValueChangeEvent(null),
                  this._emitNativeChangeEvent()),
                this._updateInputValue(),
                this._updateFakeLabelPosition(),
                this._updateLabelPosition(),
                this._updateClearButtonVisibility();
        }
        _listenToOptionsClick() {
            D.on(this.optionsWrapper, "click", (t) => {
                if (t.target.classList.contains("select-option-group-label"))
                    return;
                const e =
                    "DIV" === t.target.nodeName
                        ? t.target
                        : P.closest(t.target, ".select-option");
                if (e.classList.contains("select-all-option"))
                    return void this._handleSelectAll();
                const n = e.dataset.mdbId,
                    i = this.options.find((t) => t.id === n);
                i && !i.disabled && this._handleSelection(i);
            });
        }
        _handleSelectAll() {
            this._selectAllOption.selected
                ? (this._deselectAllOptions(this.options),
                  this._selectAllOption.deselect())
                : (this._selectAllOptions(this.options),
                  this._selectAllOption.select()),
                this._updateInputValue(),
                this._updateFakeLabelPosition(),
                this._updateLabelPosition(),
                this._updateClearButtonVisibility(),
                this._emitValueChangeEvent(this.value),
                this._emitNativeChangeEvent();
        }
        _selectAllOptions(t) {
            t.forEach((t) => {
                t.selected ||
                    t.disabled ||
                    (this._selectionModel.select(t), t.select());
            });
        }
        _deselectAllOptions(t) {
            t.forEach((t) => {
                t.selected &&
                    !t.disabled &&
                    (this._selectionModel.deselect(t), t.deselect());
            });
        }
        _handleSelection(t) {
            this.multiple
                ? (this._handleMultiSelection(t),
                  this.hasSelectAll && this._updateSelectAllState())
                : this._handleSingleSelection(t),
                this._updateInputValue(),
                this._updateFakeLabelPosition(),
                this._updateLabelPosition(),
                this._updateClearButtonVisibility();
        }
        _handleAutoSelection(t) {
            this._singleOptionSelect(t),
                this._updateInputValue(),
                this._updateFakeLabelPosition(),
                this._updateLabelPosition(),
                this._updateClearButtonVisibility();
        }
        _handleSingleSelection(t) {
            this._singleOptionSelect(t), this.close(), this._input.focus();
        }
        _singleOptionSelect(t) {
            const e = this._selectionModel.selections[0];
            e &&
                e !== t &&
                (this._selectionModel.deselect(e),
                e.deselect(),
                e.node.setAttribute("selected", !1),
                D.trigger(this._element, ja, { value: e.value })),
                (!e || (e && t !== e)) &&
                    (this._selectionModel.select(t),
                    t.select(),
                    t.node.setAttribute("selected", !0),
                    D.trigger(this._element, Ia, { value: t.value }),
                    this._emitValueChangeEvent(this.value),
                    this._emitNativeChangeEvent());
        }
        _handleMultiSelection(t) {
            t.selected
                ? (this._selectionModel.deselect(t),
                  t.deselect(),
                  t.node.setAttribute("selected", !1),
                  D.trigger(this._element, ja, { value: t.value }))
                : (this._selectionModel.select(t),
                  t.select(),
                  t.node.setAttribute("selected", !0),
                  D.trigger(this._element, Ia, { value: t.value })),
                this._emitValueChangeEvent(this.value),
                this._emitNativeChangeEvent();
        }
        _emitValueChangeEvent(t) {
            D.trigger(this._element, Wa, { value: t });
        }
        _emitNativeChangeEvent() {
            D.trigger(this._element, "change");
        }
        _updateInputValue() {
            const t = this.multiple
                ? this._selectionModel.labels
                : this._selectionModel.label;
            let e;
            (e =
                this.multiple &&
                -1 !== this._config.displayedLabels &&
                this._selectionModel.selections.length >
                    this._config.displayedLabels
                    ? `${this._selectionModel.selections.length} ${this._config.optionsSelectedLabel}`
                    : t),
                this.multiple ||
                this._isSelectionValid(this._selectionModel.selection)
                    ? this._isLabelEmpty(this._selectionModel.selection)
                        ? (this._input.value = " ")
                        : e
                        ? (this._input.value = e)
                        : this.multiple || !this._optionsToRender[0]
                        ? (this._input.value = "")
                        : (this._input.value = this._optionsToRender[0].label)
                    : (this._input.value = "");
        }
        _isSelectionValid(t) {
            return !t || (!t.disabled && "" !== t.value);
        }
        _isLabelEmpty(t) {
            return !(!t || "" !== t.label);
        }
        _appendFakeValue() {
            if (
                !this._selectionModel.selection ||
                this._selectionModel._multiple
            )
                return;
            const t = this._selectionModel.selection.label;
            this._fakeValue = (function (t) {
                const e = b("div");
                return (
                    (e.textContent = t),
                    R.addClass(e, "form-label"),
                    R.addClass(e, "select-fake-value"),
                    e
                );
            })(t);
            P.findOne(za, this._wrapper).appendChild(this._fakeValue);
        }
        _updateLabelPosition() {
            const t = R.hasClass(this._element, Va),
                e = "" !== this._input.value;
            this._label &&
                (t && (e || this._isOpen || this._isFakeValueActive)
                    ? R.addClass(this._label, qa)
                    : R.removeClass(this._label, qa));
        }
        _updateLabelPositionWhileClosing() {
            this._label &&
                ("" !== this._input.value || this._isFakeValueActive
                    ? R.addClass(this._label, qa)
                    : R.removeClass(this._label, qa));
        }
        _updateFakeLabelPosition() {
            this._fakeValue &&
                (this.hasSelection &&
                    (this._fakeValue.textContent = this.hasSelection.label),
                "" === this._input.value && "" !== this._fakeValue.innerHTML
                    ? ((this._isFakeValueActive = !0),
                      R.addClass(this._fakeValue, qa))
                    : ((this._isFakeValueActive = !1),
                      R.removeClass(this._fakeValue, qa)));
        }
        _updateClearButtonVisibility() {
            if (!this.clearButton) return;
            this._selectionModel.selection ||
            this._selectionModel.selections.length > 0
                ? R.addStyle(this.clearButton, { display: "block" })
                : R.addStyle(this.clearButton, { display: "none" });
        }
        _updateSelectAllState() {
            const t = this._selectAllOption.selected,
                e = Ea(this.options);
            !e && t
                ? this._selectAllOption.deselect()
                : e && !t && this._selectAllOption.select();
        }
        toggle() {
            this._isOpen ? this.close() : this.open();
        }
        open() {
            const t = this._config.disabled,
                e = D.trigger(this._element, Pa);
            this._isOpen ||
                t ||
                e.defaultPrevented ||
                (this._openDropdown(),
                this._updateDropdownWidth(),
                this._setFirstActiveOption(),
                this._scrollToOption(this._activeOption),
                this._config.filter &&
                    (setTimeout(() => {
                        this.filterInput.focus();
                    }, 0),
                    this._listenToSelectSearch(),
                    this._listenToDropdownKeydown()),
                this._listenToOptionsClick(),
                this._listenToOutsideClick(),
                this._listenToWindowResize(),
                (this._isOpen = !0),
                this._input.setAttribute("aria-expanded", !0),
                D.trigger(this._element, Ba),
                this._updateLabelPosition(),
                this._setInputActiveStyles());
        }
        _openDropdown() {
            (this._popper = Dn(this._input, this._dropdownContainer, {
                placement: "bottom-start",
                modifiers: [{ name: "offset", options: { offset: [0, 1] } }],
            })),
                this._container.appendChild(this._dropdownContainer),
                setTimeout(() => {
                    R.addClass(this.dropdown, Ka);
                }, 0);
        }
        _updateDropdownWidth() {
            const t = this._input.offsetWidth;
            R.addStyle(this._dropdownContainer, { width: `${t}px` });
        }
        _setFirstActiveOption() {
            const t = this._getNavigationOptions(),
                e = this._activeOption;
            e && e.removeActiveStyles();
            const n = this.multiple
                ? this._selectionModel.selections[0]
                : this._selectionModel.selection;
            n
                ? ((this._activeOption = n),
                  n.setActiveStyles(),
                  (this._activeOptionIndex = t.findIndex((t) => t === n)))
                : ((this._activeOption = null), (this._activeOptionIndex = -1));
        }
        _setInputActiveStyles() {
            R.addClass(this._input, Ua);
        }
        _listenToWindowResize() {
            D.on(window, "resize", this._handleWindowResize.bind(this));
        }
        _handleWindowResize() {
            this._dropdownContainer && this._updateDropdownWidth();
        }
        _listenToSelectSearch() {
            this.filterInput.addEventListener("input", (t) => {
                const e = t.target.value,
                    n = this._config.filterDebounce;
                D.trigger(this._element, Ya, { value: e }).defaultPrevented ||
                    this._debounceFilter(e, n);
            });
        }
        _debounceFilter(t, e) {
            this._debounceTimeoutId && clearTimeout(this._debounceTimeoutId),
                (this._debounceTimeoutId = setTimeout(() => {
                    this._filterOptions(t);
                }, e));
        }
        _filterOptions(t) {
            const e = [],
                n = this._config.filterFn;
            this._optionsToRender.forEach((i) => {
                const s = i.hasOwnProperty("options"),
                    o = !s && i.label.toLowerCase().includes(t.toLowerCase()),
                    r = {};
                if (
                    (s &&
                        ((r.label = i.label),
                        (r.options = this._filter(t, i.options)),
                        r.options.length > 0 && e.push(r)),
                    n && !s)
                ) {
                    n(t, i) && e.push(i);
                } else o && e.push(i);
            });
            const i = "" !== this._config.noResultText,
                s = 0 !== e.length;
            if (s)
                this._updateOptionsListTemplate(e),
                    this._popper.forceUpdate(),
                    (this._filteredOptionsList = this._getPlainOptions(e)),
                    this.hasSelectAll && this._updateSelectAllState(),
                    this._setFirstActiveOption();
            else if (!s && i) {
                const t = this._getNoResultTemplate();
                this.optionsWrapper.innerHTML = t;
            }
        }
        _updateOptionsListTemplate(t) {
            const e =
                    P.findOne(Xa, this._dropdownContainer) ||
                    P.findOne(".select-no-results", this._dropdownContainer),
                n = ka(t, this._selectAllOption, this._config);
            this.optionsWrapper.removeChild(e),
                this.optionsWrapper.appendChild(n);
        }
        _getNoResultTemplate() {
            return `<div class="select-no-results" style="height: ${this._config.optionHeight}px">${this._config.noResultText}</div>`;
        }
        _filter(t, e) {
            const n = this._config.filterFn;
            if (n) return e.filter((e) => n(t, e));
            const i = t.toLowerCase();
            return e.filter((t) => t.label.toLowerCase().includes(i));
        }
        _listenToDropdownKeydown() {
            D.on(this.dropdown, "keydown", this._handleOpenKeydown.bind(this));
        }
        _listenToOutsideClick() {
            (this._outsideClick = this._handleOutSideClick.bind(this)),
                D.on(document, "click", this._outsideClick);
        }
        _handleOutSideClick(t) {
            const e = this._wrapper && this._wrapper.contains(t.target),
                n = t.target === this._dropdownContainer,
                i =
                    this._dropdownContainer &&
                    this._dropdownContainer.contains(t.target);
            let s;
            this._toggleButton ||
                (this._elementToggle = P.find("[data-mdb-toggle]")),
                this._elementToggle &&
                    this._elementToggle.forEach((e) => {
                        const n = R.getDataAttribute(e, "toggle");
                        (n === this._element.id ||
                            this._element.classList.contains(n)) &&
                            ((this._toggleButton = e),
                            (s = this._toggleButton.contains(t.target)));
                    }),
                e || n || i || s || this.close();
        }
        close() {
            const t = D.trigger(this._element, Ra);
            this._isOpen &&
                !t.defaultPrevented &&
                (this._config.filter &&
                    this.hasSelectAll &&
                    (this._resetFilterState(),
                    this._updateOptionsListTemplate(this._optionsToRender),
                    this._config.multiple && this._updateSelectAllState()),
                this._removeDropdownEvents(),
                R.removeClass(this.dropdown, Ka),
                setTimeout(() => {
                    R.removeClass(this._input, Ua),
                        this._label &&
                            !this.hasSelection &&
                            (R.removeClass(this._label, qa),
                            R.removeClass(this._input, qa)),
                        this._updateLabelPositionWhileClosing();
                }, 0),
                setTimeout(() => {
                    this._container &&
                        this._dropdownContainer.parentNode ===
                            this._container &&
                        this._container.removeChild(this._dropdownContainer),
                        this._popper.destroy(),
                        (this._isOpen = !1),
                        this._input.setAttribute("aria-expanded", !1),
                        D.off(this.dropdown, "transitionend"),
                        D.trigger(this._element, Ha);
                }, 200));
        }
        _resetFilterState() {
            (this.filterInput.value = ""), (this._filteredOptionsList = null);
        }
        _removeDropdownEvents() {
            D.off(document, "click", this._outsideClick),
                this._config.filter && D.off(this.dropdown, "keydown"),
                D.off(this.optionsWrapper, "click");
        }
        _addMutationObserver() {
            (this._mutationObserver = new MutationObserver(() => {
                this._wrapper &&
                    (this._updateSelections(), this._updateDisabledState());
            })),
                this._observeMutationObserver();
        }
        _updateSelections() {
            (this._optionsToRender = this._getOptionsToRender(this._element)),
                (this._plainOptions = this._getPlainOptions(
                    this._optionsToRender
                )),
                this._selectionModel.clear(),
                this._setDefaultSelections(),
                this._updateInputValue(),
                this._updateFakeLabelPosition(),
                this._updateLabelPosition(),
                this._updateClearButtonVisibility(),
                this.hasSelectAll && this._updateSelectAllState();
            const t =
                this._config.filter &&
                this.filterInput &&
                this.filterInput.value;
            this._isOpen && !t
                ? (this._updateOptionsListTemplate(this._optionsToRender),
                  this._setFirstActiveOption())
                : this._isOpen && t
                ? (this._filterOptions(this.filterInput.value),
                  this._setFirstActiveOption())
                : (this._dropdownContainer = Sa(
                      this._dropdownContainerId,
                      this._config,
                      this._input.offsetWidth,
                      this._dropdownHeight,
                      this._selectAllOption,
                      this._optionsToRender,
                      this._customContent
                  ));
        }
        _updateDisabledState() {
            const t = P.findOne(Fa, this._wrapper);
            this._element.hasAttribute("disabled")
                ? ((this._config.disabled = !0), t.setAttribute("disabled", ""))
                : ((this._config.disabled = !1), t.removeAttribute("disabled"));
        }
        _observeMutationObserver() {
            this._mutationObserver &&
                this._mutationObserver.observe(this._element, {
                    attributes: !0,
                    childList: !0,
                    characterData: !0,
                    subtree: !0,
                });
        }
        _disconnectMutationObserver() {
            this._mutationObserver &&
                (this._mutationObserver.disconnect(),
                (this._mutationObserver = null));
        }
        _createSelectAllOption() {
            const t = this._selectAllId,
                e = this._config.selectAllLabel,
                n = Ea(this.options);
            return new wa(
                t,
                null,
                !0,
                "select-all",
                e,
                n,
                !1,
                !1,
                null,
                null,
                null
            );
        }
        dispose() {
            this._disconnectMutationObserver(),
                this._removeComponentEvents(),
                this._disconnectMutationObserver(),
                this._destroyMaterialSelect(),
                R.removeDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`
                ),
                super.dispose();
        }
        _removeComponentEvents() {
            D.off(this.input, "click"),
                D.off(this.wrapper, this._handleKeydown.bind(this)),
                D.off(this.clearButton, "click"),
                D.off(this.clearButton, "keydown"),
                D.off(window, "resize", this._handleWindowResize.bind(this));
        }
        _destroyMaterialSelect() {
            this._isOpen && this.close(), this._destroyMaterialTemplate();
        }
        _destroyMaterialTemplate() {
            const t = this._wrapper.parentNode,
                e = P.find("label", this._wrapper);
            t.appendChild(this._element),
                e.forEach((e) => {
                    t.appendChild(e);
                }),
                e.forEach((t) => {
                    R.removeClass(t, qa);
                }),
                R.removeClass(this._element, Va),
                this._customContent && t.appendChild(this._customContent),
                t.removeChild(this._wrapper);
        }
        setValue(t) {
            this.options
                .filter((t) => t.selected)
                .forEach((t) => (t.nativeOption.selected = !1));
            Array.isArray(t)
                ? t.forEach((t) => {
                      this._selectByValue(t);
                  })
                : this._selectByValue(t),
                this._updateSelections(),
                this._emitValueChangeEvent(t);
        }
        _selectByValue(t) {
            const e = this.options.find((e) => e.value === t);
            return !!e && ((e.nativeOption.selected = !0), !0);
        }
        static jQueryInterface(t, e) {
            return this.each(function () {
                let n = s.getData(this, Na);
                const i = "object" == typeof t && t;
                if (
                    (n || !/dispose/.test(t)) &&
                    (n || (n = new Ga(this, i)), "string" == typeof t)
                ) {
                    if (void 0 === n[t])
                        throw new TypeError(`No method named "${t}"`);
                    n[t](e);
                }
            });
        }
    }




    /*!
     * perfect-scrollbar v1.5.3
     * Copyright 2021 Hyunje Jun, MDBootstrap and Contributors
     * Licensed under MIT
     */ function Za(t) {
        return getComputedStyle(t);
    }
    function Qa(t, e) {
        for (var n in e) {
            var i = e[n];
            "number" == typeof i && (i += "px"), (t.style[n] = i);
        }
        return t;
    }
    function Ja(t) {
        var e = document.createElement("div");
        return (e.className = t), e;
    }
    var tl =
        "undefined" != typeof Element &&
        (Element.prototype.matches ||
            Element.prototype.webkitMatchesSelector ||
            Element.prototype.mozMatchesSelector ||
            Element.prototype.msMatchesSelector);
    function el(t, e) {
        if (!tl) throw new Error("No element matching method supported");
        return tl.call(t, e);
    }
    function nl(t) {
        t.remove ? t.remove() : t.parentNode && t.parentNode.removeChild(t);
    }
    function il(t, e) {
        return Array.prototype.filter.call(t.children, function (t) {
            return el(t, e);
        });
    }
    var sl = {
            main: "ps",
            rtl: "ps__rtl",
            element: {
                thumb: function (t) {
                    return "ps__thumb-" + t;
                },
                rail: function (t) {
                    return "ps__rail-" + t;
                },
                consuming: "ps__child--consume",
            },
            state: {
                focus: "ps--focus",
                clicking: "ps--clicking",
                active: function (t) {
                    return "ps--active-" + t;
                },
                scrolling: function (t) {
                    return "ps--scrolling-" + t;
                },
            },
        },
        ol = { x: null, y: null };
    function rl(t, e) {
        var n = t.element.classList,
            i = sl.state.scrolling(e);
        n.contains(i) ? clearTimeout(ol[e]) : n.add(i);
    }
    function al(t, e) {
        ol[e] = setTimeout(function () {
            return (
                t.isAlive && t.element.classList.remove(sl.state.scrolling(e))
            );
        }, t.settings.scrollingThreshold);
    }
    var ll = function (t) {
            (this.element = t), (this.handlers = {});
        },
        cl = { isEmpty: { configurable: !0 } };
    (ll.prototype.bind = function (t, e) {
        void 0 === this.handlers[t] && (this.handlers[t] = []),
            this.handlers[t].push(e),
            this.element.addEventListener(t, e, !1);
    }),
        (ll.prototype.unbind = function (t, e) {
            var n = this;
            this.handlers[t] = this.handlers[t].filter(function (i) {
                return (
                    !(!e || i === e) ||
                    (n.element.removeEventListener(t, i, !1), !1)
                );
            });
        }),
        (ll.prototype.unbindAll = function () {
            for (var t in this.handlers) this.unbind(t);
        }),
        (cl.isEmpty.get = function () {
            var t = this;
            return Object.keys(this.handlers).every(function (e) {
                return 0 === t.handlers[e].length;
            });
        }),
        Object.defineProperties(ll.prototype, cl);
    var dl = function () {
        this.eventElements = [];
    };
    function ul(t) {
        if ("function" == typeof window.CustomEvent) return new CustomEvent(t);
        var e = document.createEvent("CustomEvent");
        return e.initCustomEvent(t, !1, !1, void 0), e;
    }
    function hl(t, e, n, i, s) {
        var o;
        if ((void 0 === i && (i = !0), void 0 === s && (s = !1), "top" === e))
            o = [
                "contentHeight",
                "containerHeight",
                "scrollTop",
                "y",
                "up",
                "down",
            ];
        else {
            if ("left" !== e)
                throw new Error("A proper axis should be provided");
            o = [
                "contentWidth",
                "containerWidth",
                "scrollLeft",
                "x",
                "left",
                "right",
            ];
        }
        !(function (t, e, n, i, s) {
            var o = n[0],
                r = n[1],
                a = n[2],
                l = n[3],
                c = n[4],
                d = n[5];
            void 0 === i && (i = !0);
            void 0 === s && (s = !1);
            var u = t.element;
            (t.reach[l] = null), u[a] < 1 && (t.reach[l] = "start");
            u[a] > t[o] - t[r] - 1 && (t.reach[l] = "end");
            e &&
                (u.dispatchEvent(ul("ps-scroll-" + l)),
                e < 0
                    ? u.dispatchEvent(ul("ps-scroll-" + c))
                    : e > 0 && u.dispatchEvent(ul("ps-scroll-" + d)),
                i &&
                    (function (t, e) {
                        rl(t, e), al(t, e);
                    })(t, l));
            t.reach[l] &&
                (e || s) &&
                u.dispatchEvent(ul("ps-" + l + "-reach-" + t.reach[l]));
        })(t, n, o, i, s);
    }
    function pl(t) {
        return parseInt(t, 10) || 0;
    }
    (dl.prototype.eventElement = function (t) {
        var e = this.eventElements.filter(function (e) {
            return e.element === t;
        })[0];
        return e || ((e = new ll(t)), this.eventElements.push(e)), e;
    }),
        (dl.prototype.bind = function (t, e, n) {
            this.eventElement(t).bind(e, n);
        }),
        (dl.prototype.unbind = function (t, e, n) {
            var i = this.eventElement(t);
            i.unbind(e, n),
                i.isEmpty &&
                    this.eventElements.splice(this.eventElements.indexOf(i), 1);
        }),
        (dl.prototype.unbindAll = function () {
            this.eventElements.forEach(function (t) {
                return t.unbindAll();
            }),
                (this.eventElements = []);
        }),
        (dl.prototype.once = function (t, e, n) {
            var i = this.eventElement(t),
                s = function (t) {
                    i.unbind(e, s), n(t);
                };
            i.bind(e, s);
        });
    var fl = {
        isWebKit:
            "undefined" != typeof document &&
            "WebkitAppearance" in document.documentElement.style,
        supportsTouch:
            "undefined" != typeof window &&
            ("ontouchstart" in window ||
                ("maxTouchPoints" in window.navigator &&
                    window.navigator.maxTouchPoints > 0) ||
                (window.DocumentTouch &&
                    document instanceof window.DocumentTouch)),
        supportsIePointer:
            "undefined" != typeof navigator && navigator.msMaxTouchPoints,
        isChrome:
            "undefined" != typeof navigator &&
            /Chrome/i.test(navigator && navigator.userAgent),
    };
    function gl(t) {
        var e = t.element,
            n = Math.floor(e.scrollTop),
            i = e.getBoundingClientRect();
        (t.containerWidth = Math.round(i.width)),
            (t.containerHeight = Math.round(i.height)),
            (t.contentWidth = e.scrollWidth),
            (t.contentHeight = e.scrollHeight),
            e.contains(t.scrollbarXRail) ||
                (il(e, sl.element.rail("x")).forEach(function (t) {
                    return nl(t);
                }),
                e.appendChild(t.scrollbarXRail)),
            e.contains(t.scrollbarYRail) ||
                (il(e, sl.element.rail("y")).forEach(function (t) {
                    return nl(t);
                }),
                e.appendChild(t.scrollbarYRail)),
            !t.settings.suppressScrollX &&
            t.containerWidth + t.settings.scrollXMarginOffset < t.contentWidth
                ? ((t.scrollbarXActive = !0),
                  (t.railXWidth = t.containerWidth - t.railXMarginWidth),
                  (t.railXRatio = t.containerWidth / t.railXWidth),
                  (t.scrollbarXWidth = ml(
                      t,
                      pl((t.railXWidth * t.containerWidth) / t.contentWidth)
                  )),
                  (t.scrollbarXLeft = pl(
                      ((t.negativeScrollAdjustment + e.scrollLeft) *
                          (t.railXWidth - t.scrollbarXWidth)) /
                          (t.contentWidth - t.containerWidth)
                  )))
                : (t.scrollbarXActive = !1),
            !t.settings.suppressScrollY &&
            t.containerHeight + t.settings.scrollYMarginOffset < t.contentHeight
                ? ((t.scrollbarYActive = !0),
                  (t.railYHeight = t.containerHeight - t.railYMarginHeight),
                  (t.railYRatio = t.containerHeight / t.railYHeight),
                  (t.scrollbarYHeight = ml(
                      t,
                      pl((t.railYHeight * t.containerHeight) / t.contentHeight)
                  )),
                  (t.scrollbarYTop = pl(
                      (n * (t.railYHeight - t.scrollbarYHeight)) /
                          (t.contentHeight - t.containerHeight)
                  )))
                : (t.scrollbarYActive = !1),
            t.scrollbarXLeft >= t.railXWidth - t.scrollbarXWidth &&
                (t.scrollbarXLeft = t.railXWidth - t.scrollbarXWidth),
            t.scrollbarYTop >= t.railYHeight - t.scrollbarYHeight &&
                (t.scrollbarYTop = t.railYHeight - t.scrollbarYHeight),
            (function (t, e) {
                var n = { width: e.railXWidth },
                    i = Math.floor(t.scrollTop);
                e.isRtl
                    ? (n.left =
                          e.negativeScrollAdjustment +
                          t.scrollLeft +
                          e.containerWidth -
                          e.contentWidth)
                    : (n.left = t.scrollLeft);
                e.isScrollbarXUsingBottom
                    ? (n.bottom = e.scrollbarXBottom - i)
                    : (n.top = e.scrollbarXTop + i);
                Qa(e.scrollbarXRail, n);
                var s = { top: i, height: e.railYHeight };
                e.isScrollbarYUsingRight
                    ? e.isRtl
                        ? (s.right =
                              e.contentWidth -
                              (e.negativeScrollAdjustment + t.scrollLeft) -
                              e.scrollbarYRight -
                              e.scrollbarYOuterWidth -
                              9)
                        : (s.right = e.scrollbarYRight - t.scrollLeft)
                    : e.isRtl
                    ? (s.left =
                          e.negativeScrollAdjustment +
                          t.scrollLeft +
                          2 * e.containerWidth -
                          e.contentWidth -
                          e.scrollbarYLeft -
                          e.scrollbarYOuterWidth)
                    : (s.left = e.scrollbarYLeft + t.scrollLeft);
                Qa(e.scrollbarYRail, s),
                    Qa(e.scrollbarX, {
                        left: e.scrollbarXLeft,
                        width: e.scrollbarXWidth - e.railBorderXWidth,
                    }),
                    Qa(e.scrollbarY, {
                        top: e.scrollbarYTop,
                        height: e.scrollbarYHeight - e.railBorderYWidth,
                    });
            })(e, t),
            t.scrollbarXActive
                ? e.classList.add(sl.state.active("x"))
                : (e.classList.remove(sl.state.active("x")),
                  (t.scrollbarXWidth = 0),
                  (t.scrollbarXLeft = 0),
                  (e.scrollLeft = !0 === t.isRtl ? t.contentWidth : 0)),
            t.scrollbarYActive
                ? e.classList.add(sl.state.active("y"))
                : (e.classList.remove(sl.state.active("y")),
                  (t.scrollbarYHeight = 0),
                  (t.scrollbarYTop = 0),
                  (e.scrollTop = 0));
    }
    function ml(t, e) {
        return (
            t.settings.minScrollbarLength &&
                (e = Math.max(e, t.settings.minScrollbarLength)),
            t.settings.maxScrollbarLength &&
                (e = Math.min(e, t.settings.maxScrollbarLength)),
            e
        );
    }
    function bl(t, e) {
        var n = e[0],
            i = e[1],
            s = e[2],
            o = e[3],
            r = e[4],
            a = e[5],
            l = e[6],
            c = e[7],
            d = e[8],
            u = t.element,
            h = null,
            p = null,
            f = null;
        function g(e) {
            e.touches && e.touches[0] && (e[s] = e.touches[0].pageY),
                (u[l] = h + f * (e[s] - p)),
                rl(t, c),
                gl(t),
                e.stopPropagation(),
                e.type.startsWith("touch") &&
                    e.changedTouches.length > 1 &&
                    e.preventDefault();
        }
        function m() {
            al(t, c),
                t[d].classList.remove(sl.state.clicking),
                t.event.unbind(t.ownerDocument, "mousemove", g);
        }
        function b(e, r) {
            (h = u[l]),
                r && e.touches && (e[s] = e.touches[0].pageY),
                (p = e[s]),
                (f = (t[i] - t[n]) / (t[o] - t[a])),
                r
                    ? t.event.bind(t.ownerDocument, "touchmove", g)
                    : (t.event.bind(t.ownerDocument, "mousemove", g),
                      t.event.once(t.ownerDocument, "mouseup", m),
                      e.preventDefault()),
                t[d].classList.add(sl.state.clicking),
                e.stopPropagation();
        }
        t.event.bind(t[r], "mousedown", function (t) {
            b(t);
        }),
            t.event.bind(t[r], "touchstart", function (t) {
                b(t, !0);
            });
    }
    var _l = {
            "click-rail": function (t) {
                t.element,
                    t.event.bind(t.scrollbarY, "mousedown", function (t) {
                        return t.stopPropagation();
                    }),
                    t.event.bind(t.scrollbarYRail, "mousedown", function (e) {
                        var n =
                            e.pageY -
                                window.pageYOffset -
                                t.scrollbarYRail.getBoundingClientRect().top >
                            t.scrollbarYTop
                                ? 1
                                : -1;
                        (t.element.scrollTop += n * t.containerHeight),
                            gl(t),
                            e.stopPropagation();
                    }),
                    t.event.bind(t.scrollbarX, "mousedown", function (t) {
                        return t.stopPropagation();
                    }),
                    t.event.bind(t.scrollbarXRail, "mousedown", function (e) {
                        var n =
                            e.pageX -
                                window.pageXOffset -
                                t.scrollbarXRail.getBoundingClientRect().left >
                            t.scrollbarXLeft
                                ? 1
                                : -1;
                        (t.element.scrollLeft += n * t.containerWidth),
                            gl(t),
                            e.stopPropagation();
                    });
            },
            "drag-thumb": function (t) {
                bl(t, [
                    "containerWidth",
                    "contentWidth",
                    "pageX",
                    "railXWidth",
                    "scrollbarX",
                    "scrollbarXWidth",
                    "scrollLeft",
                    "x",
                    "scrollbarXRail",
                ]),
                    bl(t, [
                        "containerHeight",
                        "contentHeight",
                        "pageY",
                        "railYHeight",
                        "scrollbarY",
                        "scrollbarYHeight",
                        "scrollTop",
                        "y",
                        "scrollbarYRail",
                    ]);
            },
            keyboard: function (t) {
                var e = t.element;
                t.event.bind(t.ownerDocument, "keydown", function (n) {
                    if (
                        !(
                            (n.isDefaultPrevented && n.isDefaultPrevented()) ||
                            n.defaultPrevented
                        ) &&
                        (el(e, ":hover") ||
                            el(t.scrollbarX, ":focus") ||
                            el(t.scrollbarY, ":focus"))
                    ) {
                        var i,
                            s = document.activeElement
                                ? document.activeElement
                                : t.ownerDocument.activeElement;
                        if (s) {
                            if ("IFRAME" === s.tagName)
                                s = s.contentDocument.activeElement;
                            else
                                for (; s.shadowRoot; )
                                    s = s.shadowRoot.activeElement;
                            if (
                                el((i = s), "input,[contenteditable]") ||
                                el(i, "select,[contenteditable]") ||
                                el(i, "textarea,[contenteditable]") ||
                                el(i, "button,[contenteditable]")
                            )
                                return;
                        }
                        var o = 0,
                            r = 0;
                        switch (n.which) {
                            case 37:
                                o = n.metaKey
                                    ? -t.contentWidth
                                    : n.altKey
                                    ? -t.containerWidth
                                    : -30;
                                break;
                            case 38:
                                r = n.metaKey
                                    ? t.contentHeight
                                    : n.altKey
                                    ? t.containerHeight
                                    : 30;
                                break;
                            case 39:
                                o = n.metaKey
                                    ? t.contentWidth
                                    : n.altKey
                                    ? t.containerWidth
                                    : 30;
                                break;
                            case 40:
                                r = n.metaKey
                                    ? -t.contentHeight
                                    : n.altKey
                                    ? -t.containerHeight
                                    : -30;
                                break;
                            case 32:
                                r = n.shiftKey
                                    ? t.containerHeight
                                    : -t.containerHeight;
                                break;
                            case 33:
                                r = t.containerHeight;
                                break;
                            case 34:
                                r = -t.containerHeight;
                                break;
                            case 36:
                                r = t.contentHeight;
                                break;
                            case 35:
                                r = -t.contentHeight;
                                break;
                            default:
                                return;
                        }
                        (t.settings.suppressScrollX && 0 !== o) ||
                            (t.settings.suppressScrollY && 0 !== r) ||
                            ((e.scrollTop -= r),
                            (e.scrollLeft += o),
                            gl(t),
                            (function (n, i) {
                                var s = Math.floor(e.scrollTop);
                                if (0 === n) {
                                    if (!t.scrollbarYActive) return !1;
                                    if (
                                        (0 === s && i > 0) ||
                                        (s >=
                                            t.contentHeight -
                                                t.containerHeight &&
                                            i < 0)
                                    )
                                        return !t.settings.wheelPropagation;
                                }
                                var o = e.scrollLeft;
                                if (0 === i) {
                                    if (!t.scrollbarXActive) return !1;
                                    if (
                                        (0 === o && n < 0) ||
                                        (o >=
                                            t.contentWidth - t.containerWidth &&
                                            n > 0)
                                    )
                                        return !t.settings.wheelPropagation;
                                }
                                return !0;
                            })(o, r) && n.preventDefault());
                    }
                });
            },
            wheel: function (t) {
                var e = t.element;
                function n(n) {
                    var i = (function (t) {
                            var e = t.deltaX,
                                n = -1 * t.deltaY;
                            return (
                                (void 0 !== e && void 0 !== n) ||
                                    ((e = (-1 * t.wheelDeltaX) / 6),
                                    (n = t.wheelDeltaY / 6)),
                                t.deltaMode &&
                                    1 === t.deltaMode &&
                                    ((e *= 10), (n *= 10)),
                                e != e &&
                                    n != n &&
                                    ((e = 0), (n = t.wheelDelta)),
                                t.shiftKey ? [-n, -e] : [e, n]
                            );
                        })(n),
                        s = i[0],
                        o = i[1];
                    if (
                        !(function (t, n, i) {
                            if (!fl.isWebKit && e.querySelector("select:focus"))
                                return !0;
                            if (!e.contains(t)) return !1;
                            for (var s = t; s && s !== e; ) {
                                if (s.classList.contains(sl.element.consuming))
                                    return !0;
                                var o = Za(s);
                                if (i && o.overflowY.match(/(scroll|auto)/)) {
                                    var r = s.scrollHeight - s.clientHeight;
                                    if (
                                        r > 0 &&
                                        ((s.scrollTop > 0 && i < 0) ||
                                            (s.scrollTop < r && i > 0))
                                    )
                                        return !0;
                                }
                                if (n && o.overflowX.match(/(scroll|auto)/)) {
                                    var a = s.scrollWidth - s.clientWidth;
                                    if (
                                        a > 0 &&
                                        ((s.scrollLeft > 0 && n < 0) ||
                                            (s.scrollLeft < a && n > 0))
                                    )
                                        return !0;
                                }
                                s = s.parentNode;
                            }
                            return !1;
                        })(n.target, s, o)
                    ) {
                        var r = !1;
                        t.settings.useBothWheelAxes
                            ? t.scrollbarYActive && !t.scrollbarXActive
                                ? (o
                                      ? (e.scrollTop -=
                                            o * t.settings.wheelSpeed)
                                      : (e.scrollTop +=
                                            s * t.settings.wheelSpeed),
                                  (r = !0))
                                : t.scrollbarXActive &&
                                  !t.scrollbarYActive &&
                                  (s
                                      ? (e.scrollLeft +=
                                            s * t.settings.wheelSpeed)
                                      : (e.scrollLeft -=
                                            o * t.settings.wheelSpeed),
                                  (r = !0))
                            : ((e.scrollTop -= o * t.settings.wheelSpeed),
                              (e.scrollLeft += s * t.settings.wheelSpeed)),
                            gl(t),
                            (r =
                                r ||
                                (function (n, i) {
                                    var s = Math.floor(e.scrollTop),
                                        o = 0 === e.scrollTop,
                                        r =
                                            s + e.offsetHeight ===
                                            e.scrollHeight,
                                        a = 0 === e.scrollLeft,
                                        l =
                                            e.scrollLeft + e.offsetWidth ===
                                            e.scrollWidth;
                                    return (
                                        !(Math.abs(i) > Math.abs(n)
                                            ? o || r
                                            : a || l) ||
                                        !t.settings.wheelPropagation
                                    );
                                })(s, o)),
                            r &&
                                !n.ctrlKey &&
                                (n.stopPropagation(), n.preventDefault());
                    }
                }
                void 0 !== window.onwheel
                    ? t.event.bind(e, "wheel", n)
                    : void 0 !== window.onmousewheel &&
                      t.event.bind(e, "mousewheel", n);
            },
            touch: function (t) {
                if (fl.supportsTouch || fl.supportsIePointer) {
                    var e = t.element,
                        n = {},
                        i = 0,
                        s = {},
                        o = null;
                    fl.supportsTouch
                        ? (t.event.bind(e, "touchstart", c),
                          t.event.bind(e, "touchmove", d),
                          t.event.bind(e, "touchend", u))
                        : fl.supportsIePointer &&
                          (window.PointerEvent
                              ? (t.event.bind(e, "pointerdown", c),
                                t.event.bind(e, "pointermove", d),
                                t.event.bind(e, "pointerup", u))
                              : window.MSPointerEvent &&
                                (t.event.bind(e, "MSPointerDown", c),
                                t.event.bind(e, "MSPointerMove", d),
                                t.event.bind(e, "MSPointerUp", u)));
                }
                function r(n, i) {
                    (e.scrollTop -= i), (e.scrollLeft -= n), gl(t);
                }
                function a(t) {
                    return t.targetTouches ? t.targetTouches[0] : t;
                }
                function l(t) {
                    return (
                        (!t.pointerType ||
                            "pen" !== t.pointerType ||
                            0 !== t.buttons) &&
                        (!(!t.targetTouches || 1 !== t.targetTouches.length) ||
                            !(
                                !t.pointerType ||
                                "mouse" === t.pointerType ||
                                t.pointerType === t.MSPOINTER_TYPE_MOUSE
                            ))
                    );
                }
                function c(t) {
                    if (l(t)) {
                        var e = a(t);
                        (n.pageX = e.pageX),
                            (n.pageY = e.pageY),
                            (i = new Date().getTime()),
                            null !== o && clearInterval(o);
                    }
                }
                function d(o) {
                    if (l(o)) {
                        var c = a(o),
                            d = { pageX: c.pageX, pageY: c.pageY },
                            u = d.pageX - n.pageX,
                            h = d.pageY - n.pageY;
                        if (
                            (function (t, n, i) {
                                if (!e.contains(t)) return !1;
                                for (var s = t; s && s !== e; ) {
                                    if (
                                        s.classList.contains(
                                            sl.element.consuming
                                        )
                                    )
                                        return !0;
                                    var o = Za(s);
                                    if (
                                        i &&
                                        o.overflowY.match(/(scroll|auto)/)
                                    ) {
                                        var r = s.scrollHeight - s.clientHeight;
                                        if (
                                            r > 0 &&
                                            ((s.scrollTop > 0 && i < 0) ||
                                                (s.scrollTop < r && i > 0))
                                        )
                                            return !0;
                                    }
                                    if (
                                        n &&
                                        o.overflowX.match(/(scroll|auto)/)
                                    ) {
                                        var a = s.scrollWidth - s.clientWidth;
                                        if (
                                            a > 0 &&
                                            ((s.scrollLeft > 0 && n < 0) ||
                                                (s.scrollLeft < a && n > 0))
                                        )
                                            return !0;
                                    }
                                    s = s.parentNode;
                                }
                                return !1;
                            })(o.target, u, h)
                        )
                            return;
                        r(u, h), (n = d);
                        var p = new Date().getTime(),
                            f = p - i;
                        f > 0 && ((s.x = u / f), (s.y = h / f), (i = p)),
                            (function (n, i) {
                                var s = Math.floor(e.scrollTop),
                                    o = e.scrollLeft,
                                    r = Math.abs(n),
                                    a = Math.abs(i);
                                if (a > r) {
                                    if (
                                        (i < 0 &&
                                            s ===
                                                t.contentHeight -
                                                    t.containerHeight) ||
                                        (i > 0 && 0 === s)
                                    )
                                        return (
                                            0 === window.scrollY &&
                                            i > 0 &&
                                            fl.isChrome
                                        );
                                } else if (
                                    r > a &&
                                    ((n < 0 &&
                                        o ===
                                            t.contentWidth -
                                                t.containerWidth) ||
                                        (n > 0 && 0 === o))
                                )
                                    return !0;
                                return !0;
                            })(u, h) && o.preventDefault();
                    }
                }
                function u() {
                    t.settings.swipeEasing &&
                        (clearInterval(o),
                        (o = setInterval(function () {
                            t.isInitialized
                                ? clearInterval(o)
                                : s.x || s.y
                                ? Math.abs(s.x) < 0.01 && Math.abs(s.y) < 0.01
                                    ? clearInterval(o)
                                    : t.element
                                    ? (r(30 * s.x, 30 * s.y),
                                      (s.x *= 0.8),
                                      (s.y *= 0.8))
                                    : clearInterval(o)
                                : clearInterval(o);
                        }, 10)));
                }
            },
        },
        vl = function (t, e) {
            var n = this;
            if (
                (void 0 === e && (e = {}),
                "string" == typeof t && (t = document.querySelector(t)),
                !t || !t.nodeName)
            )
                throw new Error(
                    "no element is specified to initialize PerfectScrollbar"
                );
            for (var i in ((this.element = t),
            t.classList.add(sl.main),
            (this.settings = {
                handlers: [
                    "click-rail",
                    "drag-thumb",
                    "keyboard",
                    "wheel",
                    "touch",
                ],
                maxScrollbarLength: null,
                minScrollbarLength: null,
                scrollingThreshold: 1e3,
                scrollXMarginOffset: 0,
                scrollYMarginOffset: 0,
                suppressScrollX: !1,
                suppressScrollY: !1,
                swipeEasing: !0,
                useBothWheelAxes: !1,
                wheelPropagation: !0,
                wheelSpeed: 1,
            }),
            e))
                this.settings[i] = e[i];
            (this.containerWidth = null),
                (this.containerHeight = null),
                (this.contentWidth = null),
                (this.contentHeight = null);
            var s,
                o,
                r = function () {
                    return t.classList.add(sl.state.focus);
                },
                a = function () {
                    return t.classList.remove(sl.state.focus);
                };
            (this.isRtl = "rtl" === Za(t).direction),
                !0 === this.isRtl && t.classList.add(sl.rtl),
                (this.isNegativeScroll =
                    ((o = t.scrollLeft),
                    (t.scrollLeft = -1),
                    (s = t.scrollLeft < 0),
                    (t.scrollLeft = o),
                    s)),
                (this.negativeScrollAdjustment = this.isNegativeScroll
                    ? t.scrollWidth - t.clientWidth
                    : 0),
                (this.event = new dl()),
                (this.ownerDocument = t.ownerDocument || document),
                (this.scrollbarXRail = Ja(sl.element.rail("x"))),
                t.appendChild(this.scrollbarXRail),
                (this.scrollbarX = Ja(sl.element.thumb("x"))),
                this.scrollbarXRail.appendChild(this.scrollbarX),
                this.scrollbarX.setAttribute("tabindex", 0),
                this.event.bind(this.scrollbarX, "focus", r),
                this.event.bind(this.scrollbarX, "blur", a),
                (this.scrollbarXActive = null),
                (this.scrollbarXWidth = null),
                (this.scrollbarXLeft = null);
            var l = Za(this.scrollbarXRail);
            (this.scrollbarXBottom = parseInt(l.bottom, 10)),
                isNaN(this.scrollbarXBottom)
                    ? ((this.isScrollbarXUsingBottom = !1),
                      (this.scrollbarXTop = pl(l.top)))
                    : (this.isScrollbarXUsingBottom = !0),
                (this.railBorderXWidth =
                    pl(l.borderLeftWidth) + pl(l.borderRightWidth)),
                Qa(this.scrollbarXRail, { display: "block" }),
                (this.railXMarginWidth = pl(l.marginLeft) + pl(l.marginRight)),
                Qa(this.scrollbarXRail, { display: "" }),
                (this.railXWidth = null),
                (this.railXRatio = null),
                (this.scrollbarYRail = Ja(sl.element.rail("y"))),
                t.appendChild(this.scrollbarYRail),
                (this.scrollbarY = Ja(sl.element.thumb("y"))),
                this.scrollbarYRail.appendChild(this.scrollbarY),
                this.scrollbarY.setAttribute("tabindex", 0),
                this.event.bind(this.scrollbarY, "focus", r),
                this.event.bind(this.scrollbarY, "blur", a),
                (this.scrollbarYActive = null),
                (this.scrollbarYHeight = null),
                (this.scrollbarYTop = null);
            var c = Za(this.scrollbarYRail);
            (this.scrollbarYRight = parseInt(c.right, 10)),
                isNaN(this.scrollbarYRight)
                    ? ((this.isScrollbarYUsingRight = !1),
                      (this.scrollbarYLeft = pl(c.left)))
                    : (this.isScrollbarYUsingRight = !0),
                (this.scrollbarYOuterWidth = this.isRtl
                    ? (function (t) {
                          var e = Za(t);
                          return (
                              pl(e.width) +
                              pl(e.paddingLeft) +
                              pl(e.paddingRight) +
                              pl(e.borderLeftWidth) +
                              pl(e.borderRightWidth)
                          );
                      })(this.scrollbarY)
                    : null),
                (this.railBorderYWidth =
                    pl(c.borderTopWidth) + pl(c.borderBottomWidth)),
                Qa(this.scrollbarYRail, { display: "block" }),
                (this.railYMarginHeight = pl(c.marginTop) + pl(c.marginBottom)),
                Qa(this.scrollbarYRail, { display: "" }),
                (this.railYHeight = null),
                (this.railYRatio = null),
                (this.reach = {
                    x:
                        t.scrollLeft <= 0
                            ? "start"
                            : t.scrollLeft >=
                              this.contentWidth - this.containerWidth
                            ? "end"
                            : null,
                    y:
                        t.scrollTop <= 0
                            ? "start"
                            : t.scrollTop >=
                              this.contentHeight - this.containerHeight
                            ? "end"
                            : null,
                }),
                (this.isAlive = !0),
                this.settings.handlers.forEach(function (t) {
                    return _l[t](n);
                }),
                (this.lastScrollTop = Math.floor(t.scrollTop)),
                (this.lastScrollLeft = t.scrollLeft),
                this.event.bind(this.element, "scroll", function (t) {
                    return n.onScroll(t);
                }),
                gl(this);
        };
    (vl.prototype.update = function () {
        this.isAlive &&
            ((this.negativeScrollAdjustment = this.isNegativeScroll
                ? this.element.scrollWidth - this.element.clientWidth
                : 0),
            Qa(this.scrollbarXRail, { display: "block" }),
            Qa(this.scrollbarYRail, { display: "block" }),
            (this.railXMarginWidth =
                pl(Za(this.scrollbarXRail).marginLeft) +
                pl(Za(this.scrollbarXRail).marginRight)),
            (this.railYMarginHeight =
                pl(Za(this.scrollbarYRail).marginTop) +
                pl(Za(this.scrollbarYRail).marginBottom)),
            Qa(this.scrollbarXRail, { display: "none" }),
            Qa(this.scrollbarYRail, { display: "none" }),
            gl(this),
            hl(this, "top", 0, !1, !0),
            hl(this, "left", 0, !1, !0),
            Qa(this.scrollbarXRail, { display: "" }),
            Qa(this.scrollbarYRail, { display: "" }));
    }),
        (vl.prototype.onScroll = function (t) {
            this.isAlive &&
                (gl(this),
                hl(this, "top", this.element.scrollTop - this.lastScrollTop),
                hl(this, "left", this.element.scrollLeft - this.lastScrollLeft),
                (this.lastScrollTop = Math.floor(this.element.scrollTop)),
                (this.lastScrollLeft = this.element.scrollLeft));
        }),
        (vl.prototype.destroy = function () {
            this.isAlive &&
                (this.event.unbindAll(),
                nl(this.scrollbarX),
                nl(this.scrollbarY),
                nl(this.scrollbarXRail),
                nl(this.scrollbarYRail),
                this.removePsClasses(),
                (this.element = null),
                (this.scrollbarX = null),
                (this.scrollbarY = null),
                (this.scrollbarXRail = null),
                (this.scrollbarYRail = null),
                (this.isAlive = !1));
        }),
        (vl.prototype.removePsClasses = function () {
            this.element.className = this.element.className
                .split(" ")
                .filter(function (t) {
                    return !t.match(/^ps([-_].+|)$/);
                })
                .join(" ");
        });
    const yl = "perfectScrollbar",
        wl = "mdb",
        Cl = "ps",
        El = [
            { mdb: `scrollX.${wl}.${Cl}`, ps: "ps-scroll-x" },
            { mdb: `scrollY.${wl}.${Cl}`, ps: "ps-scroll-y" },
            { mdb: `scrollUp.${wl}.${Cl}`, ps: "ps-scroll-up" },
            { mdb: `scrollDown.${wl}.${Cl}`, ps: "ps-scroll-down" },
            { mdb: `scrollLeft.${wl}.${Cl}`, ps: "ps-scroll-left" },
            { mdb: `scrollRight.${wl}.${Cl}`, ps: "ps-scroll-right" },
            { mdb: `scrollXEnd.${wl}.${Cl}`, ps: "ps-x-reach-end" },
            { mdb: `scrollYEnd.${wl}.${Cl}`, ps: "ps-y-reach-end" },
            { mdb: `scrollXStart.${wl}.${Cl}`, ps: "ps-x-reach-start" },
            { mdb: `scrollYStart.${wl}.${Cl}`, ps: "ps-y-reach-start" },
        ],
        Al = {
            handlers: [
                "click-rail",
                "drag-thumb",
                "keyboard",
                "wheel",
                "touch",
            ],
            wheelSpeed: 1,
            wheelPropagation: !0,
            swipeEasing: !0,
            minScrollbarLength: null,
            maxScrollbarLength: null,
            scrollingThreshold: 1e3,
            useBothWheelAxes: !1,
            suppressScrollX: !1,
            suppressScrollY: !1,
            scrollXMarginOffset: 0,
            scrollYMarginOffset: 0,
        },
        Sl = {
            handlers: "(string|array)",
            wheelSpeed: "number",
            wheelPropagation: "boolean",
            swipeEasing: "boolean",
            minScrollbarLength: "(number|null)",
            maxScrollbarLength: "(number|null)",
            scrollingThreshold: "number",
            useBothWheelAxes: "boolean",
            suppressScrollX: "boolean",
            suppressScrollY: "boolean",
            scrollXMarginOffset: "number",
            scrollYMarginOffset: "number",
        };
    class kl extends Zi {
        constructor(t, e = {}) {
            super(t),
                (this._options = this._getConfig(e)),
                (this.perfectScrollbar = null),
                this._element && R.addClass(this._element, "perfect-scrollbar"),
                this.init(),
                R.setDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`,
                    !0
                ),
                Et(this.constructor);
        }
        static get NAME() {
            return yl;
        }
        _getConfig(t) {
            const e = R.getDataAttributes(this._element);
            return (
                void 0 !== e.handlers && (e.handlers = e.handlers.split(" ")),
                (t = { ...Al, ...e, ...t }),
                u(yl, t, Sl),
                t
            );
        }
        dispose() {
            this.removeEvent(El),
                this.perfectScrollbar.destroy(),
                (this.perfectScrollbar = null),
                R.removeDataAttribute(
                    this._element,
                    `${this.constructor.NAME}-initialized`
                ),
                super.dispose();
        }
        init() {
            (this.perfectScrollbar = new vl(this._element, this._options)),
                this._initEvents(El);
        }
        update() {
            return this.perfectScrollbar.update();
        }
        _initEvents(t = []) {
            t.forEach(({ ps: t, mdb: e }) =>
                D.on(this._element, t, (t) =>
                    D.trigger(this._element, e, { e: t })
                )
            );
        }
        removeEvent(t) {
            let e = [];
            "string" == typeof t && (e = El.filter(({ mdb: e }) => e === t)),
                e.forEach(({ ps: t, mdb: e }) => {
                    D.off(this._element, t), D.off(this._element, e);
                });
        }
        static jQueryInterface(t) {
            return this.each(function () {
                let e = s.getData(this, "mdb.perfectScrollbar");
                const n = "object" == typeof t && t;
                if (
                    (e || !/dispose|hide/.test(t)) &&
                    (e || (e = new kl(this, n)), "string" == typeof t)
                ) {
                    if (void 0 === e[t])
                        throw new TypeError(`No method named "${t}"`);
                    e[t]();
                }
            });
        }
    }
    const xl = (t, e) => {
            const n = t;
            D.one(document, "mousedown", e, n.autoInitial(new n()));
        },
        Tl = {
            alert: {
                name: "Alert",
                selector: "[data-mdb-alert-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = t;
                    Qs(n, "close"),
                        P.find(e).forEach((t) => n.getOrCreateInstance(t));
                },
            },
            button: {
                name: "Button",
                selector: "[data-mdb-button-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = t,
                        i = `click.bs.${t.name}.data-api`;
                    D.on(document, i, e, (t) => {
                        t.preventDefault();
                        const i = t.target.closest(e);
                        n.getOrCreateInstance(i).toggle();
                    }),
                        P.find(e).forEach((t) => n.getOrCreateInstance(t));
                },
            },
            carousel: {
                name: "Carousel",
                selector: "[data-mdb-carousel-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = `click.bs.${t.name}.data-api`,
                        i = t,
                        s = `load.bs.${t.name}.data-api`,
                        o = e;
                    D.on(
                        document,
                        n,
                        "[data-mdb-slide], [data-mdb-slide-to]",
                        function (t) {
                            const e = l(this);
                            if (!e || !e.classList.contains("carousel")) return;
                            t.preventDefault();
                            const n = i.getOrCreateInstance(e),
                                s = this.getAttribute("data-mdb-slide-to");
                            return s
                                ? (n.to(s), void n._maybeEnableCycle())
                                : "next" === R.getDataAttribute(this, "slide")
                                ? (n.next(), void n._maybeEnableCycle())
                                : (n.prev(), void n._maybeEnableCycle());
                        }
                    ),
                        D.on(window, s, () => {
                            P.find(o).forEach((t) => {
                                i.getOrCreateInstance(t);
                            });
                        });
                },
            },
            collapse: {
                name: "Collapse",
                selector: "[data-mdb-collapse-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = `click.bs.${t.name}.data-api`,
                        i = e,
                        s = t;
                    D.on(document, n, i, function (t) {
                        ("A" === t.target.tagName ||
                            (t.delegateTarget &&
                                "A" === t.delegateTarget.tagName)) &&
                            t.preventDefault();
                        const e = a(this);
                        P.find(e).forEach((t) => {
                            s.getOrCreateInstance(t, { toggle: !1 }).toggle();
                        });
                    }),
                        P.find(i).forEach((t) => {
                            const e = a(t);
                            P.find(e).forEach((t) => {
                                s.getOrCreateInstance(t, { toggle: !1 });
                            });
                        });
                },
            },
            dropdown: {
                name: "Dropdown",
                selector: "[data-mdb-dropdown-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = `click.bs.${t.name}.data-api`,
                        i = `keydown.bs.${t.name}.data-api`,
                        s = `keyup.bs.${t.name}.data-api`,
                        o = `[data-mdb-${t.NAME}-initialized]`,
                        r = t;
                    D.on(document, i, o, r.dataApiKeydownHandler),
                        D.on(
                            document,
                            i,
                            ".dropdown-menu",
                            r.dataApiKeydownHandler
                        ),
                        D.on(document, n, r.clearMenus),
                        D.on(document, s, r.clearMenus),
                        D.on(document, n, o, function (t) {
                            t.preventDefault(),
                                r.getOrCreateInstance(this).toggle();
                        }),
                        P.find(e).forEach((t) => {
                            r.getOrCreateInstance(t);
                        });
                },
            },
            modal: {
                name: "Modal",
                selector: "[data-mdb-modal-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = `click.bs.${t.name}.data-api`,
                        i = t,
                        s = `show.bs.${t.name}`,
                        o = `hidden.bs.${t.name}`;
                    D.on(document, n, e, function (t) {
                        const e = l(this);
                        ["A", "AREA"].includes(this.tagName) &&
                            t.preventDefault(),
                            D.one(e, s, (t) => {
                                t.defaultPrevented ||
                                    D.one(e, o, () => {
                                        h(this) && this.focus();
                                    });
                            });
                        P.find(".modal.show").forEach((t) => {
                            t.classList.contains("modal-non-invasive-show") ||
                                i.getInstance(t).hide();
                        });
                        i.getOrCreateInstance(e).toggle(this);
                    }),
                        Qs(i),
                        P.find(e).forEach((t) => {
                            const e = a(t),
                                n = P.findOne(e);
                            i.getOrCreateInstance(n);
                        });
                },
            },
            offcanvas: {
                name: "Offcanvas",
                selector: "[data-mdb-offcanvas-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = `click.bs.${t.name}.data-api`,
                        i = ".offcanvas.show",
                        s = t,
                        o = `hidden.bs.${t.name}`,
                        r = `load.bs.${t.name}.data-api`,
                        a = `resize.bs.${t.name}`;
                    D.on(document, n, e, function (t) {
                        const e = l(this);
                        if (
                            (["A", "AREA"].includes(this.tagName) &&
                                t.preventDefault(),
                            p(this))
                        )
                            return;
                        D.one(e, o, () => {
                            h(this) && this.focus();
                        });
                        const n = P.findOne(i);
                        n && n !== e && s.getInstance(n).hide();
                        s.getOrCreateInstance(e).toggle(this);
                    }),
                        D.on(window, r, () => {
                            P.find(i).forEach((t) => {
                                s.getOrCreateInstance(t).show();
                            });
                        }),
                        D.on(window, a, () => {
                            P.find(
                                "[aria-modal][class*=show][class*=offcanvas-]"
                            ).forEach((t) => {
                                "fixed" !== getComputedStyle(t).position &&
                                    s.getOrCreateInstance(t).hide();
                            });
                        }),
                        Qs(s);
                },
            },
            scrollspy: {
                name: "ScrollSpy",
                selector: "[data-mdb-scrollspy-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = `load.bs.${t.name}.data-api`,
                        i = t;
                    D.on(window, n, () => {
                        P.find(e).forEach((t) => {
                            i.getOrCreateInstance(t);
                        });
                    });
                },
            },
            tab: {
                name: "Tab",
                selector:
                    "[data-mdb-tab-init], [data-mdb-pill-init], [data-mdb-list-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = `load.bs.${t.name}.data-api`,
                        i = `click.bs.${t.name}.data-api`,
                        s = "active",
                        o = `.${s}[data-mdb-tab-init], .${s}[data-mdb-pill-init], .${s}[data-mdb-toggle="list"]`,
                        r = t;
                    D.on(document, i, e, function (t) {
                        ["A", "AREA"].includes(this.tagName) &&
                            t.preventDefault(),
                            p(this) || r.getOrCreateInstance(this).show();
                    }),
                        D.on(window, n, () => {
                            P.find(o).forEach((t) => {
                                r.getOrCreateInstance(t);
                            });
                        });
                },
            },
            toast: {
                name: "Toast",
                selector: "[data-mdb-toast-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = t;
                    Qs(n), P.find(e).forEach((t) => n.getOrCreateInstance(t));
                },
            },
            tooltip: {
                name: "Tooltip",
                selector: "[data-mdb-tooltip-init]",
                isToggler: !1,
            },
            input: {
                name: "Input",
                selector: "[data-mdb-input-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = e,
                        i = `${n} input`,
                        s = `${n} textarea`,
                        o = t;
                    D.on(document, "focus", i, o.activate(new o())),
                        D.on(document, "input", i, o.activate(new o())),
                        D.on(document, "blur", i, o.deactivate(new o())),
                        D.on(document, "focus", s, o.activate(new o())),
                        D.on(document, "input", s, o.activate(new o())),
                        D.on(document, "blur", s, o.deactivate(new o())),
                        D.on(window, "shown.bs.modal", (t) => {
                            P.find(i, t.target).forEach((t) => {
                                const e = o.getInstance(t.parentNode);
                                e && e.update();
                            }),
                                P.find(s, t.target).forEach((t) => {
                                    const e = o.getInstance(t.parentNode);
                                    e && e.update();
                                });
                        }),
                        D.on(window, "shown.bs.dropdown", (t) => {
                            const e =
                                t.target.parentNode.querySelector(
                                    ".dropdown-menu"
                                );
                            e &&
                                (P.find(i, e).forEach((t) => {
                                    const e = o.getInstance(t.parentNode);
                                    e && e.update();
                                }),
                                P.find(s, e).forEach((t) => {
                                    const e = o.getInstance(t.parentNode);
                                    e && e.update();
                                }));
                        }),
                        D.on(window, "shown.bs.tab", (t) => {
                            let e;
                            e = t.target.href
                                ? t.target.href.split("#")[1]
                                : R.getDataAttribute(t.target, "target").split(
                                      "#"
                                  )[1];
                            const n = P.findOne(`#${e}`);
                            P.find(i, n).forEach((t) => {
                                const e = o.getInstance(t.parentNode);
                                e && e.update();
                            }),
                                P.find(s, n).forEach((t) => {
                                    const e = o.getInstance(t.parentNode);
                                    e && e.update();
                                });
                        }),
                        P.find(n).map((t) => new o(t)),
                        D.on(window, "reset", (t) => {
                            P.find(i, t.target).forEach((t) => {
                                const e = o.getInstance(t.parentNode);
                                e && e.forceInactive();
                            }),
                                P.find(s, t.target).forEach((t) => {
                                    const e = o.getInstance(t.parentNode);
                                    e && e.forceInactive();
                                });
                        }),
                        D.on(window, "onautocomplete", (t) => {
                            const e = o.getInstance(t.target.parentNode);
                            e && t.cancelable && e.forceActive();
                        });
                },
            },
            range: {
                name: "Range",
                selector: "[data-mdb-range-init]",
                isToggler: !1,
            },
            ripple: {
                name: "Ripple",
                selector: "[data-mdb-ripple-init]",
                isToggler: !0,
                callback: xl,
            },
            popover: {
                name: "Popover",
                selector: "[data-mdb-popover-init]",
                isToggler: !1,
                callback: xl,
            },
        },
        Ol = { plugins: { legend: { labels: { color: "rgb(102,102,102)" } } } },
        Ll = {
            line: {
                options: {
                    ...Ol,
                    elements: {
                        line: {
                            backgroundColor: "rgba(59, 112, 202, 0.0)",
                            borderColor: "rgb(59, 112, 202)",
                            borderWidth: 2,
                            tension: 0,
                        },
                        point: {
                            borderColor: "rgb(59, 112, 202)",
                            backgroundColor: "rgb(59, 112, 202)",
                        },
                    },
                    responsive: !0,
                    legend: { display: !0 },
                    tooltips: { intersect: !1, mode: "index" },
                    datasets: { borderColor: "red" },
                    scales: {
                        x: {
                            stacked: !0,
                            grid: { display: !1 },
                            ticks: { fontColor: "rgba(0,0,0, 0.5)" },
                        },
                        y: {
                            stacked: !1,
                            grid: {
                                borderDash: [2],
                                drawBorder: !1,
                                zeroLineColor: "rgba(0,0,0,0)",
                                zeroLineBorderDash: [2],
                                zeroLineBorderDashOffset: [2],
                            },
                            ticks: { fontColor: "rgba(0,0,0, 0.5)" },
                        },
                    },
                },
            },
            bar: {
                options: {
                    ...Ol,
                    backgroundColor: "rgb(59, 112, 202)",
                    borderWidth: 0,
                    responsive: !0,
                    legend: { display: !0 },
                    tooltips: { intersect: !1, mode: "index" },
                    scales: {
                        x: {
                            stacked: !0,
                            grid: { display: !1 },
                            ticks: { fontColor: "rgba(0,0,0, 0.5)" },
                        },
                        y: {
                            stacked: !0,
                            grid: {
                                borderDash: [2],
                                drawBorder: !1,
                                zeroLineColor: "rgba(0,0,0,0)",
                                zeroLineBorderDash: [2],
                                zeroLineBorderDashOffset: [2],
                            },
                            ticks: { fontColor: "rgba(0,0,0, 0.5)" },
                        },
                    },
                },
            },
            pie: {
                options: {
                    ...Ol,
                    elements: { arc: { backgroundColor: "rgb(59, 112, 202)" } },
                    responsive: !0,
                    legend: { display: !0 },
                },
            },
            doughnut: {
                options: {
                    ...Ol,
                    elements: { arc: { backgroundColor: "rgb(59, 112, 202)" } },
                    responsive: !0,
                    legend: { display: !0 },
                },
            },
            polarArea: {
                options: {
                    ...Ol,
                    elements: {
                        arc: { backgroundColor: "rgba(59, 112, 202, 0.5)" },
                    },
                    responsive: !0,
                    legend: { display: !0 },
                },
            },
            radar: {
                options: {
                    ...Ol,
                    elements: {
                        line: {
                            backgroundColor: "rgba(59, 112, 202, 0.5)",
                            borderColor: "rgb(59, 112, 202)",
                            borderWidth: 2,
                        },
                        point: {
                            borderColor: "rgb(59, 112, 202)",
                            backgroundColor: "rgb(59, 112, 202)",
                        },
                    },
                    responsive: !0,
                    legend: { display: !0 },
                },
            },
            scatter: {
                options: {
                    ...Ol,
                    elements: {
                        line: {
                            backgroundColor: "rgba(59, 112, 202, 0.5)",
                            borderColor: "rgb(59, 112, 202)",
                            borderWidth: 2,
                            tension: 0,
                        },
                        point: {
                            borderColor: "rgb(59, 112, 202)",
                            backgroundColor: "rgba(59, 112, 202, 0.5)",
                        },
                    },
                    responsive: !0,
                    legend: { display: !0 },
                    tooltips: { intersect: !1, mode: "index" },
                    datasets: { borderColor: "red" },
                    scales: {
                        x: {
                            stacked: !0,
                            grid: { display: !1 },
                            ticks: { fontColor: "rgba(0,0,0, 0.5)" },
                        },
                        y: {
                            stacked: !1,
                            grid: {
                                borderDash: [2],
                                drawBorder: !1,
                                zeroLineColor: "rgba(0,0,0,0)",
                                zeroLineBorderDash: [2],
                                zeroLineBorderDashOffset: [2],
                            },
                            ticks: { fontColor: "rgba(0,0,0, 0.5)" },
                        },
                    },
                },
            },
            bubble: {
                options: {
                    ...Ol,
                    elements: {
                        point: {
                            borderColor: "rgb(59, 112, 202)",
                            backgroundColor: "rgba(59, 112, 202, 0.5)",
                        },
                    },
                    responsive: !0,
                    legend: { display: !0 },
                    scales: {
                        x: {
                            grid: { display: !1 },
                            ticks: { fontColor: "rgba(0,0,0, 0.5)" },
                        },
                        y: {
                            grid: {
                                borderDash: [2],
                                drawBorder: !1,
                                zeroLineColor: "rgba(0,0,0,0)",
                                zeroLineBorderDash: [2],
                                zeroLineBorderDashOffset: [2],
                            },
                            ticks: { fontColor: "rgba(0,0,0, 0.5)" },
                        },
                    },
                },
            },
        },
        Ml = {
            ...Tl,
            chart: {
                name: "Chart",
                selector: "[data-mdb-chart-init]",
                isToggler: !1,
                advanced: (t, e) => {
                    const n = (t) => {
                        const e = {};
                        return (
                            Object.keys(t).forEach((n) => {
                                if (n.match(/dataset.*/)) {
                                    const i = n
                                        .slice(7, 8)
                                        .toLowerCase()
                                        .concat(n.slice(8));
                                    e[i] = ((t) =>
                                        "string" != typeof t
                                            ? t
                                            : ((t) =>
                                                  ("{" === t[0] &&
                                                      "}" ===
                                                          t[t.length - 1]) ||
                                                  ("[" === t[0] &&
                                                      "]" === t[t.length - 1]))(
                                                  t
                                              )
                                            ? JSON.parse(t.replace(/'/g, '"'))
                                            : t)(t[n]);
                                }
                            }),
                            e
                        );
                    };
                    P.find(e).forEach((e) => {
                        if (
                            !t.getInstance(e) &&
                            "bubble" !== R.getDataAttribute(e, "chart") &&
                            "scatter" !== R.getDataAttribute(e, "chart")
                        ) {
                            const i = R.getDataAttributes(e),
                                s = { data: { datasets: [n(i)] } };
                            return (
                                i.chart && (s.type = i.chart),
                                i.labels &&
                                    (s.data.labels = JSON.parse(
                                        i.labels.replace(/'/g, '"')
                                    )),
                                new t(e, { ...s, ...Ll[s.type] })
                            );
                        }
                        return null;
                    });
                },
            },
            chips: {
                name: "ChipsInput",
                selector: "[data-mdb-chips-input-init]",
                isToggler: !1,
            },
            chip: {
                name: "Chip",
                selector: "[data-mdb-chip-init]",
                isToggler: !1,
                onInit: "init",
            },
            select: {
                name: "Select",
                selector: "[data-mdb-select-init]",
                isToggler: !1,
            },
            datatable: {
                name: "Datatable",
                selector: "[data-mdb-datatable-init]",
                isToggler: !1,
            },
            datetimepicker: {
                name: "Datetimepicker",
                selector: "[data-mdb-datetimepicker-init]",
                isToggler: !1,
            },
            datepicker: {
                name: "Datepicker",
                selector: "[data-mdb-datepicker-init]",
                isToggler: !1,
            },
            loading: {
                name: "Loading",
                selector: "[data-mdb-loading-init]",
                isToggler: !1,
            },
            multiRangeSlider: {
                name: "MultiRangeSlider",
                selector: "[data-mdb-multi-range-slider-init]",
                isToggler: !1,
            },
            timepicker: {
                name: "Timepicker",
                selector: "[data-mdb-timepicker-init]",
                isToggler: !1,
            },
            touch: {
                name: "Touch",
                selector: "[data-mdb-touch-init]",
                isToggler: !1,
            },
            alert: {
                name: "Alert",
                selector: "[data-mdb-alert-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = t;
                    Qs(n, "close"),
                        P.find(e).forEach((t) => n.getOrCreateInstance(t));
                },
            },
            animation: {
                name: "Animate",
                selector: "[data-mdb-animation-init]",
                isToggler: !1,
                onInit: "init",
            },
            clipboard: {
                name: "Clipboard",
                selector: "[data-mdb-clipboard-init]",
                isToggler: !1,
            },
            infiniteScroll: {
                name: "InfiniteScroll",
                selector: "[data-mdb-infinite-scroll-init]",
                isToggler: !1,
            },
            lazyLoad: {
                name: "LazyLoad",
                selector: "[data-mdb-lazy-load-init]",
                isToggler: !1,
            },
            lightbox: {
                name: "Lightbox",
                selector: "[data-mdb-lightbox-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = `click.mdb.${t.name}.data-api`,
                        i = e,
                        s = `${i} img:not(.lightbox-disabled)`,
                        o = t;
                    P.find(i).forEach((t) => new o(t)),
                        D.on(document, n, s, o.toggle());
                },
            },
            modal: {
                name: "Modal",
                selector: "[data-mdb-modal-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = `click.bs.${t.name}.data-api`,
                        i = t,
                        s = `show.bs.${t.name}`,
                        o = `hidden.bs.${t.name}`;
                    D.on(document, n, e, function (t) {
                        const e = l(this);
                        ["A", "AREA"].includes(this.tagName) &&
                            t.preventDefault(),
                            D.one(e, s, (t) => {
                                t.defaultPrevented ||
                                    D.one(e, o, () => {
                                        h(this) && this.focus();
                                    });
                            });
                        P.find(".modal.show").forEach((t) => {
                            t.classList.contains("modal-non-invasive-show") ||
                                i.getInstance(t).hide();
                        });
                        i.getOrCreateInstance(e).toggle(this);
                    }),
                        Qs(i),
                        P.find(e).forEach((t) => {
                            const e = a(t),
                                n = P.findOne(e);
                            i.getOrCreateInstance(n);
                        });
                },
            },
            navbar: {
                name: "Navbar",
                selector: "[data-mdb-navbar-init]",
                isToggler: !1,
                onInit: "init",
            },
            perfectScrollbar: {
                name: "PerfectScrollbar",
                selector: "[data-mdb-perfect-scrollbar-init]",
                isToggler: !1,
            },
            popconfirm: {
                name: "Popconfirm",
                selector: "[data-mdb-popconfirm-init]",
                isToggler: !1,
            },
            rating: {
                name: "Rating",
                selector: "[data-mdb-rating-init]",
                isToggler: !1,
            },
            sidenav: {
                name: "Sidenav",
                selector: "[data-mdb-sidenav-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = e,
                        i = t;
                    D.on(
                        document,
                        "click",
                        '[data-mdb-toggle="sidenav"]',
                        i.toggleSidenav()
                    ),
                        P.find(n).forEach((t) => i.getOrCreateInstance(t));
                },
            },
            smoothScroll: {
                name: "SmoothScroll",
                selector: "[data-mdb-smooth-scroll-init]",
                isToggler: !1,
            },
            stepper: {
                name: "Stepper",
                selector: "[data-mdb-stepper-init]",
                isToggler: !1,
            },
            sticky: {
                name: "Sticky",
                selector: "[data-mdb-sticky-init]",
                isToggler: !1,
            },
            toast: {
                name: "Toast",
                selector: "[data-mdb-toast-init]",
                isToggler: !0,
                callback: (t, e) => {
                    const n = e,
                        i = t;
                    Qs(i), P.find(n).forEach((t) => i.getOrCreateInstance(t));
                },
            },
        },
        Dl = new (class {
            constructor(t) {
                n(this, "init", (t) => {
                    t.forEach((t) => At(t));
                }),
                    n(this, "initMDB", (t, e = !1) => {
                        const n = Object.keys(St).map((n) => {
                            if (
                                Boolean(document.querySelector(St[n].selector))
                            ) {
                                const i = t[St[n].name];
                                return (
                                    i ||
                                        Ct.get(n) ||
                                        !e ||
                                        console.warn(
                                            `Please import ${St[n].name} from "MDB" package and add it to a object parameter inside "initMDB" function`
                                        ),
                                    i
                                );
                            }
                            return null;
                        });
                        this.init(n);
                    }),
                    (St = t);
            }
        })(Ml).initMDB,
        Nl = {
            Button: Wt,
            Collapse: te,
            Popover: class extends ei {
                constructor(t, e) {
                    super(t, e),
                        this._init(),
                        R.setDataAttribute(
                            this._element,
                            `${this.constructor.NAME}-initialized`,
                            !0
                        ),
                        Et(this.constructor);
                }
                dispose() {
                    D.off(this.element, "show.bs.popover"),
                        D.off(this.element, "shown.bs.popover"),
                        D.off(this.element, "hide.bs.popover"),
                        D.off(this.element, "hidden.bs.popover"),
                        D.off(this.element, "inserted.bs.popover"),
                        R.removeDataAttribute(
                            this._element,
                            `${this.constructor.NAME}-initialized`
                        ),
                        super.dispose();
                }
                static get NAME() {
                    return ni;
                }
                _init() {
                    this._bindMdbEvents();
                }
                _bindMdbEvents() {
                    D.extend(this._element, ii, ni);
                }
            },
            ScrollSpy: class extends pi {
                constructor(t, e) {
                    super(t, e),
                        (this._collapsibles = []),
                        this._init(),
                        R.setDataAttribute(
                            this._element,
                            `${this.constructor.NAME}-initialized`,
                            !0
                        ),
                        Et(this.constructor);
                }
                dispose() {
                    D.off(this._scrollElement, gi),
                        R.removeDataAttribute(
                            this._element,
                            `${this.constructor.NAME}-initialized`
                        ),
                        super.dispose();
                }
                static get NAME() {
                    return fi;
                }
                _init() {
                    this._bindActivateEvent(),
                        this._getCollapsibles(),
                        0 !== this._collapsibles.length &&
                            (this._showSubsection(), this._hideSubsection());
                }
                _getHeight(t) {
                    return t.offsetHeight;
                }
                _hide(t) {
                    const e = P.findOne(_i, t.parentNode);
                    (e.style.overflow = "hidden"), (e.style.height = "0px");
                }
                _show(t, e) {
                    t.style.height = e;
                }
                _getCollapsibles() {
                    const t = P.find(vi);
                    t &&
                        t.forEach((t) => {
                            const e = t.parentNode,
                                n = P.findOne(_i, e),
                                i = n.offsetHeight;
                            this._collapsibles.push({
                                element: n,
                                relatedTarget: t.getAttribute("href"),
                                height: `${i}px`,
                            });
                        });
                }
                _showSubsection() {
                    P.find(".active")
                        .filter((t) => R.hasClass(t, bi))
                        .forEach((t) => {
                            const e = P.findOne(_i, t.parentNode),
                                n = this._collapsibles.find(
                                    (e) =>
                                        (e.relatedTarget =
                                            t.getAttribute("href"))
                                ).height;
                            this._show(e, n);
                        });
                }
                _hideSubsection() {
                    P.find(vi)
                        .filter((t) => !1 === R.hasClass(t, "active"))
                        .forEach((t) => {
                            this._hide(t);
                        });
                }
                _bindActivateEvent() {
                    D.on(this._element, gi, (t) => {
                        this._showSubsection(),
                            this._hideSubsection(),
                            D.trigger(this._element, mi, {
                                relatedTarget: t.relatedTarget,
                            });
                    });
                }
            },
            Tab: class extends ji {
                constructor(t) {
                    super(t),
                        R.setDataAttribute(
                            this._element,
                            `${this.constructor.NAME}-initialized`,
                            !0
                        ),
                        Et(this.constructor);
                }
                dispose() {
                    D.off(this._element, Bi),
                        D.off(this._element, Hi),
                        R.removeDataAttribute(
                            this._element,
                            `${this.constructor.NAME}-initialized`
                        ),
                        super.dispose();
                }
                static get NAME() {
                    return "tab";
                }
                show() {
                    const t = this._element;
                    if (this._elemIsActive(t)) return;
                    const e = this._getActiveElem();
                    let n = null,
                        i = null;
                    e &&
                        ((n = D.trigger(e, "hide.bs.tab", {
                            relatedTarget: t,
                        })),
                        (i = D.trigger(e, Xi, { relatedTarget: t })));
                    const s = D.trigger(t, Bi, { relatedTarget: e }),
                        o = D.trigger(t, Yi, { relatedTarget: e });
                    s.defaultPrevented ||
                        o.defaultPrevented ||
                        (n && n.defaultPrevented) ||
                        (i && i.defaultPrevented) ||
                        (this._deactivate(e, t), this._activate(t, e));
                }
                _activate(t, e) {
                    if (!t) return;
                    t.classList.add(Vi), this._activate(l(t));
                    this._queueCallback(
                        () => {
                            "tab" === t.getAttribute("role")
                                ? (t.focus(),
                                  t.removeAttribute("tabindex"),
                                  t.setAttribute("aria-selected", !0),
                                  this._toggleDropDown(t, !0),
                                  D.trigger(t, Hi, { relatedTarget: e }),
                                  D.trigger(t, Fi, { relatedTarget: e }))
                                : t.classList.add(qi);
                        },
                        t,
                        t.classList.contains(Ki)
                    );
                }
                _deactivate(t, e) {
                    if (!t) return;
                    t.classList.remove(Vi), t.blur(), this._deactivate(l(t));
                    this._queueCallback(
                        () => {
                            "tab" === t.getAttribute("role")
                                ? (t.setAttribute("aria-selected", !1),
                                  t.setAttribute("tabindex", "-1"),
                                  this._toggleDropDown(t, !1),
                                  D.trigger(t, "hidden.bs.tab", {
                                      relatedTarget: e,
                                  }),
                                  D.trigger(t, zi, { relatedTarget: e }))
                                : t.classList.remove(qi);
                        },
                        t,
                        t.classList.contains(Ki)
                    );
                }
            },
            Tooltip: class extends Qn {
                constructor(t, e) {
                    super(t, e),
                        this._init(),
                        R.setDataAttribute(
                            this._element,
                            `${this.constructor.NAME}-initialized`,
                            !0
                        ),
                        Et(this.constructor);
                }
                dispose() {
                    D.off(this._element, "show.bs.tooltip"),
                        D.off(this._element, "shown.bs.tooltip"),
                        D.off(this._element, "hide.bs.tooltip"),
                        D.off(this._element, "hidden.bs.tooltip"),
                        D.off(this._element, "inserted.bs.tooltip"),
                        R.removeDataAttribute(
                            this._element,
                            `${this.constructor.NAME}-initialized`
                        ),
                        super.dispose();
                }
                static get NAME() {
                    return Ui;
                }
                _init() {
                    this._bindMdbEvents();
                }
                _bindMdbEvents() {
                    D.extend(this._element, Gi, Ui);
                }
            },
            Input: os,
            Dropdown: class extends ks {
                constructor(t, e) {
                    super(t, e),
                        (this._config = this._getConfig(e)),
                        (this._menuStyle = ""),
                        (this._popperPlacement = ""),
                        (this._mdbPopperConfig = "");
                    const n = window.matchMedia(
                        "(prefers-reduced-motion: reduce)"
                    ).matches;
                    "on" !== this._config.dropdownAnimation ||
                        n ||
                        this._init(),
                        R.setDataAttribute(
                            this._element,
                            `${this.constructor.NAME}-initialized`,
                            !0
                        ),
                        Et(this.constructor);
                }
                dispose() {
                    D.off(this._element, Ns),
                        D.off(this._parent, $s),
                        D.off(this._parent, Ms),
                        D.off(this._parent, Ds),
                        R.removeDataAttribute(
                            this._element,
                            `${this.constructor.NAME}-initialized`
                        ),
                        super.dispose();
                }
                static get NAME() {
                    return xs;
                }
                _init() {
                    this._bindShowEvent(),
                        this._bindShownEvent(),
                        this._bindHideEvent(),
                        this._bindHiddenEvent();
                }
                _getConfig(t) {
                    const e = {
                        ...Os,
                        ...R.getDataAttributes(this._element),
                        ...t,
                    };
                    return u(xs, e, Ls), e;
                }
                _getOffset() {
                    const { offset: t } = this._config;
                    return "string" == typeof t
                        ? t.split(",").map((t) => Number.parseInt(t, 10))
                        : "function" == typeof t
                        ? (e) => t(e, this._element)
                        : t;
                }
                _getPopperConfig() {
                    const t = {
                        placement: this._getPlacement(),
                        modifiers: [
                            {
                                name: "preventOverflow",
                                options: {
                                    altBoundary: this._config.flip,
                                    boundary: this._config.boundary,
                                },
                            },
                            {
                                name: "offset",
                                options: { offset: this._getOffset() },
                            },
                        ],
                    };
                    return (
                        "static" === this._config.display &&
                            (R.setDataAttribute(this._menu, "popper", "static"),
                            (t.modifiers = [
                                { name: "applyStyles", enabled: !1 },
                            ])),
                        {
                            ...t,
                            ...("function" == typeof this._config.popperConfig
                                ? this._config.popperConfig(t)
                                : this._config.popperConfig),
                        }
                    );
                }
                _bindShowEvent() {
                    D.on(this._element, Ns, (t) => {
                        D.trigger(this._element, Is, {
                            relatedTarget: t.relatedTarget,
                        }).defaultPrevented
                            ? t.preventDefault()
                            : this._dropdownAnimationStart("show");
                    });
                }
                _bindShownEvent() {
                    D.on(this._parent, $s, (t) => {
                        D.trigger(this._parent, js, {
                            relatedTarget: t.relatedTarget,
                        }).defaultPrevented && t.preventDefault();
                    });
                }
                _bindHideEvent() {
                    D.on(this._parent, Ms, (t) => {
                        D.trigger(this._parent, Rs, {
                            relatedTarget: t.relatedTarget,
                        }).defaultPrevented
                            ? t.preventDefault()
                            : ((this._menuStyle = this._menu.style.cssText),
                              (this._popperPlacement = this._menu.getAttribute(
                                  "data-popper-placement"
                              )),
                              (this._mdbPopperConfig =
                                  this._menu.getAttribute("data-mdb-popper")));
                    });
                }
                _bindHiddenEvent() {
                    D.on(this._parent, Ds, (t) => {
                        D.trigger(this._parent, Ps, {
                            relatedTarget: t.relatedTarget,
                        }).defaultPrevented
                            ? t.preventDefault()
                            : ("static" !== this._config.display &&
                                  "" !== this._menuStyle &&
                                  (this._menu.style.cssText = this._menuStyle),
                              this._menu.setAttribute(
                                  "data-popper-placement",
                                  this._popperPlacement
                              ),
                              this._menu.setAttribute(
                                  "data-mdb-popper",
                                  this._mdbPopperConfig
                              ),
                              this._dropdownAnimationStart("hide"));
                    });
                }
                _dropdownAnimationStart(t) {
                    if ("show" === t)
                        this._menu.classList.add(Ws, Bs),
                            this._menu.classList.remove(Hs);
                    else
                        this._menu.classList.add(Ws, Hs),
                            this._menu.classList.remove(Bs);
                    this._bindAnimationEnd();
                }
                _bindAnimationEnd() {
                    D.one(this._menu, "animationend", () => {
                        this._menu.classList.remove(Ws, Hs, Bs);
                    });
                }
            },
            Animate: zs,
            Modal: Ho,
            Sidenav: Ir,
            Alert: Ur,
            Toast: ba,
            Select: Ga,
            PerfectScrollbar: kl,
            initMDB: Dl,
        };
    return Dl(Nl), Nl;
});
