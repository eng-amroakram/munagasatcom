!(function (t, e) {
    "object" == typeof exports && "undefined" != typeof module
        ? (module.exports = e())
        : "function" == typeof define && define.amd
        ? define(e)
        : ((t = "undefined" != typeof globalThis ? globalThis : t || self).mdb =
              e());
})(this, function () {
    "use strict";
    var t,
        e = Object.defineProperty,
        n = (t, n, i) => (
            ((t, n, i) => {
                n in t
                    ? e(t, n, {
                          enumerable: !0,
                          configurable: !0,
                          writable: !0,
                          value: i,
                      })
                    : (t[n] = i);
            })(t, "symbol" != typeof n ? n + "" : n, i),
            i
        );
    globalThis,
        (t = function (t) {
            return (function (t) {
                function e(i) {
                    if (n[i]) return n[i].exports;
                    var s = (n[i] = { i: i, l: !1, exports: {} });
                    return (
                        t[i].call(s.exports, s, s.exports, e),
                        (s.l = !0),
                        s.exports
                    );
                }
                var n = {};
                return (
                    (e.m = t),
                    (e.c = n),
                    (e.i = function (t) {
                        return t;
                    }),
                    (e.d = function (t, n, i) {
                        e.o(t, n) ||
                            Object.defineProperty(t, n, {
                                configurable: !1,
                                enumerable: !0,
                                get: i,
                            });
                    }),
                    (e.n = function (t) {
                        var n =
                            t && t.__esModule
                                ? function () {
                                      return t.default;
                                  }
                                : function () {
                                      return t;
                                  };
                        return e.d(n, "a", n), n;
                    }),
                    (e.o = function (t, e) {
                        return Object.prototype.hasOwnProperty.call(t, e);
                    }),
                    (e.p = ""),
                    e((e.s = 3))
                );
            })([
                function (t, e, n) {
                    var i, s, o;
                    (s = [t, n(7)]),
                        (i = function (t, e) {
                            function n(t, e) {
                                if (!(t instanceof e))
                                    throw new TypeError(
                                        "Cannot call a class as a function"
                                    );
                            }
                            var i,
                                s =
                                    (i = e) && i.__esModule
                                        ? i
                                        : { default: i },
                                o =
                                    "function" == typeof Symbol &&
                                    "symbol" == typeof Symbol.iterator
                                        ? function (t) {
                                              return typeof t;
                                          }
                                        : function (t) {
                                              return t &&
                                                  "function" == typeof Symbol &&
                                                  t.constructor === Symbol &&
                                                  t !== Symbol.prototype
                                                  ? "symbol"
                                                  : typeof t;
                                          },
                                r = (function () {
                                    function t(t, e) {
                                        for (var n = 0; n < e.length; n++) {
                                            var i = e[n];
                                            (i.enumerable = i.enumerable || !1),
                                                (i.configurable = !0),
                                                "value" in i &&
                                                    (i.writable = !0),
                                                Object.defineProperty(
                                                    t,
                                                    i.key,
                                                    i
                                                );
                                        }
                                    }
                                    return function (e, n, i) {
                                        return (
                                            n && t(e.prototype, n),
                                            i && t(e, i),
                                            e
                                        );
                                    };
                                })(),
                                a = (function () {
                                    function t(e) {
                                        n(this, t),
                                            this.resolveOptions(e),
                                            this.initSelection();
                                    }
                                    return (
                                        r(t, [
                                            {
                                                key: "resolveOptions",
                                                value: function () {
                                                    var t =
                                                        arguments.length > 0 &&
                                                        void 0 !== arguments[0]
                                                            ? arguments[0]
                                                            : {};
                                                    (this.action = t.action),
                                                        (this.container =
                                                            t.container),
                                                        (this.emitter =
                                                            t.emitter),
                                                        (this.target =
                                                            t.target),
                                                        (this.text = t.text),
                                                        (this.trigger =
                                                            t.trigger),
                                                        (this.selectedText =
                                                            "");
                                                },
                                            },
                                            {
                                                key: "initSelection",
                                                value: function () {
                                                    this.text
                                                        ? this.selectFake()
                                                        : this.target &&
                                                          this.selectTarget();
                                                },
                                            },
                                            {
                                                key: "selectFake",
                                                value: function () {
                                                    var t = this,
                                                        e =
                                                            "rtl" ==
                                                            document.documentElement.getAttribute(
                                                                "dir"
                                                            );
                                                    this.removeFake(),
                                                        (this.fakeHandlerCallback =
                                                            function () {
                                                                return t.removeFake();
                                                            }),
                                                        (this.fakeHandler =
                                                            this.container.addEventListener(
                                                                "click",
                                                                this
                                                                    .fakeHandlerCallback
                                                            ) || !0),
                                                        (this.fakeElem =
                                                            document.createElement(
                                                                "textarea"
                                                            )),
                                                        (this.fakeElem.style.fontSize =
                                                            "12pt"),
                                                        (this.fakeElem.style.border =
                                                            "0"),
                                                        (this.fakeElem.style.padding =
                                                            "0"),
                                                        (this.fakeElem.style.margin =
                                                            "0"),
                                                        (this.fakeElem.style.position =
                                                            "absolute"),
                                                        (this.fakeElem.style[
                                                            e ? "right" : "left"
                                                        ] = "-9999px");
                                                    var n =
                                                        window.pageYOffset ||
                                                        document.documentElement
                                                            .scrollTop;
                                                    (this.fakeElem.style.top =
                                                        n + "px"),
                                                        this.fakeElem.setAttribute(
                                                            "readonly",
                                                            ""
                                                        ),
                                                        (this.fakeElem.value =
                                                            this.text),
                                                        this.container.appendChild(
                                                            this.fakeElem
                                                        ),
                                                        (this.selectedText = (0,
                                                        s.default)(
                                                            this.fakeElem
                                                        )),
                                                        this.copyText();
                                                },
                                            },
                                            {
                                                key: "removeFake",
                                                value: function () {
                                                    this.fakeHandler &&
                                                        (this.container.removeEventListener(
                                                            "click",
                                                            this
                                                                .fakeHandlerCallback
                                                        ),
                                                        (this.fakeHandler =
                                                            null),
                                                        (this.fakeHandlerCallback =
                                                            null)),
                                                        this.fakeElem &&
                                                            (this.container.removeChild(
                                                                this.fakeElem
                                                            ),
                                                            (this.fakeElem =
                                                                null));
                                                },
                                            },
                                            {
                                                key: "selectTarget",
                                                value: function () {
                                                    (this.selectedText = (0,
                                                    s.default)(this.target)),
                                                        this.copyText();
                                                },
                                            },
                                            {
                                                key: "copyText",
                                                value: function () {
                                                    var t = void 0;
                                                    try {
                                                        t =
                                                            document.execCommand(
                                                                this.action
                                                            );
                                                    } catch (e) {
                                                        t = !1;
                                                    }
                                                    this.handleResult(t);
                                                },
                                            },
                                            {
                                                key: "handleResult",
                                                value: function (t) {
                                                    this.emitter.emit(
                                                        t ? "success" : "error",
                                                        {
                                                            action: this.action,
                                                            text: this
                                                                .selectedText,
                                                            trigger:
                                                                this.trigger,
                                                            clearSelection:
                                                                this.clearSelection.bind(
                                                                    this
                                                                ),
                                                        }
                                                    );
                                                },
                                            },
                                            {
                                                key: "clearSelection",
                                                value: function () {
                                                    this.trigger &&
                                                        this.trigger.focus(),
                                                        window
                                                            .getSelection()
                                                            .removeAllRanges();
                                                },
                                            },
                                            {
                                                key: "destroy",
                                                value: function () {
                                                    this.removeFake();
                                                },
                                            },
                                            {
                                                key: "action",
                                                set: function () {
                                                    var t =
                                                        arguments.length > 0 &&
                                                        void 0 !== arguments[0]
                                                            ? arguments[0]
                                                            : "copy";
                                                    if (
                                                        ((this._action = t),
                                                        "copy" !==
                                                            this._action &&
                                                            "cut" !==
                                                                this._action)
                                                    )
                                                        throw new Error(
                                                            'Invalid "action" value, use either "copy" or "cut"'
                                                        );
                                                },
                                                get: function () {
                                                    return this._action;
                                                },
                                            },
                                            {
                                                key: "target",
                                                set: function (t) {
                                                    if (void 0 !== t) {
                                                        if (
                                                            !t ||
                                                            "object" !==
                                                                (void 0 === t
                                                                    ? "undefined"
                                                                    : o(t)) ||
                                                            1 !== t.nodeType
                                                        )
                                                            throw new Error(
                                                                'Invalid "target" value, use a valid Element'
                                                            );
                                                        if (
                                                            "copy" ===
                                                                this.action &&
                                                            t.hasAttribute(
                                                                "disabled"
                                                            )
                                                        )
                                                            throw new Error(
                                                                'Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute'
                                                            );
                                                        if (
                                                            "cut" ===
                                                                this.action &&
                                                            (t.hasAttribute(
                                                                "readonly"
                                                            ) ||
                                                                t.hasAttribute(
                                                                    "disabled"
                                                                ))
                                                        )
                                                            throw new Error(
                                                                'Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes'
                                                            );
                                                        this._target = t;
                                                    }
                                                },
                                                get: function () {
                                                    return this._target;
                                                },
                                            },
                                        ]),
                                        t
                                    );
                                })();
                            t.exports = a;
                        }),
                        void 0 !==
                            (o = "function" == typeof i ? i.apply(e, s) : i) &&
                            (t.exports = o);
                },
                function (t, e, n) {
                    var i = n(6),
                        s = n(5);
                    t.exports = function (t, e, n) {
                        if (!t && !e && !n)
                            throw new Error("Missing required arguments");
                        if (!i.string(e))
                            throw new TypeError(
                                "Second argument must be a String"
                            );
                        if (!i.fn(n))
                            throw new TypeError(
                                "Third argument must be a Function"
                            );
                        if (i.node(t))
                            return (function (t, e, n) {
                                return (
                                    t.addEventListener(e, n),
                                    {
                                        destroy: function () {
                                            t.removeEventListener(e, n);
                                        },
                                    }
                                );
                            })(t, e, n);
                        if (i.nodeList(t))
                            return (function (t, e, n) {
                                return (
                                    Array.prototype.forEach.call(
                                        t,
                                        function (t) {
                                            t.addEventListener(e, n);
                                        }
                                    ),
                                    {
                                        destroy: function () {
                                            Array.prototype.forEach.call(
                                                t,
                                                function (t) {
                                                    t.removeEventListener(e, n);
                                                }
                                            );
                                        },
                                    }
                                );
                            })(t, e, n);
                        if (i.string(t))
                            return (function (t, e, n) {
                                return s(document.body, t, e, n);
                            })(t, e, n);
                        throw new TypeError(
                            "First argument must be a String, HTMLElement, HTMLCollection, or NodeList"
                        );
                    };
                },
                function (t, e) {
                    function n() {}
                    (n.prototype = {
                        on: function (t, e, n) {
                            var i = this.e || (this.e = {});
                            return (
                                (i[t] || (i[t] = [])).push({ fn: e, ctx: n }),
                                this
                            );
                        },
                        once: function (t, e, n) {
                            function i() {
                                s.off(t, i), e.apply(n, arguments);
                            }
                            var s = this;
                            return (i._ = e), this.on(t, i, n);
                        },
                        emit: function (t) {
                            for (
                                var e = [].slice.call(arguments, 1),
                                    n = (
                                        (this.e || (this.e = {}))[t] || []
                                    ).slice(),
                                    i = 0,
                                    s = n.length;
                                i < s;
                                i++
                            )
                                n[i].fn.apply(n[i].ctx, e);
                            return this;
                        },
                        off: function (t, e) {
                            var n = this.e || (this.e = {}),
                                i = n[t],
                                s = [];
                            if (i && e)
                                for (var o = 0, r = i.length; o < r; o++)
                                    i[o].fn !== e &&
                                        i[o].fn._ !== e &&
                                        s.push(i[o]);
                            return s.length ? (n[t] = s) : delete n[t], this;
                        },
                    }),
                        (t.exports = n);
                },
                function (t, e, n) {
                    var i, s, o;
                    (s = [t, n(0), n(2), n(1)]),
                        (i = function (t, e, n, i) {
                            function s(t) {
                                return t && t.__esModule ? t : { default: t };
                            }
                            function o(t, e) {
                                if (!(t instanceof e))
                                    throw new TypeError(
                                        "Cannot call a class as a function"
                                    );
                            }
                            function r(t, e) {
                                if (!t)
                                    throw new ReferenceError(
                                        "this hasn't been initialised - super() hasn't been called"
                                    );
                                return !e ||
                                    ("object" != typeof e &&
                                        "function" != typeof e)
                                    ? t
                                    : e;
                            }
                            function a(t, e) {
                                if ("function" != typeof e && null !== e)
                                    throw new TypeError(
                                        "Super expression must either be null or a function, not " +
                                            typeof e
                                    );
                                (t.prototype = Object.create(e && e.prototype, {
                                    constructor: {
                                        value: t,
                                        enumerable: !1,
                                        writable: !0,
                                        configurable: !0,
                                    },
                                })),
                                    e &&
                                        (Object.setPrototypeOf
                                            ? Object.setPrototypeOf(t, e)
                                            : (t.__proto__ = e));
                            }
                            function l(t, e) {
                                var n = "data-clipboard-" + t;
                                if (e.hasAttribute(n)) return e.getAttribute(n);
                            }
                            var c = s(e),
                                d = s(n),
                                u = s(i),
                                h =
                                    "function" == typeof Symbol &&
                                    "symbol" == typeof Symbol.iterator
                                        ? function (t) {
                                              return typeof t;
                                          }
                                        : function (t) {
                                              return t &&
                                                  "function" == typeof Symbol &&
                                                  t.constructor === Symbol &&
                                                  t !== Symbol.prototype
                                                  ? "symbol"
                                                  : typeof t;
                                          },
                                p = (function () {
                                    function t(t, e) {
                                        for (var n = 0; n < e.length; n++) {
                                            var i = e[n];
                                            (i.enumerable = i.enumerable || !1),
                                                (i.configurable = !0),
                                                "value" in i &&
                                                    (i.writable = !0),
                                                Object.defineProperty(
                                                    t,
                                                    i.key,
                                                    i
                                                );
                                        }
                                    }
                                    return function (e, n, i) {
                                        return (
                                            n && t(e.prototype, n),
                                            i && t(e, i),
                                            e
                                        );
                                    };
                                })(),
                                f = (function (t) {
                                    function e(t, n) {
                                        o(this, e);
                                        var i = r(
                                            this,
                                            (
                                                e.__proto__ ||
                                                Object.getPrototypeOf(e)
                                            ).call(this)
                                        );
                                        return (
                                            i.resolveOptions(n),
                                            i.listenClick(t),
                                            i
                                        );
                                    }
                                    return (
                                        a(e, t),
                                        p(
                                            e,
                                            [
                                                {
                                                    key: "resolveOptions",
                                                    value: function () {
                                                        var t =
                                                            arguments.length >
                                                                0 &&
                                                            void 0 !==
                                                                arguments[0]
                                                                ? arguments[0]
                                                                : {};
                                                        (this.action =
                                                            "function" ==
                                                            typeof t.action
                                                                ? t.action
                                                                : this
                                                                      .defaultAction),
                                                            (this.target =
                                                                "function" ==
                                                                typeof t.target
                                                                    ? t.target
                                                                    : this
                                                                          .defaultTarget),
                                                            (this.text =
                                                                "function" ==
                                                                typeof t.text
                                                                    ? t.text
                                                                    : this
                                                                          .defaultText),
                                                            (this.container =
                                                                "object" ===
                                                                h(t.container)
                                                                    ? t.container
                                                                    : document.body);
                                                    },
                                                },
                                                {
                                                    key: "listenClick",
                                                    value: function (t) {
                                                        var e = this;
                                                        this.listener = (0,
                                                        u.default)(
                                                            t,
                                                            "click",
                                                            function (t) {
                                                                return e.onClick(
                                                                    t
                                                                );
                                                            }
                                                        );
                                                    },
                                                },
                                                {
                                                    key: "onClick",
                                                    value: function (t) {
                                                        var e =
                                                            t.delegateTarget ||
                                                            t.currentTarget;
                                                        this.clipboardAction &&
                                                            (this.clipboardAction =
                                                                null),
                                                            (this.clipboardAction =
                                                                new c.default({
                                                                    action: this.action(
                                                                        e
                                                                    ),
                                                                    target: this.target(
                                                                        e
                                                                    ),
                                                                    text: this.text(
                                                                        e
                                                                    ),
                                                                    container:
                                                                        this
                                                                            .container,
                                                                    trigger: e,
                                                                    emitter:
                                                                        this,
                                                                }));
                                                    },
                                                },
                                                {
                                                    key: "defaultAction",
                                                    value: function (t) {
                                                        return l("action", t);
                                                    },
                                                },
                                                {
                                                    key: "defaultTarget",
                                                    value: function (t) {
                                                        var e = l("target", t);
                                                        if (e)
                                                            return document.querySelector(
                                                                e
                                                            );
                                                    },
                                                },
                                                {
                                                    key: "defaultText",
                                                    value: function (t) {
                                                        return l("text", t);
                                                    },
                                                },
                                                {
                                                    key: "destroy",
                                                    value: function () {
                                                        this.listener.destroy(),
                                                            this
                                                                .clipboardAction &&
                                                                (this.clipboardAction.destroy(),
                                                                (this.clipboardAction =
                                                                    null));
                                                    },
                                                },
                                            ],
                                            [
                                                {
                                                    key: "isSupported",
                                                    value: function () {
                                                        var t =
                                                                arguments.length >
                                                                    0 &&
                                                                void 0 !==
                                                                    arguments[0]
                                                                    ? arguments[0]
                                                                    : [
                                                                          "copy",
                                                                          "cut",
                                                                      ],
                                                            e =
                                                                "string" ==
                                                                typeof t
                                                                    ? [t]
                                                                    : t,
                                                            n =
                                                                !!document.queryCommandSupported;
                                                        return (
                                                            e.forEach(function (
                                                                t
                                                            ) {
                                                                n =
                                                                    n &&
                                                                    !!document.queryCommandSupported(
                                                                        t
                                                                    );
                                                            }),
                                                            n
                                                        );
                                                    },
                                                },
                                            ]
                                        ),
                                        e
                                    );
                                })(d.default);
                            t.exports = f;
                        }),
                        void 0 !==
                            (o = "function" == typeof i ? i.apply(e, s) : i) &&
                            (t.exports = o);
                },
                function (t, e) {
                    var n = 9;
                    if (
                        "undefined" != typeof Element &&
                        !Element.prototype.matches
                    ) {
                        var i = Element.prototype;
                        i.matches =
                            i.matchesSelector ||
                            i.mozMatchesSelector ||
                            i.msMatchesSelector ||
                            i.oMatchesSelector ||
                            i.webkitMatchesSelector;
                    }
                    t.exports = function (t, e) {
                        for (; t && t.nodeType !== n; ) {
                            if ("function" == typeof t.matches && t.matches(e))
                                return t;
                            t = t.parentNode;
                        }
                    };
                },
                function (t, e, n) {
                    function i(t, e, n, i, o) {
                        var r = s.apply(this, arguments);
                        return (
                            t.addEventListener(n, r, o),
                            {
                                destroy: function () {
                                    t.removeEventListener(n, r, o);
                                },
                            }
                        );
                    }
                    function s(t, e, n, i) {
                        return function (n) {
                            (n.delegateTarget = o(n.target, e)),
                                n.delegateTarget && i.call(t, n);
                        };
                    }
                    var o = n(4);
                    t.exports = function (t, e, n, s, o) {
                        return "function" == typeof t.addEventListener
                            ? i.apply(null, arguments)
                            : "function" == typeof n
                            ? i.bind(null, document).apply(null, arguments)
                            : ("string" == typeof t &&
                                  (t = document.querySelectorAll(t)),
                              Array.prototype.map.call(t, function (t) {
                                  return i(t, e, n, s, o);
                              }));
                    };
                },
                function (t, e) {
                    (e.node = function (t) {
                        return (
                            void 0 !== t &&
                            t instanceof HTMLElement &&
                            1 === t.nodeType
                        );
                    }),
                        (e.nodeList = function (t) {
                            var n = Object.prototype.toString.call(t);
                            return (
                                void 0 !== t &&
                                ("[object NodeList]" === n ||
                                    "[object HTMLCollection]" === n) &&
                                "length" in t &&
                                (0 === t.length || e.node(t[0]))
                            );
                        }),
                        (e.string = function (t) {
                            return "string" == typeof t || t instanceof String;
                        }),
                        (e.fn = function (t) {
                            return (
                                "[object Function]" ===
                                Object.prototype.toString.call(t)
                            );
                        });
                },
                function (t, e) {
                    t.exports = function (t) {
                        var e;
                        if ("SELECT" === t.nodeName) t.focus(), (e = t.value);
                        else if (
                            "INPUT" === t.nodeName ||
                            "TEXTAREA" === t.nodeName
                        ) {
                            var n = t.hasAttribute("readonly");
                            n || t.setAttribute("readonly", ""),
                                t.select(),
                                t.setSelectionRange(0, t.value.length),
                                n || t.removeAttribute("readonly"),
                                (e = t.value);
                        } else {
                            t.hasAttribute("contenteditable") && t.focus();
                            var i = window.getSelection(),
                                s = document.createRange();
                            s.selectNodeContents(t),
                                i.removeAllRanges(),
                                i.addRange(s),
                                (e = i.toString());
                        }
                        return e;
                    };
                },
            ]);
        }),
        "object" == typeof exports && "object" == typeof module
            ? (module.exports = t())
            : "function" == typeof define && define.amd
            ? define([], t)
            : "object" == typeof exports
            ? (exports.ClipboardJS = t())
            : (window.ClipboardJS = t()),
        (function (t) {
            var e = {};
            function n(i) {
                var s;
                return (
                    e[i] ||
                    ((s = e[i] = { i: i, l: !1, exports: {} }),
                    t[i].call(s.exports, s, s.exports, n),
                    (s.l = !0),
                    s)
                ).exports;
            }
            (n.m = t),
                (n.c = e),
                (n.d = function (t, e, i) {
                    n.o(t, e) ||
                        Object.defineProperty(t, e, { enumerable: !0, get: i });
                }),
                (n.r = function (t) {
                    "undefined" != typeof Symbol &&
                        Symbol.toStringTag &&
                        Object.defineProperty(t, Symbol.toStringTag, {
                            value: "Module",
                        }),
                        Object.defineProperty(t, "__esModule", { value: !0 });
                }),
                (n.t = function (t, e) {
                    if ((1 & e && (t = n(t)), 8 & e)) return t;
                    if (4 & e && "object" == typeof t && t && t.__esModule)
                        return t;
                    var i = Object.create(null);
                    if (
                        (n.r(i),
                        Object.defineProperty(i, "default", {
                            enumerable: !0,
                            value: t,
                        }),
                        2 & e && "string" != typeof t)
                    )
                        for (var s in t)
                            n.d(
                                i,
                                s,
                                function (e) {
                                    return t[e];
                                }.bind(null, s)
                            );
                    return i;
                }),
                (n.n = function (t) {
                    var e =
                        t && t.__esModule
                            ? function () {
                                  return t.default;
                              }
                            : function () {
                                  return t;
                              };
                    return n.d(e, "a", e), e;
                }),
                (n.o = function (t, e) {
                    return Object.prototype.hasOwnProperty.call(t, e);
                }),
                (n.p = ""),
                n((n.s = 68));
        })([
            function (t, e) {
                t.exports = function (t) {
                    try {
                        return !!t();
                    } catch (e) {
                        return !0;
                    }
                };
            },
            function (t, e, n) {
                n = n(21);
                var i = (s = Function.prototype).call,
                    s = n && s.bind.bind(i, i);
                t.exports = n
                    ? s
                    : function (t) {
                          return function () {
                              return i.apply(t, arguments);
                          };
                      };
            },
            function (t, e, n) {
                var i = (n = n(39)).all;
                t.exports = n.IS_HTMLDDA
                    ? function (t) {
                          return "function" == typeof t || t === i;
                      }
                    : function (t) {
                          return "function" == typeof t;
                      };
            },
            function (t, e, n) {
                (function (e) {
                    function n(t) {
                        return t && t.Math == Math && t;
                    }
                    t.exports =
                        n("object" == typeof globalThis && globalThis) ||
                        n("object" == typeof window && window) ||
                        n("object" == typeof self && self) ||
                        n("object" == typeof e && e) ||
                        (function () {
                            return this;
                        })() ||
                        Function("return this")();
                }).call(this, n(36));
            },
            function (t, e, n) {
                (n = n(0)),
                    (t.exports = !n(function () {
                        return (
                            7 !=
                            Object.defineProperty({}, 1, {
                                get: function () {
                                    return 7;
                                },
                            })[1]
                        );
                    }));
            },
            function (t, e, n) {
                var i = n(1),
                    s = n(29),
                    o = i({}.hasOwnProperty);
                t.exports =
                    Object.hasOwn ||
                    function (t, e) {
                        return o(s(t), e);
                    };
            },
            function (t, e, n) {
                var i = n(3),
                    s = n(26),
                    o = n(5),
                    r = n(47),
                    a = n(42),
                    l = n(41),
                    c = s("wks"),
                    d = i.Symbol,
                    u = d && d.for,
                    h = l ? d : (d && d.withoutSetter) || r;
                t.exports = function (t) {
                    var e;
                    return (
                        (o(c, t) && (a || "string" == typeof c[t])) ||
                            ((e = "Symbol." + t),
                            a && o(d, t)
                                ? (c[t] = d[t])
                                : (c[t] = (l && u ? u : h)(e))),
                        c[t]
                    );
                };
            },
            function (t, e, n) {
                var i = n(9),
                    s = String,
                    o = TypeError;
                t.exports = function (t) {
                    if (i(t)) return t;
                    throw o(s(t) + " is not an object");
                };
            },
            function (t, e, n) {
                n = n(21);
                var i = Function.prototype.call;
                t.exports = n
                    ? i.bind(i)
                    : function () {
                          return i.apply(i, arguments);
                      };
            },
            function (t, e, n) {
                var i = n(2),
                    s = (n = n(39)).all;
                t.exports = n.IS_HTMLDDA
                    ? function (t) {
                          return "object" == typeof t
                              ? null !== t
                              : i(t) || t === s;
                      }
                    : function (t) {
                          return "object" == typeof t ? null !== t : i(t);
                      };
            },
            function (t, e, n) {
                var i = n(4),
                    s = n(48),
                    o = n(50),
                    r = n(7),
                    a = n(24),
                    l = TypeError,
                    c = Object.defineProperty,
                    d = Object.getOwnPropertyDescriptor,
                    u = "enumerable",
                    h = "configurable",
                    p = "writable";
                e.f = i
                    ? o
                        ? function (t, e, n) {
                              var i;
                              return (
                                  r(t),
                                  (e = a(e)),
                                  r(n),
                                  "function" == typeof t &&
                                      "prototype" === e &&
                                      "value" in n &&
                                      p in n &&
                                      !n[p] &&
                                      (i = d(t, e)) &&
                                      i[p] &&
                                      ((t[e] = n.value),
                                      (n = {
                                          configurable: (h in n ? n : i)[h],
                                          enumerable: (u in n ? n : i)[u],
                                          writable: !1,
                                      })),
                                  c(t, e, n)
                              );
                          }
                        : c
                    : function (t, e, n) {
                          if ((r(t), (e = a(e)), r(n), s))
                              try {
                                  return c(t, e, n);
                              } catch (i) {}
                          if ("get" in n || "set" in n)
                              throw l("Accessors not supported");
                          return "value" in n && (t[e] = n.value), t;
                      };
            },
            function (t, e, n) {
                var i = n(83),
                    s = String;
                t.exports = function (t) {
                    if ("Symbol" === i(t))
                        throw TypeError(
                            "Cannot convert a Symbol value to a string"
                        );
                    return s(t);
                };
            },
            function (t, e, n) {
                var i = (n = n(1))({}.toString),
                    s = n("".slice);
                t.exports = function (t) {
                    return s(i(t), 8, -1);
                };
            },
            function (t, e, n) {
                var i = n(23),
                    s = TypeError;
                t.exports = function (t) {
                    if (i(t)) throw s("Can't call method on " + t);
                    return t;
                };
            },
            function (t, e, n) {
                var i = n(3),
                    s = n(2);
                t.exports = function (t, e) {
                    return arguments.length < 2
                        ? ((n = i[t]), s(n) ? n : void 0)
                        : i[t] && i[t][e];
                    var n;
                };
            },
            function (t, e, n) {
                var i = n(71),
                    s = n(13);
                t.exports = function (t) {
                    return i(s(t));
                };
            },
            function (t, e, n) {
                (n = n(14)), (t.exports = n("navigator", "userAgent") || "");
            },
            function (t, e, n) {
                var i = n(4),
                    s = n(10),
                    o = n(22);
                t.exports = i
                    ? function (t, e, n) {
                          return s.f(t, e, o(1, n));
                      }
                    : function (t, e, n) {
                          return (t[e] = n), t;
                      };
            },
            function (t, e, n) {
                var i = n(81);
                t.exports = function (t) {
                    return (t = +t) != t || 0 == t ? 0 : i(t);
                };
            },
            ,
            function (t, e, n) {
                var i = n(3),
                    s = n(38).f,
                    o = n(17),
                    r = n(30),
                    a = n(28),
                    l = n(78),
                    c = n(57);
                t.exports = function (t, e) {
                    var n,
                        d,
                        u,
                        h = t.target,
                        p = t.global,
                        f = t.stat,
                        g = p
                            ? i
                            : f
                            ? i[h] || a(h, {})
                            : (i[h] || {}).prototype;
                    if (g)
                        for (n in e) {
                            if (
                                ((d = e[n]),
                                (u = t.dontCallGetSet
                                    ? (u = s(g, n)) && u.value
                                    : g[n]),
                                !c(p ? n : h + (f ? "." : "#") + n, t.forced) &&
                                    void 0 !== u)
                            ) {
                                if (typeof d == typeof u) continue;
                                l(d, u);
                            }
                            (t.sham || (u && u.sham)) && o(d, "sham", !0),
                                r(g, n, d, t);
                        }
                };
            },
            function (t, e, n) {
                (n = n(0)),
                    (t.exports = !n(function () {
                        var t = function () {}.bind();
                        return (
                            "function" != typeof t ||
                            t.hasOwnProperty("prototype")
                        );
                    }));
            },
            function (t, e) {
                t.exports = function (t, e) {
                    return {
                        enumerable: !(1 & t),
                        configurable: !(2 & t),
                        writable: !(4 & t),
                        value: e,
                    };
                };
            },
            function (t, e) {
                t.exports = function (t) {
                    return null == t;
                };
            },
            function (t, e, n) {
                var i = n(72),
                    s = n(40);
                t.exports = function (t) {
                    return (t = i(t, "string")), s(t) ? t : t + "";
                };
            },
            function (t, e, n) {
                (n = n(1)), (t.exports = n({}.isPrototypeOf));
            },
            function (t, e, n) {
                var i = n(74),
                    s = n(27);
                (t.exports = function (t, e) {
                    return s[t] || (s[t] = void 0 !== e ? e : {});
                })("versions", []).push({
                    version: "3.26.1",
                    mode: i ? "pure" : "global",
                    copyright: "Â© 2014-2022 Denis Pushkarev (zloirock.ru)",
                    license:
                        "https://github.com/zloirock/core-js/blob/v3.26.1/LICENSE",
                    source: "https://github.com/zloirock/core-js",
                });
            },
            function (t, e, n) {
                var i = n(3),
                    s = ((n = n(28)), "__core-js_shared__");
                i = i[s] || n(s, {});
                t.exports = i;
            },
            function (t, e, n) {
                var i = n(3),
                    s = Object.defineProperty;
                t.exports = function (t, e) {
                    try {
                        s(i, t, { value: e, configurable: !0, writable: !0 });
                    } catch (n) {
                        i[t] = e;
                    }
                    return e;
                };
            },
            function (t, e, n) {
                var i = n(13),
                    s = Object;
                t.exports = function (t) {
                    return s(i(t));
                };
            },
            function (t, e, n) {
                var i = n(2),
                    s = n(10),
                    o = n(75),
                    r = n(28);
                t.exports = function (t, e, n, a) {
                    var l = (a = a || {}).enumerable,
                        c = void 0 !== a.name ? a.name : e;
                    if ((i(n) && o(n, c, a), a.global))
                        l ? (t[e] = n) : r(e, n);
                    else {
                        try {
                            a.unsafe ? t[e] && (l = !0) : delete t[e];
                        } catch (d) {}
                        l
                            ? (t[e] = n)
                            : s.f(t, e, {
                                  value: n,
                                  enumerable: !1,
                                  configurable: !a.nonConfigurable,
                                  writable: !a.nonWritable,
                              });
                    }
                    return t;
                };
            },
            function (t, e, n) {
                var i,
                    s,
                    o,
                    r,
                    a = n(77),
                    l = n(3),
                    c = n(9),
                    d = n(17),
                    u = n(5),
                    h = n(27),
                    p = n(52),
                    f = ((n = n(32)), "Object already initialized"),
                    g = l.TypeError,
                    m =
                        ((l = l.WeakMap),
                        a || h.state
                            ? (((o = h.state || (h.state = new l())).get =
                                  o.get),
                              (o.has = o.has),
                              (o.set = o.set),
                              (i = function (t, e) {
                                  if (o.has(t)) throw g(f);
                                  return (e.facade = t), o.set(t, e), e;
                              }),
                              (s = function (t) {
                                  return o.get(t) || {};
                              }),
                              function (t) {
                                  return o.has(t);
                              })
                            : ((n[(r = p("state"))] = !0),
                              (i = function (t, e) {
                                  if (u(t, r)) throw g(f);
                                  return (e.facade = t), d(t, r, e), e;
                              }),
                              (s = function (t) {
                                  return u(t, r) ? t[r] : {};
                              }),
                              function (t) {
                                  return u(t, r);
                              }));
                t.exports = {
                    set: i,
                    get: s,
                    has: m,
                    enforce: function (t) {
                        return m(t) ? s(t) : i(t, {});
                    },
                    getterFor: function (t) {
                        return function (e) {
                            if (c(e) && (e = s(e)).type === t) return e;
                            throw g(
                                "Incompatible receiver, " + t + " required"
                            );
                        };
                    },
                };
            },
            function (t, e) {
                t.exports = {};
            },
            function (t, e, n) {
                var i = n(56);
                t.exports = function (t) {
                    return i(t.length);
                };
            },
            function (t, e) {
                t.exports = [
                    "constructor",
                    "hasOwnProperty",
                    "isPrototypeOf",
                    "propertyIsEnumerable",
                    "toLocaleString",
                    "toString",
                    "valueOf",
                ];
            },
            function (t, e, n) {
                var i = n(8),
                    s = n(1),
                    o = n(11),
                    r = n(58),
                    a = n(59),
                    l = n(26),
                    c = n(85),
                    d = n(31).get,
                    u = n(60),
                    h =
                        ((n = n(61)),
                        l("native-string-replace", String.prototype.replace)),
                    p = RegExp.prototype.exec,
                    f = p,
                    g = s("".charAt),
                    m = s("".indexOf),
                    b = s("".replace),
                    _ = s("".slice),
                    v =
                        ((l = /b*/g),
                        i(p, (s = /a/), "a"),
                        i(p, l, "a"),
                        0 !== s.lastIndex || 0 !== l.lastIndex),
                    y = a.BROKEN_CARET,
                    w = void 0 !== /()??/.exec("")[1];
                (v || w || y || u || n) &&
                    (f = function (t) {
                        var e,
                            n,
                            s,
                            a,
                            l,
                            u,
                            C = this,
                            E = d(C);
                        t = o(t);
                        if ((S = E.raw))
                            return (
                                (S.lastIndex = C.lastIndex),
                                (k = i(f, S, t)),
                                (C.lastIndex = S.lastIndex),
                                k
                            );
                        var A = E.groups,
                            S = y && C.sticky,
                            k = i(r, C),
                            x = ((E = C.source), 0),
                            T = t;
                        if (
                            (S &&
                                ((k = b(k, "y", "")),
                                -1 === m(k, "g") && (k += "g"),
                                (T = _(t, C.lastIndex)),
                                0 < C.lastIndex &&
                                    (!C.multiline ||
                                        (C.multiline &&
                                            "\n" !== g(t, C.lastIndex - 1))) &&
                                    ((E = "(?: " + E + ")"),
                                    (T = " " + T),
                                    x++),
                                (e = new RegExp("^(?:" + E + ")", k))),
                            w && (e = new RegExp("^" + E + "$(?!\\s)", k)),
                            v && (n = C.lastIndex),
                            (s = i(p, S ? e : C, T)),
                            S
                                ? s
                                    ? ((s.input = _(s.input, x)),
                                      (s[0] = _(s[0], x)),
                                      (s.index = C.lastIndex),
                                      (C.lastIndex += s[0].length))
                                    : (C.lastIndex = 0)
                                : v &&
                                  s &&
                                  (C.lastIndex = C.global
                                      ? s.index + s[0].length
                                      : n),
                            w &&
                                s &&
                                1 < s.length &&
                                i(h, s[0], e, function () {
                                    for (a = 1; a < arguments.length - 2; a++)
                                        void 0 === arguments[a] &&
                                            (s[a] = void 0);
                                }),
                            s && A)
                        )
                            for (
                                s.groups = l = c(null), a = 0;
                                a < A.length;
                                a++
                            )
                                l[(u = A[a])[0]] = s[u[1]];
                        return s;
                    }),
                    (t.exports = f);
            },
            function (t, e) {
                var n = (function () {
                    return this;
                })();
                try {
                    n = n || new Function("return this")();
                } catch (i) {
                    "object" == typeof window && (n = window);
                }
                t.exports = n;
            },
            function (t, e, n) {
                var i = n(20);
                n = n(35);
                i(
                    { target: "RegExp", proto: !0, forced: /./.exec !== n },
                    { exec: n }
                );
            },
            function (t, e, n) {
                var i = n(4),
                    s = n(8),
                    o = n(70),
                    r = n(22),
                    a = n(15),
                    l = n(24),
                    c = n(5),
                    d = n(48),
                    u = Object.getOwnPropertyDescriptor;
                e.f = i
                    ? u
                    : function (t, e) {
                          if (((t = a(t)), (e = l(e)), d))
                              try {
                                  return u(t, e);
                              } catch (n) {}
                          if (c(t, e)) return r(!s(o.f, t, e), t[e]);
                      };
            },
            function (t, e) {
                var n = "object" == typeof document && document.all;
                t.exports = {
                    all: n,
                    IS_HTMLDDA: void 0 === n && void 0 !== n,
                };
            },
            function (t, e, n) {
                var i = n(14),
                    s = n(2),
                    o = n(25),
                    r = ((n = n(41)), Object);
                t.exports = n
                    ? function (t) {
                          return "symbol" == typeof t;
                      }
                    : function (t) {
                          var e = i("Symbol");
                          return s(e) && o(e.prototype, r(t));
                      };
            },
            function (t, e, n) {
                (n = n(42)),
                    (t.exports =
                        n &&
                        !Symbol.sham &&
                        "symbol" == typeof Symbol.iterator);
            },
            function (t, e, n) {
                var i = n(43);
                n = n(0);
                t.exports =
                    !!Object.getOwnPropertySymbols &&
                    !n(function () {
                        var t = Symbol();
                        return (
                            !String(t) ||
                            !(Object(t) instanceof Symbol) ||
                            (!Symbol.sham && i && i < 41)
                        );
                    });
            },
            function (t, e, n) {
                var i,
                    s,
                    o = n(3),
                    r = ((n = n(16)), o.process);
                o = o.Deno;
                !(s = (o = (r = (r && r.versions) || (o && o.version)) && r.v8)
                    ? 0 < (i = o.split("."))[0] && i[0] < 4
                        ? 1
                        : +(i[0] + i[1])
                    : s) &&
                    n &&
                    (!(i = n.match(/Edge\/(\d+)/)) || 74 <= i[1]) &&
                    (i = n.match(/Chrome\/(\d+)/)) &&
                    (s = +i[1]),
                    (t.exports = s);
            },
            function (t, e, n) {
                var i = n(45),
                    s = n(23);
                t.exports = function (t, e) {
                    return (t = t[e]), s(t) ? void 0 : i(t);
                };
            },
            function (t, e, n) {
                var i = n(2),
                    s = n(46),
                    o = TypeError;
                t.exports = function (t) {
                    if (i(t)) return t;
                    throw o(s(t) + " is not a function");
                };
            },
            function (t, e) {
                var n = String;
                t.exports = function (t) {
                    try {
                        return n(t);
                    } catch (e) {
                        return "Object";
                    }
                };
            },
            function (t, e, n) {
                n = n(1);
                var i = 0,
                    s = Math.random(),
                    o = n((1).toString);
                t.exports = function (t) {
                    return (
                        "Symbol(" +
                        (void 0 === t ? "" : t) +
                        ")_" +
                        o(++i + s, 36)
                    );
                };
            },
            function (t, e, n) {
                var i = n(4),
                    s = n(0),
                    o = n(49);
                t.exports =
                    !i &&
                    !s(function () {
                        return (
                            7 !=
                            Object.defineProperty(o("div"), "a", {
                                get: function () {
                                    return 7;
                                },
                            }).a
                        );
                    });
            },
            function (t, e, n) {
                var i = n(3),
                    s = ((n = n(9)), i.document),
                    o = n(s) && n(s.createElement);
                t.exports = function (t) {
                    return o ? s.createElement(t) : {};
                };
            },
            function (t, e, n) {
                var i = n(4);
                n = n(0);
                t.exports =
                    i &&
                    n(function () {
                        return (
                            42 !=
                            Object.defineProperty(function () {}, "prototype", {
                                value: 42,
                                writable: !1,
                            }).prototype
                        );
                    });
            },
            function (t, e, n) {
                var i = n(4),
                    s = ((n = n(5)), Function.prototype),
                    o = i && Object.getOwnPropertyDescriptor,
                    r =
                        (n = n(s, "name")) &&
                        "something" === function () {}.name;
                i = n && (!i || o(s, "name").configurable);
                t.exports = { EXISTS: n, PROPER: r, CONFIGURABLE: i };
            },
            function (t, e, n) {
                var i = n(26),
                    s = n(47),
                    o = i("keys");
                t.exports = function (t) {
                    return o[t] || (o[t] = s(t));
                };
            },
            function (t, e, n) {
                var i = n(54),
                    s = n(34).concat("length", "prototype");
                e.f =
                    Object.getOwnPropertyNames ||
                    function (t) {
                        return i(t, s);
                    };
            },
            function (t, e, n) {
                var i = n(1),
                    s = n(5),
                    o = n(15),
                    r = n(80).indexOf,
                    a = n(32),
                    l = i([].push);
                t.exports = function (t, e) {
                    var n,
                        i = o(t),
                        c = 0,
                        d = [];
                    for (n in i) !s(a, n) && s(i, n) && l(d, n);
                    for (; e.length > c; )
                        !s(i, (n = e[c++])) || ~r(d, n) || l(d, n);
                    return d;
                };
            },
            function (t, e, n) {
                var i = n(18),
                    s = Math.max,
                    o = Math.min;
                t.exports = function (t, e) {
                    return (t = i(t)) < 0 ? s(t + e, 0) : o(t, e);
                };
            },
            function (t, e, n) {
                var i = n(18),
                    s = Math.min;
                t.exports = function (t) {
                    return 0 < t ? s(i(t), 9007199254740991) : 0;
                };
            },
            function (t, e, n) {
                function i(t, e) {
                    return (
                        (t = l[a(t)]) == d || (t != c && (o(e) ? s(e) : !!e))
                    );
                }
                var s = n(0),
                    o = n(2),
                    r = /#|\.prototype\./,
                    a = (i.normalize = function (t) {
                        return String(t).replace(r, ".").toLowerCase();
                    }),
                    l = (i.data = {}),
                    c = (i.NATIVE = "N"),
                    d = (i.POLYFILL = "P");
                t.exports = i;
            },
            function (t, e, n) {
                var i = n(7);
                t.exports = function () {
                    var t = i(this),
                        e = "";
                    return (
                        t.hasIndices && (e += "d"),
                        t.global && (e += "g"),
                        t.ignoreCase && (e += "i"),
                        t.multiline && (e += "m"),
                        t.dotAll && (e += "s"),
                        t.unicode && (e += "u"),
                        t.unicodeSets && (e += "v"),
                        t.sticky && (e += "y"),
                        e
                    );
                };
            },
            function (t, e, n) {
                var i = n(0),
                    s = n(3).RegExp,
                    o =
                        (n = i(function () {
                            var t = s("a", "y");
                            return (t.lastIndex = 2), null != t.exec("abcd");
                        })) ||
                        i(function () {
                            return !s("a", "y").sticky;
                        });
                i =
                    n ||
                    i(function () {
                        var t = s("^r", "gy");
                        return (t.lastIndex = 2), null != t.exec("str");
                    });
                t.exports = {
                    BROKEN_CARET: i,
                    MISSED_STICKY: o,
                    UNSUPPORTED_Y: n,
                };
            },
            function (t, e, n) {
                var i = n(0),
                    s = n(3).RegExp;
                t.exports = i(function () {
                    var t = s(".", "s");
                    return !(t.dotAll && t.exec("\n") && "s" === t.flags);
                });
            },
            function (t, e, n) {
                var i = n(0),
                    s = n(3).RegExp;
                t.exports = i(function () {
                    var t = s("(?<a>b)", "g");
                    return (
                        "b" !== t.exec("b").groups.a ||
                        "bc" !== "b".replace(t, "$<a>c")
                    );
                });
            },
            function (t, e) {
                t.exports =
                    "\t\n\v\f\r Â áš€â€€â€â€‚â€ƒâ€„â€…â€†â€‡â€ˆâ€‰â€Šâ€¯âŸã€€\u2028\u2029\ufeff";
            },
            ,
            ,
            ,
            ,
            ,
            function (t, e, n) {
                n.r(e),
                    function (t, e) {
                        n(37), n(89), n(97), n(105), n(108);
                        var i,
                            s,
                            o,
                            r,
                            a,
                            l,
                            c,
                            d,
                            u,
                            h,
                            p,
                            f,
                            g,
                            m,
                            b,
                            _,
                            v,
                            y,
                            w,
                            C,
                            E,
                            A,
                            S,
                            k,
                            x,
                            T,
                            O,
                            L,
                            M,
                            D,
                            N,
                            $,
                            R,
                            P,
                            I =
                                "undefined" != typeof window
                                    ? window
                                    : "undefined" != typeof WorkerGlobalScope &&
                                      self instanceof WorkerGlobalScope
                                    ? self
                                    : {},
                            j =
                                ((i = /\blang(?:uage)?-([\w-]+)\b/i),
                                (s = 0),
                                (o = I.Prism =
                                    {
                                        manual: I.Prism && I.Prism.manual,
                                        disableWorkerMessageHandler:
                                            I.Prism &&
                                            I.Prism.disableWorkerMessageHandler,
                                        util: {
                                            encode: function (t) {
                                                return t instanceof r
                                                    ? new r(
                                                          t.type,
                                                          o.util.encode(
                                                              t.content
                                                          ),
                                                          t.alias
                                                      )
                                                    : "Array" === o.util.type(t)
                                                    ? t.map(o.util.encode)
                                                    : t
                                                          .replace(
                                                              /&/g,
                                                              "&amp;"
                                                          )
                                                          .replace(/</g, "&lt;")
                                                          .replace(
                                                              /\u00a0/g,
                                                              " "
                                                          );
                                            },
                                            type: function (t) {
                                                return Object.prototype.toString
                                                    .call(t)
                                                    .match(
                                                        /\[object (\w+)\]/
                                                    )[1];
                                            },
                                            objId: function (t) {
                                                return (
                                                    t.__id ||
                                                        Object.defineProperty(
                                                            t,
                                                            "__id",
                                                            { value: ++s }
                                                        ),
                                                    t.__id
                                                );
                                            },
                                            clone: function (t, e) {
                                                var n = o.util.type(t);
                                                switch (((e = e || {}), n)) {
                                                    case "Object":
                                                        if (e[o.util.objId(t)])
                                                            return e[
                                                                o.util.objId(t)
                                                            ];
                                                        var i,
                                                            s = {};
                                                        for (i in ((e[
                                                            o.util.objId(t)
                                                        ] = s),
                                                        t))
                                                            t.hasOwnProperty(
                                                                i
                                                            ) &&
                                                                (s[i] =
                                                                    o.util.clone(
                                                                        t[i],
                                                                        e
                                                                    ));
                                                        return s;
                                                    case "Array":
                                                        return e[
                                                            o.util.objId(t)
                                                        ]
                                                            ? e[o.util.objId(t)]
                                                            : ((s = []),
                                                              (e[
                                                                  o.util.objId(
                                                                      t
                                                                  )
                                                              ] = s),
                                                              t.forEach(
                                                                  function (
                                                                      t,
                                                                      n
                                                                  ) {
                                                                      s[n] =
                                                                          o.util.clone(
                                                                              t,
                                                                              e
                                                                          );
                                                                  }
                                                              ),
                                                              s);
                                                }
                                                return t;
                                            },
                                        },
                                        languages: {
                                            extend: function (t, e) {
                                                var n,
                                                    i = o.util.clone(
                                                        o.languages[t]
                                                    );
                                                for (n in e) i[n] = e[n];
                                                return i;
                                            },
                                            insertBefore: function (
                                                t,
                                                e,
                                                n,
                                                i
                                            ) {
                                                var s = (i = i || o.languages)[
                                                    t
                                                ];
                                                if (2 == arguments.length) {
                                                    for (var r in (n = e))
                                                        n.hasOwnProperty(r) &&
                                                            (s[r] = n[r]);
                                                    return s;
                                                }
                                                var a,
                                                    l = {};
                                                for (a in s)
                                                    if (s.hasOwnProperty(a)) {
                                                        if (a == e)
                                                            for (var r in n)
                                                                n.hasOwnProperty(
                                                                    r
                                                                ) &&
                                                                    (l[r] =
                                                                        n[r]);
                                                        l[a] = s[a];
                                                    }
                                                return (
                                                    o.languages.DFS(
                                                        o.languages,
                                                        function (e, n) {
                                                            n === i[t] &&
                                                                e != t &&
                                                                (this[e] = l);
                                                        }
                                                    ),
                                                    (i[t] = l)
                                                );
                                            },
                                            DFS: function (t, e, n, i) {
                                                for (var s in ((i = i || {}),
                                                t))
                                                    t.hasOwnProperty(s) &&
                                                        (e.call(
                                                            t,
                                                            s,
                                                            t[s],
                                                            n || s
                                                        ),
                                                        "Object" !==
                                                            o.util.type(t[s]) ||
                                                        i[o.util.objId(t[s])]
                                                            ? "Array" !==
                                                                  o.util.type(
                                                                      t[s]
                                                                  ) ||
                                                              i[
                                                                  o.util.objId(
                                                                      t[s]
                                                                  )
                                                              ] ||
                                                              ((i[
                                                                  o.util.objId(
                                                                      t[s]
                                                                  )
                                                              ] = !0),
                                                              o.languages.DFS(
                                                                  t[s],
                                                                  e,
                                                                  s,
                                                                  i
                                                              ))
                                                            : ((i[
                                                                  o.util.objId(
                                                                      t[s]
                                                                  )
                                                              ] = !0),
                                                              o.languages.DFS(
                                                                  t[s],
                                                                  e,
                                                                  null,
                                                                  i
                                                              )));
                                            },
                                        },
                                        plugins: {},
                                        highlightAll: function (t, e) {
                                            o.highlightAllUnder(document, t, e);
                                        },
                                        highlightAllUnder: function (t, e, n) {
                                            for (
                                                var i,
                                                    s = {
                                                        callback: n,
                                                        selector:
                                                            'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code',
                                                    },
                                                    r =
                                                        (o.hooks.run(
                                                            "before-highlightall",
                                                            s
                                                        ),
                                                        s.elements ||
                                                            t.querySelectorAll(
                                                                s.selector
                                                            )),
                                                    a = 0;
                                                (i = r[a++]);

                                            )
                                                o.highlightElement(
                                                    i,
                                                    !0 === e,
                                                    s.callback
                                                );
                                        },
                                        highlightElement: function (t, e, n) {
                                            for (
                                                var s, r = t;
                                                r && !i.test(r.className);

                                            )
                                                r = r.parentNode;
                                            r &&
                                                ((a = (r.className.match(i) || [
                                                    ,
                                                    "",
                                                ])[1].toLowerCase()),
                                                (s = o.languages[a])),
                                                (t.className =
                                                    t.className
                                                        .replace(i, "")
                                                        .replace(/\s+/g, " ") +
                                                    " language-" +
                                                    a),
                                                t.parentNode &&
                                                    ((r = t.parentNode),
                                                    /pre/i.test(r.nodeName)) &&
                                                    (r.className =
                                                        r.className
                                                            .replace(i, "")
                                                            .replace(
                                                                /\s+/g,
                                                                " "
                                                            ) +
                                                        " language-" +
                                                        a);
                                            var a,
                                                l = {
                                                    element: t,
                                                    language: a,
                                                    grammar: s,
                                                    code: t.textContent,
                                                };
                                            o.hooks.run(
                                                "before-sanity-check",
                                                l
                                            ),
                                                l.code && l.grammar
                                                    ? (o.hooks.run(
                                                          "before-highlight",
                                                          l
                                                      ),
                                                      e && I.Worker
                                                          ? (((a = new Worker(
                                                                o.filename
                                                            )).onmessage =
                                                                function (t) {
                                                                    (l.highlightedCode =
                                                                        t.data),
                                                                        o.hooks.run(
                                                                            "before-insert",
                                                                            l
                                                                        ),
                                                                        (l.element.innerHTML =
                                                                            l.highlightedCode),
                                                                        n &&
                                                                            n.call(
                                                                                l.element
                                                                            ),
                                                                        o.hooks.run(
                                                                            "after-highlight",
                                                                            l
                                                                        ),
                                                                        o.hooks.run(
                                                                            "complete",
                                                                            l
                                                                        );
                                                                }),
                                                            a.postMessage(
                                                                JSON.stringify({
                                                                    language:
                                                                        l.language,
                                                                    code: l.code,
                                                                    immediateClose:
                                                                        !0,
                                                                })
                                                            ))
                                                          : ((l.highlightedCode =
                                                                o.highlight(
                                                                    l.code,
                                                                    l.grammar,
                                                                    l.language
                                                                )),
                                                            o.hooks.run(
                                                                "before-insert",
                                                                l
                                                            ),
                                                            (l.element.innerHTML =
                                                                l.highlightedCode),
                                                            n && n.call(t),
                                                            o.hooks.run(
                                                                "after-highlight",
                                                                l
                                                            ),
                                                            o.hooks.run(
                                                                "complete",
                                                                l
                                                            )))
                                                    : (l.code &&
                                                          (o.hooks.run(
                                                              "before-highlight",
                                                              l
                                                          ),
                                                          (l.element.textContent =
                                                              l.code),
                                                          o.hooks.run(
                                                              "after-highlight",
                                                              l
                                                          )),
                                                      o.hooks.run(
                                                          "complete",
                                                          l
                                                      ));
                                        },
                                        highlight: function (t, e, n) {
                                            return (
                                                (t = {
                                                    code: t,
                                                    grammar: e,
                                                    language: n,
                                                }),
                                                o.hooks.run(
                                                    "before-tokenize",
                                                    t
                                                ),
                                                (t.tokens = o.tokenize(
                                                    t.code,
                                                    t.grammar
                                                )),
                                                o.hooks.run(
                                                    "after-tokenize",
                                                    t
                                                ),
                                                r.stringify(
                                                    o.util.encode(t.tokens),
                                                    t.language
                                                )
                                            );
                                        },
                                        matchGrammar: function (
                                            t,
                                            e,
                                            n,
                                            i,
                                            s,
                                            r,
                                            a
                                        ) {
                                            var l,
                                                c = o.Token;
                                            for (l in n)
                                                if (
                                                    n.hasOwnProperty(l) &&
                                                    n[l]
                                                ) {
                                                    if (l == a) return;
                                                    for (
                                                        var d = n[l],
                                                            u =
                                                                ((d =
                                                                    "Array" ===
                                                                    o.util.type(
                                                                        d
                                                                    )
                                                                        ? d
                                                                        : [d]),
                                                                0);
                                                        u < d.length;
                                                        ++u
                                                    ) {
                                                        var h,
                                                            p = (_ = d[u])
                                                                .inside,
                                                            f = !!_.lookbehind,
                                                            g = !!_.greedy,
                                                            m = 0,
                                                            b = _.alias;
                                                        g &&
                                                            !_.pattern.global &&
                                                            ((h = _.pattern
                                                                .toString()
                                                                .match(
                                                                    /[imuy]*$/
                                                                )[0]),
                                                            (_.pattern = RegExp(
                                                                _.pattern
                                                                    .source,
                                                                h + "g"
                                                            )));
                                                        for (
                                                            var _ =
                                                                    _.pattern ||
                                                                    _,
                                                                v = i,
                                                                y = s;
                                                            v < e.length;
                                                            y += e[v].length,
                                                                ++v
                                                        ) {
                                                            var w = e[v];
                                                            if (
                                                                e.length >
                                                                t.length
                                                            )
                                                                return;
                                                            if (
                                                                !(
                                                                    w instanceof
                                                                    c
                                                                )
                                                            ) {
                                                                if (
                                                                    g &&
                                                                    v !=
                                                                        e.length -
                                                                            1
                                                                ) {
                                                                    if (
                                                                        ((_.lastIndex =
                                                                            y),
                                                                        !(x =
                                                                            _.exec(
                                                                                t
                                                                            )))
                                                                    )
                                                                        break;
                                                                    for (
                                                                        var C =
                                                                                x.index +
                                                                                (f
                                                                                    ? x[1]
                                                                                          .length
                                                                                    : 0),
                                                                            E =
                                                                                x.index +
                                                                                x[0]
                                                                                    .length,
                                                                            A =
                                                                                v,
                                                                            S =
                                                                                y,
                                                                            k =
                                                                                e.length;
                                                                        A < k &&
                                                                        (S <
                                                                            E ||
                                                                            (!e[
                                                                                A
                                                                            ]
                                                                                .type &&
                                                                                !e[
                                                                                    A -
                                                                                        1
                                                                                ]
                                                                                    .greedy));
                                                                        ++A
                                                                    )
                                                                        (S +=
                                                                            e[A]
                                                                                .length) <=
                                                                            C &&
                                                                            (++v,
                                                                            (y =
                                                                                S));
                                                                    if (
                                                                        e[
                                                                            v
                                                                        ] instanceof
                                                                        c
                                                                    )
                                                                        continue;
                                                                    (T = A - v),
                                                                        (w =
                                                                            t.slice(
                                                                                y,
                                                                                S
                                                                            )),
                                                                        (x.index -=
                                                                            y);
                                                                } else {
                                                                    _.lastIndex = 0;
                                                                    var x =
                                                                            _.exec(
                                                                                w
                                                                            ),
                                                                        T = 1;
                                                                }
                                                                if (x) {
                                                                    f &&
                                                                        (m =
                                                                            x[1]
                                                                                ? x[1]
                                                                                      .length
                                                                                : 0);
                                                                    E =
                                                                        (C =
                                                                            x.index +
                                                                            m) +
                                                                        (x =
                                                                            x[0].slice(
                                                                                m
                                                                            ))
                                                                            .length;
                                                                    var O =
                                                                            w.slice(
                                                                                0,
                                                                                C
                                                                            ),
                                                                        L =
                                                                            ((w =
                                                                                w.slice(
                                                                                    E
                                                                                )),
                                                                            [
                                                                                v,
                                                                                T,
                                                                            ]);
                                                                    O =
                                                                        (O &&
                                                                            (++v,
                                                                            (y +=
                                                                                O.length),
                                                                            L.push(
                                                                                O
                                                                            )),
                                                                        new c(
                                                                            l,
                                                                            p
                                                                                ? o.tokenize(
                                                                                      x,
                                                                                      p
                                                                                  )
                                                                                : x,
                                                                            b,
                                                                            x,
                                                                            g
                                                                        ));
                                                                    if (
                                                                        (L.push(
                                                                            O
                                                                        ),
                                                                        w &&
                                                                            L.push(
                                                                                w
                                                                            ),
                                                                        Array.prototype.splice.apply(
                                                                            e,
                                                                            L
                                                                        ),
                                                                        1 !=
                                                                            T &&
                                                                            o.matchGrammar(
                                                                                t,
                                                                                e,
                                                                                n,
                                                                                v,
                                                                                y,
                                                                                !0,
                                                                                l
                                                                            ),
                                                                        r)
                                                                    )
                                                                        break;
                                                                } else if (r)
                                                                    break;
                                                            }
                                                        }
                                                    }
                                                }
                                        },
                                        tokenize: function (t, e, n) {
                                            var i = [t],
                                                s = e.rest;
                                            if (s) {
                                                for (var r in s) e[r] = s[r];
                                                delete e.rest;
                                            }
                                            return (
                                                o.matchGrammar(
                                                    t,
                                                    i,
                                                    e,
                                                    0,
                                                    0,
                                                    !1
                                                ),
                                                i
                                            );
                                        },
                                        hooks: {
                                            all: {},
                                            add: function (t, e) {
                                                var n = o.hooks.all;
                                                (n[t] = n[t] || []),
                                                    n[t].push(e);
                                            },
                                            run: function (t, e) {
                                                var n = o.hooks.all[t];
                                                if (n && n.length)
                                                    for (
                                                        var i, s = 0;
                                                        (i = n[s++]);

                                                    )
                                                        i(e);
                                            },
                                        },
                                    }),
                                ((r = o.Token =
                                    function (t, e, n, i, s) {
                                        (this.type = t),
                                            (this.content = e),
                                            (this.alias = n),
                                            (this.length =
                                                0 | (i || "").length),
                                            (this.greedy = !!s);
                                    }).stringify = function (t, e, n) {
                                    var i;
                                    return "string" == typeof t
                                        ? t
                                        : "Array" === o.util.type(t)
                                        ? t
                                              .map(function (n) {
                                                  return r.stringify(n, e, t);
                                              })
                                              .join("")
                                        : ((i = {
                                              type: t.type,
                                              content: r.stringify(
                                                  t.content,
                                                  e,
                                                  n
                                              ),
                                              tag: "span",
                                              classes: ["token", t.type],
                                              attributes: {},
                                              language: e,
                                              parent: n,
                                          }),
                                          t.alias &&
                                              ((n =
                                                  "Array" ===
                                                  o.util.type(t.alias)
                                                      ? t.alias
                                                      : [t.alias]),
                                              Array.prototype.push.apply(
                                                  i.classes,
                                                  n
                                              )),
                                          o.hooks.run("wrap", i),
                                          (n = Object.keys(i.attributes)
                                              .map(function (t) {
                                                  return (
                                                      t +
                                                      '="' +
                                                      (
                                                          i.attributes[t] || ""
                                                      ).replace(
                                                          /"/g,
                                                          "&quot;"
                                                      ) +
                                                      '"'
                                                  );
                                              })
                                              .join(" ")),
                                          "<" +
                                              i.tag +
                                              ' class="' +
                                              i.classes.join(" ") +
                                              '"' +
                                              (n ? " " + n : "") +
                                              ">" +
                                              i.content +
                                              "</" +
                                              i.tag +
                                              ">");
                                }),
                                I.document
                                    ? (l =
                                          document.currentScript ||
                                          [].slice
                                              .call(
                                                  document.getElementsByTagName(
                                                      "script"
                                                  )
                                              )
                                              .pop()) &&
                                      ((o.filename = l.src),
                                      o.manual ||
                                          l.hasAttribute("data-manual") ||
                                          ("loading" !== document.readyState
                                              ? window.requestAnimationFrame
                                                  ? window.requestAnimationFrame(
                                                        o.highlightAll
                                                    )
                                                  : window.setTimeout(
                                                        o.highlightAll,
                                                        16
                                                    )
                                              : document.addEventListener(
                                                    "DOMContentLoaded",
                                                    o.highlightAll
                                                )))
                                    : I.addEventListener &&
                                      !o.disableWorkerMessageHandler &&
                                      I.addEventListener(
                                          "message",
                                          function (t) {
                                              var e = (t = JSON.parse(t.data))
                                                      .language,
                                                  n = t.code;
                                              t = t.immediateClose;
                                              I.postMessage(
                                                  o.highlight(
                                                      n,
                                                      o.languages[e],
                                                      e
                                                  )
                                              ),
                                                  t && I.close();
                                          },
                                          !1
                                      ),
                                I.Prism);
                        function W(t, e) {
                            return (
                                (t = t
                                    .replace(/<S>/g, function () {
                                        return c;
                                    })
                                    .replace(/<BRACES>/g, function () {
                                        return d;
                                    })
                                    .replace(/<SPREAD>/g, function () {
                                        return u;
                                    })),
                                RegExp(t, e)
                            );
                        }
                        function B(t) {
                            for (var e = [], n = 0; n < t.length; n++) {
                                var i = t[n],
                                    s = !1;
                                "string" != typeof i &&
                                    ("tag" === i.type &&
                                    i.content[0] &&
                                    "tag" === i.content[0].type
                                        ? "</" ===
                                          i.content[0].content[0].content
                                            ? 0 < e.length &&
                                              e[e.length - 1].tagName ===
                                                  h(i.content[0].content[1]) &&
                                              e.pop()
                                            : "/>" !==
                                                  i.content[
                                                      i.content.length - 1
                                                  ].content &&
                                              e.push({
                                                  tagName: h(
                                                      i.content[0].content[1]
                                                  ),
                                                  openedBraces: 0,
                                              })
                                        : 0 < e.length &&
                                          "punctuation" === i.type &&
                                          "{" === i.content
                                        ? e[e.length - 1].openedBraces++
                                        : 0 < e.length &&
                                          0 < e[e.length - 1].openedBraces &&
                                          "punctuation" === i.type &&
                                          "}" === i.content
                                        ? e[e.length - 1].openedBraces--
                                        : (s = !0)),
                                    (s || "string" == typeof i) &&
                                        0 < e.length &&
                                        0 === e[e.length - 1].openedBraces &&
                                        ((s = h(i)),
                                        n < t.length - 1 &&
                                            ("string" == typeof t[n + 1] ||
                                                "plain-text" ===
                                                    t[n + 1].type) &&
                                            ((s += h(t[n + 1])),
                                            t.splice(n + 1, 1)),
                                        0 < n &&
                                            ("string" == typeof t[n - 1] ||
                                                "plain-text" ===
                                                    t[n - 1].type) &&
                                            ((s = h(t[n - 1]) + s),
                                            t.splice(n - 1, 1),
                                            n--),
                                        (t[n] = new a.Token(
                                            "plain-text",
                                            s,
                                            null,
                                            s
                                        ))),
                                    i.content &&
                                        "string" != typeof i.content &&
                                        B(i.content);
                            }
                        }
                        function H(t, e) {
                            return t.replace(/<<(\d+)>>/g, function (t, n) {
                                return "(?:" + e[+n] + ")";
                            });
                        }
                        function Y(t, e, n) {
                            return RegExp(H(t, e), n || "");
                        }
                        function F(t, e) {
                            for (var n = 0; n < e; n++)
                                t = t.replace(/<<self>>/g, function () {
                                    return "(?:" + t + ")";
                                });
                            return t.replace(/<<self>>/g, "[^\\s\\S]");
                        }
                        function X(t) {
                            return (
                                "\\b(?:" + t.trim().replace(/ /g, "|") + ")\\b"
                            );
                        }
                        function z(t, e) {
                            return {
                                interpolation: {
                                    pattern: Y(
                                        /((?:^|[^{])(?:\{\{)*)<<0>>/.source,
                                        [t]
                                    ),
                                    lookbehind: !0,
                                    inside: {
                                        "format-string": {
                                            pattern: Y(
                                                /(^\{(?:(?![}:])<<0>>)*)<<1>>(?=\}$)/
                                                    .source,
                                                [e, _]
                                            ),
                                            lookbehind: !0,
                                            inside: { punctuation: /^:/ },
                                        },
                                        punctuation: /^\{|\}$/,
                                        expression: {
                                            pattern: /[\s\S]+/,
                                            alias: "language-csharp",
                                            inside: p.languages.csharp,
                                        },
                                    },
                                },
                                string: /[\s\S]+/,
                            };
                        }
                        if (
                            (t.exports && (t.exports = j),
                            void 0 !== e && (e.Prism = j),
                            (j.languages.markup = {
                                comment: /<!--[\s\S]*?-->/,
                                prolog: /<\?[\s\S]+?\?>/,
                                doctype: /<!DOCTYPE[\s\S]+?>/i,
                                cdata: /<!\[CDATA\[[\s\S]*?]]>/i,
                                tag: {
                                    pattern:
                                        /<\/?(?!\d)[^\s>\/=$<%]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i,
                                    greedy: !0,
                                    inside: {
                                        tag: {
                                            pattern: /^<\/?[^\s>\/]+/i,
                                            inside: {
                                                punctuation: /^<\/?/,
                                                namespace: /^[^\s>\/:]+:/,
                                            },
                                        },
                                        "special-attr": [],
                                        "attr-value": {
                                            pattern:
                                                /=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+)/i,
                                            inside: {
                                                punctuation: [
                                                    /^=/,
                                                    {
                                                        pattern:
                                                            /(^|[^\\])["']/,
                                                        lookbehind: !0,
                                                    },
                                                ],
                                            },
                                        },
                                        punctuation: /\/?>/,
                                        "attr-name": {
                                            pattern: /[^\s>\/]+/,
                                            inside: {
                                                namespace: /^[^\s>\/:]+:/,
                                            },
                                        },
                                    },
                                },
                                entity: /&#?[\da-z]{1,8};/i,
                            }),
                            (j.languages.markup.tag.inside[
                                "attr-value"
                            ].inside.entity = j.languages.markup.entity),
                            j.hooks.add("wrap", function (t) {
                                "entity" === t.type &&
                                    (t.attributes.title = t.content.replace(
                                        /&amp;/,
                                        "&"
                                    ));
                            }),
                            (j.languages.xml = j.languages.markup),
                            (j.languages.html = j.languages.markup),
                            (j.languages.mathml = j.languages.markup),
                            (j.languages.svg = j.languages.markup),
                            (j.languages.css = {
                                comment: /\/\*[\s\S]*?\*\//,
                                atrule: {
                                    pattern: /@[\w-]+?.*?(?:;|(?=\s*\{))/i,
                                    inside: { rule: /@[\w-]+/ },
                                },
                                url: /url\((?:(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|.*?)\)/i,
                                selector: /[^{}\s][^{};]*?(?=\s*\{)/,
                                string: {
                                    pattern:
                                        /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                                    greedy: !0,
                                },
                                property:
                                    /[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i,
                                important: /\B!important\b/i,
                                function: /[-a-z0-9]+(?=\()/i,
                                punctuation: /[(){};:]/,
                            }),
                            (j.languages.css.atrule.inside.rest =
                                j.languages.css),
                            j.languages.markup &&
                                (j.languages.insertBefore("markup", "tag", {
                                    style: {
                                        pattern:
                                            /(<style[\s\S]*?>)[\s\S]*?(?=<\/style>)/i,
                                        lookbehind: !0,
                                        inside: j.languages.css,
                                        alias: "language-css",
                                        greedy: !0,
                                    },
                                }),
                                j.languages.insertBefore(
                                    "inside",
                                    "attr-value",
                                    {
                                        "style-attr": {
                                            pattern:
                                                /\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i,
                                            inside: {
                                                "attr-name": {
                                                    pattern: /^\s*style/i,
                                                    inside: j.languages.markup
                                                        .tag.inside,
                                                },
                                                punctuation:
                                                    /^\s*=\s*['"]|['"]\s*$/,
                                                "attr-value": {
                                                    pattern: /.+/i,
                                                    inside: j.languages.css,
                                                },
                                            },
                                            alias: "language-css",
                                        },
                                    },
                                    j.languages.markup.tag
                                )),
                            (j.languages.clike = {
                                comment: [
                                    {
                                        pattern:
                                            /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
                                        lookbehind: !0,
                                    },
                                    {
                                        pattern: /(^|[^\\:])\/\/.*/,
                                        lookbehind: !0,
                                        greedy: !0,
                                    },
                                ],
                                string: {
                                    pattern:
                                        /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                                    greedy: !0,
                                },
                                "class-name": {
                                    pattern:
                                        /((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i,
                                    lookbehind: !0,
                                    inside: { punctuation: /[.\\]/ },
                                },
                                keyword:
                                    /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
                                boolean: /\b(?:true|false)\b/,
                                function: /[a-z0-9_]+(?=\()/i,
                                number: /\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,
                                operator:
                                    /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,
                                punctuation: /[{}[\];(),.:]/,
                            }),
                            (j.languages.javascript = j.languages.extend(
                                "clike",
                                {
                                    "class-name": [
                                        j.languages.clike["class-name"],
                                        {
                                            pattern:
                                                /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,
                                            lookbehind: !0,
                                        },
                                    ],
                                    keyword:
                                        /\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/,
                                    number: /\b(?:0[xX][\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,
                                    function:
                                        /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*\()/i,
                                    operator:
                                        /-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/,
                                }
                            )),
                            (j.languages.javascript["class-name"][0].pattern =
                                /(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/),
                            j.languages.insertBefore("javascript", "keyword", {
                                regex: {
                                    pattern:
                                        /((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(\[[^\]\r\n]+]|\\.|[^/\\\[\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})\]]))/,
                                    lookbehind: !0,
                                    greedy: !0,
                                    inside: {
                                        "regex-source": {
                                            pattern:
                                                /^(\/)[\s\S]+(?=\/[a-z]*$)/,
                                            lookbehind: !0,
                                            alias: "language-regex",
                                            inside: j.languages.regex,
                                        },
                                        "regex-delimiter": /^\/|\/$/,
                                        "regex-flags": /^[a-z]+$/,
                                    },
                                },
                                "function-variable": {
                                    pattern:
                                        /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=\s*(?:function\b|(?:\([^()]*\)|[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/i,
                                    alias: "function",
                                },
                                constant: /\b[A-Z][A-Z\d_]*\b/,
                            }),
                            j.languages.insertBefore("javascript", "string", {
                                hashbang: {
                                    pattern: /^#!.*/,
                                    greedy: !0,
                                    alias: "comment",
                                },
                                "string-property": {
                                    pattern:
                                        /((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,
                                    lookbehind: !0,
                                    greedy: !0,
                                    alias: "property",
                                },
                                "template-string": {
                                    pattern: /`(?:\\[\s\S]|\${[^}]+}|[^\\`])*`/,
                                    greedy: !0,
                                    inside: {
                                        interpolation: {
                                            pattern: /\${[^}]+}/,
                                            inside: {
                                                "interpolation-punctuation": {
                                                    pattern: /^\${|}$/,
                                                    alias: "punctuation",
                                                },
                                                rest: null,
                                            },
                                        },
                                        string: /[\s\S]+/,
                                    },
                                },
                            }),
                            j.languages.insertBefore("javascript", "operator", {
                                "literal-property": {
                                    pattern:
                                        /((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,
                                    lookbehind: !0,
                                    alias: "property",
                                },
                            }),
                            (j.languages.javascript[
                                "template-string"
                            ].inside.interpolation.inside.rest =
                                j.languages.javascript),
                            Object.defineProperty(
                                j.languages.markup.tag,
                                "addInlined",
                                {
                                    value: function (t, e) {
                                        var n;
                                        ((e =
                                            (((n =
                                                (((n = {})["language-" + e] = {
                                                    pattern:
                                                        /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
                                                    lookbehind: !0,
                                                    inside: j.languages[e],
                                                }),
                                                (n.cdata =
                                                    /^<!\[CDATA\[|\]\]>$/i),
                                                {
                                                    "included-cdata": {
                                                        pattern:
                                                            /<!\[CDATA\[[\s\S]*?\]\]>/i,
                                                        inside: n,
                                                    },
                                                }))["language-" + e] = {
                                                pattern: /[\s\S]+/,
                                                inside: j.languages[e],
                                            }),
                                            {}))[t] = {
                                            pattern: RegExp(
                                                /(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(
                                                    /__/g,
                                                    function () {
                                                        return t;
                                                    }
                                                ),
                                                "i"
                                            ),
                                            lookbehind: !0,
                                            greedy: !0,
                                            inside: n,
                                        }),
                                            j.languages.insertBefore(
                                                "markup",
                                                "cdata",
                                                e
                                            );
                                    },
                                }
                            ),
                            Object.defineProperty(
                                j.languages.markup.tag,
                                "addAttribute",
                                {
                                    value: function (t, e) {
                                        j.languages.markup.tag.inside[
                                            "special-attr"
                                        ].push({
                                            pattern: RegExp(
                                                /(^|["'\s])/.source +
                                                    "(?:" +
                                                    t +
                                                    ")" +
                                                    /\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/
                                                        .source,
                                                "i"
                                            ),
                                            lookbehind: !0,
                                            inside: {
                                                "attr-name": /^[^\s=]+/,
                                                "attr-value": {
                                                    pattern: /=[\s\S]+/,
                                                    inside: {
                                                        value: {
                                                            pattern:
                                                                /(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,
                                                            lookbehind: !0,
                                                            alias: [
                                                                e,
                                                                "language-" + e,
                                                            ],
                                                            inside: j.languages[
                                                                e
                                                            ],
                                                        },
                                                        punctuation: [
                                                            {
                                                                pattern: /^=/,
                                                                alias: "attr-equals",
                                                            },
                                                            /"|'/,
                                                        ],
                                                    },
                                                },
                                            },
                                        });
                                    },
                                }
                            ),
                            j.languages.markup &&
                                (j.languages.insertBefore("markup", "tag", {
                                    script: {
                                        pattern:
                                            /(<script[\s\S]*?>)[\s\S]*?(?=<\/script>)/i,
                                        lookbehind: !0,
                                        inside: j.languages.javascript,
                                        alias: "language-javascript",
                                        greedy: !0,
                                    },
                                }),
                                j.languages.markup.tag.addInlined(
                                    "script",
                                    "javascript"
                                ),
                                j.languages.markup.tag.addAttribute(
                                    /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/
                                        .source,
                                    "javascript"
                                )),
                            (j.languages.js = j.languages.javascript),
                            (j.languages["markup-templating"] = {}),
                            Object.defineProperties(
                                j.languages["markup-templating"],
                                {
                                    buildPlaceholders: {
                                        value: function (t, e, n, i) {
                                            t.language === e &&
                                                ((t.tokenStack = []),
                                                (t.code = t.code.replace(
                                                    n,
                                                    function (n) {
                                                        if (
                                                            "function" ==
                                                                typeof i &&
                                                            !i(n)
                                                        )
                                                            return n;
                                                        for (
                                                            var s =
                                                                t.tokenStack
                                                                    .length;
                                                            -1 !==
                                                            t.code.indexOf(
                                                                "___" +
                                                                    e.toUpperCase() +
                                                                    s +
                                                                    "___"
                                                            );

                                                        )
                                                            ++s;
                                                        return (
                                                            (t.tokenStack[s] =
                                                                n),
                                                            "___" +
                                                                e.toUpperCase() +
                                                                s +
                                                                "___"
                                                        );
                                                    }
                                                )),
                                                (t.grammar =
                                                    j.languages.markup));
                                        },
                                    },
                                    tokenizePlaceholders: {
                                        value: function (t, e) {
                                            var n, i, s;
                                            t.language === e &&
                                                t.tokenStack &&
                                                ((t.grammar = j.languages[e]),
                                                (n = 0),
                                                (i = Object.keys(t.tokenStack)),
                                                (s = function (o) {
                                                    if (!(n >= i.length))
                                                        for (
                                                            var r = 0;
                                                            r < o.length;
                                                            r++
                                                        ) {
                                                            var a = o[r];
                                                            if (
                                                                "string" ==
                                                                    typeof a ||
                                                                (a.content &&
                                                                    "string" ==
                                                                        typeof a.content)
                                                            ) {
                                                                var l = i[n],
                                                                    c =
                                                                        t
                                                                            .tokenStack[
                                                                            l
                                                                        ],
                                                                    d = (p =
                                                                        "string" ==
                                                                        typeof a
                                                                            ? a
                                                                            : a.content).indexOf(
                                                                        "___" +
                                                                            e.toUpperCase() +
                                                                            l +
                                                                            "___"
                                                                    );
                                                                if (-1 < d) {
                                                                    ++n;
                                                                    var u,
                                                                        h =
                                                                            p.substring(
                                                                                0,
                                                                                d
                                                                            ),
                                                                        p =
                                                                            ((c =
                                                                                new j.Token(
                                                                                    e,
                                                                                    j.tokenize(
                                                                                        c,
                                                                                        t.grammar,
                                                                                        e
                                                                                    ),
                                                                                    "language-" +
                                                                                        e,
                                                                                    c
                                                                                )),
                                                                            p.substring(
                                                                                d +
                                                                                    (
                                                                                        "___" +
                                                                                        e.toUpperCase() +
                                                                                        l +
                                                                                        "___"
                                                                                    )
                                                                                        .length
                                                                            ));
                                                                    if (
                                                                        (h || p
                                                                            ? ((u =
                                                                                  [
                                                                                      h,
                                                                                      c,
                                                                                      p,
                                                                                  ].filter(
                                                                                      function (
                                                                                          t
                                                                                      ) {
                                                                                          return !!t;
                                                                                      }
                                                                                  )),
                                                                              s(
                                                                                  u
                                                                              ))
                                                                            : (u =
                                                                                  c),
                                                                        "string" ==
                                                                        typeof a
                                                                            ? Array.prototype.splice.apply(
                                                                                  o,
                                                                                  [
                                                                                      r,
                                                                                      1,
                                                                                  ].concat(
                                                                                      u
                                                                                  )
                                                                              )
                                                                            : (a.content =
                                                                                  u),
                                                                        n >=
                                                                            i.length)
                                                                    )
                                                                        break;
                                                                }
                                                            } else
                                                                a.content &&
                                                                    "string" !=
                                                                        typeof a.content &&
                                                                    s(
                                                                        a.content
                                                                    );
                                                        }
                                                })(t.tokens));
                                        },
                                    },
                                }
                            ),
                            (j.languages.json = {
                                property: /"(?:\\.|[^\\"\r\n])*"(?=\s*:)/i,
                                string: {
                                    pattern: /"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,
                                    greedy: !0,
                                },
                                number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,
                                punctuation: /[{}[\]);,]/,
                                operator: /:/g,
                                boolean: /\b(?:true|false)\b/i,
                                null: /\bnull\b/i,
                            }),
                            (j.languages.jsonp = j.languages.json),
                            (l = (a = j).util.clone(a.languages.javascript)),
                            (c = /(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/
                                .source),
                            (d = /(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/
                                .source),
                            (u = W(
                                (u = /(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/
                                    .source)
                            ).source),
                            (a.languages.jsx = a.languages.extend("markup", l)),
                            (a.languages.jsx.tag.pattern = W(
                                /<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/
                                    .source
                            )),
                            (a.languages.jsx.tag.inside.tag.pattern =
                                /^<\/?[^\s>\/]*/),
                            (a.languages.jsx.tag.inside["attr-value"].pattern =
                                /=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/),
                            (a.languages.jsx.tag.inside.tag.inside[
                                "class-name"
                            ] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/),
                            (a.languages.jsx.tag.inside.comment = l.comment),
                            a.languages.insertBefore(
                                "inside",
                                "attr-name",
                                {
                                    spread: {
                                        pattern: W(/<SPREAD>/.source),
                                        inside: a.languages.jsx,
                                    },
                                },
                                a.languages.jsx.tag
                            ),
                            a.languages.insertBefore(
                                "inside",
                                "special-attr",
                                {
                                    script: {
                                        pattern: W(/=<BRACES>/.source),
                                        alias: "language-javascript",
                                        inside: {
                                            "script-punctuation": {
                                                pattern: /^=(?=\{)/,
                                                alias: "punctuation",
                                            },
                                            rest: a.languages.jsx,
                                        },
                                    },
                                },
                                a.languages.jsx.tag
                            ),
                            (h = function (t) {
                                return t
                                    ? "string" == typeof t
                                        ? t
                                        : "string" == typeof t.content
                                        ? t.content
                                        : t.content.map(h).join("")
                                    : "";
                            }),
                            a.hooks.add("after-tokenize", function (t) {
                                ("jsx" !== t.language &&
                                    "tsx" !== t.language) ||
                                    B(t.tokens);
                            }),
                            (p = j),
                            (e =
                                "bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void"),
                            (M =
                                "add alias and ascending async await by descending from(?=\\s*(?:\\w|$)) get global group into init(?=\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\s*{)"),
                            (P =
                                "abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield"),
                            (C = X((A = "class enum interface record struct"))),
                            (f = RegExp(X(e + " " + A + " " + M + " " + P))),
                            (M = X(A + " " + M + " " + P)),
                            (e = X(e + " " + A + " " + P)),
                            (A = F(
                                /<(?:[^<>;=+\-*/%&|^]|<<self>>)*>/.source,
                                2
                            )),
                            (P = F(/\((?:[^()]|<<self>>)*\)/.source, 2)),
                            (g = H(/<<0>>(?:\s*<<1>>)?/.source, [
                                (w = /@?\b[A-Za-z_]\w*\b/.source),
                                A,
                            ])),
                            (M = H(/(?!<<0>>)<<1>>(?:\s*\.\s*<<1>>)*/.source, [
                                M,
                                g,
                            ])),
                            (R = H(
                                /<<0>>(?:\s*(?:\?\s*)?<<1>>)*(?:\s*\?)?/.source,
                                [M, (v = /\[\s*(?:,\s*)*\]/.source)]
                            )),
                            (m = H(
                                /[^,()<>[\];=+\-*/%&|^]|<<0>>|<<1>>|<<2>>/
                                    .source,
                                [A, P, v]
                            )),
                            (m = H(/\(<<0>>+(?:,<<0>>+)+\)/.source, [m])),
                            (m = H(
                                /(?:<<0>>|<<1>>)(?:\s*(?:\?\s*)?<<2>>)*(?:\s*\?)?/
                                    .source,
                                [m, M, v]
                            )),
                            (v = { keyword: f, punctuation: /[<>()?,.:[\]]/ }),
                            (b = /'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'/
                                .source),
                            (y = /"(?:\\.|[^\\"\r\n])*"/.source),
                            (p.languages.csharp = p.languages.extend("clike", {
                                string: [
                                    {
                                        pattern: Y(/(^|[^$\\])<<0>>/.source, [
                                            /@"(?:""|\\[\s\S]|[^\\"])*"(?!")/
                                                .source,
                                        ]),
                                        lookbehind: !0,
                                        greedy: !0,
                                    },
                                    {
                                        pattern: Y(/(^|[^@$\\])<<0>>/.source, [
                                            y,
                                        ]),
                                        lookbehind: !0,
                                        greedy: !0,
                                    },
                                ],
                                "class-name": [
                                    {
                                        pattern: Y(
                                            /(\busing\s+static\s+)<<0>>(?=\s*;)/
                                                .source,
                                            [M]
                                        ),
                                        lookbehind: !0,
                                        inside: v,
                                    },
                                    {
                                        pattern: Y(
                                            /(\busing\s+<<0>>\s*=\s*)<<1>>(?=\s*;)/
                                                .source,
                                            [w, m]
                                        ),
                                        lookbehind: !0,
                                        inside: v,
                                    },
                                    {
                                        pattern: Y(
                                            /(\busing\s+)<<0>>(?=\s*=)/.source,
                                            [w]
                                        ),
                                        lookbehind: !0,
                                    },
                                    {
                                        pattern: Y(/(\b<<0>>\s+)<<1>>/.source, [
                                            C,
                                            g,
                                        ]),
                                        lookbehind: !0,
                                        inside: v,
                                    },
                                    {
                                        pattern: Y(
                                            /(\bcatch\s*\(\s*)<<0>>/.source,
                                            [M]
                                        ),
                                        lookbehind: !0,
                                        inside: v,
                                    },
                                    {
                                        pattern: Y(/(\bwhere\s+)<<0>>/.source, [
                                            w,
                                        ]),
                                        lookbehind: !0,
                                    },
                                    {
                                        pattern: Y(
                                            /(\b(?:is(?:\s+not)?|as)\s+)<<0>>/
                                                .source,
                                            [R]
                                        ),
                                        lookbehind: !0,
                                        inside: v,
                                    },
                                    {
                                        pattern: Y(
                                            /\b<<0>>(?=\s+(?!<<1>>|with\s*\{)<<2>>(?:\s*[=,;:{)\]]|\s+(?:in|when)\b))/
                                                .source,
                                            [m, e, w]
                                        ),
                                        inside: v,
                                    },
                                ],
                                keyword: f,
                                number: /(?:\b0(?:x[\da-f_]*[\da-f]|b[01_]*[01])|(?:\B\.\d+(?:_+\d+)*|\b\d+(?:_+\d+)*(?:\.\d+(?:_+\d+)*)?)(?:e[-+]?\d+(?:_+\d+)*)?)(?:[dflmu]|lu|ul)?\b/i,
                                operator:
                                    />>=?|<<=?|[-=]>|([-+&|])\1|~|\?\?=?|[-+*/%&|^!=<>]=?/,
                                punctuation: /\?\.?|::|[{}[\];(),.:]/,
                            })),
                            p.languages.insertBefore("csharp", "number", {
                                range: { pattern: /\.\./, alias: "operator" },
                            }),
                            p.languages.insertBefore("csharp", "punctuation", {
                                "named-parameter": {
                                    pattern: Y(
                                        /([(,]\s*)<<0>>(?=\s*:)/.source,
                                        [w]
                                    ),
                                    lookbehind: !0,
                                    alias: "punctuation",
                                },
                            }),
                            p.languages.insertBefore("csharp", "class-name", {
                                namespace: {
                                    pattern: Y(
                                        /(\b(?:namespace|using)\s+)<<0>>(?:\s*\.\s*<<0>>)*(?=\s*[;{])/
                                            .source,
                                        [w]
                                    ),
                                    lookbehind: !0,
                                    inside: { punctuation: /\./ },
                                },
                                "type-expression": {
                                    pattern: Y(
                                        /(\b(?:default|sizeof|typeof)\s*\(\s*(?!\s))(?:[^()\s]|\s(?!\s)|<<0>>)*(?=\s*\))/
                                            .source,
                                        [P]
                                    ),
                                    lookbehind: !0,
                                    alias: "class-name",
                                    inside: v,
                                },
                                "return-type": {
                                    pattern: Y(
                                        /<<0>>(?=\s+(?:<<1>>\s*(?:=>|[({]|\.\s*this\s*\[)|this\s*\[))/
                                            .source,
                                        [m, M]
                                    ),
                                    inside: v,
                                    alias: "class-name",
                                },
                                "constructor-invocation": {
                                    pattern: Y(
                                        /(\bnew\s+)<<0>>(?=\s*[[({])/.source,
                                        [m]
                                    ),
                                    lookbehind: !0,
                                    inside: v,
                                    alias: "class-name",
                                },
                                "generic-method": {
                                    pattern: Y(
                                        /<<0>>\s*<<1>>(?=\s*\()/.source,
                                        [w, A]
                                    ),
                                    inside: {
                                        function: Y(/^<<0>>/.source, [w]),
                                        generic: {
                                            pattern: RegExp(A),
                                            alias: "class-name",
                                            inside: v,
                                        },
                                    },
                                },
                                "type-list": {
                                    pattern: Y(
                                        /\b((?:<<0>>\s+<<1>>|record\s+<<1>>\s*<<5>>|where\s+<<2>>)\s*:\s*)(?:<<3>>|<<4>>|<<1>>\s*<<5>>|<<6>>)(?:\s*,\s*(?:<<3>>|<<4>>|<<6>>))*(?=\s*(?:where|[{;]|=>|$))/
                                            .source,
                                        [
                                            C,
                                            g,
                                            w,
                                            m,
                                            f.source,
                                            P,
                                            /\bnew\s*\(\s*\)/.source,
                                        ]
                                    ),
                                    lookbehind: !0,
                                    inside: {
                                        "record-arguments": {
                                            pattern: Y(
                                                /(^(?!new\s*\()<<0>>\s*)<<1>>/
                                                    .source,
                                                [g, P]
                                            ),
                                            lookbehind: !0,
                                            greedy: !0,
                                            inside: p.languages.csharp,
                                        },
                                        keyword: f,
                                        "class-name": {
                                            pattern: RegExp(m),
                                            greedy: !0,
                                            inside: v,
                                        },
                                        punctuation: /[,()]/,
                                    },
                                },
                                preprocessor: {
                                    pattern: /(^[\t ]*)#.*/m,
                                    lookbehind: !0,
                                    alias: "property",
                                    inside: {
                                        directive: {
                                            pattern:
                                                /(#)\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\b/,
                                            lookbehind: !0,
                                            alias: "keyword",
                                        },
                                    },
                                },
                            }),
                            (e = H(
                                /\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>/
                                    .source,
                                [(R = y + "|" + b)]
                            )),
                            (A = F(
                                H(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [e]),
                                2
                            )),
                            (C =
                                /\b(?:assembly|event|field|method|module|param|property|return|type)\b/
                                    .source),
                            (w = H(/<<0>>(?:\s*\(<<1>>*\))?/.source, [M, A])),
                            p.languages.insertBefore("csharp", "class-name", {
                                attribute: {
                                    pattern: Y(
                                        /((?:^|[^\s\w>)?])\s*\[\s*)(?:<<0>>\s*:\s*)?<<1>>(?:\s*,\s*<<1>>)*(?=\s*\])/
                                            .source,
                                        [C, w]
                                    ),
                                    lookbehind: !0,
                                    greedy: !0,
                                    inside: {
                                        target: {
                                            pattern: Y(
                                                /^<<0>>(?=\s*:)/.source,
                                                [C]
                                            ),
                                            alias: "keyword",
                                        },
                                        "attribute-arguments": {
                                            pattern: Y(/\(<<0>>*\)/.source, [
                                                A,
                                            ]),
                                            inside: p.languages.csharp,
                                        },
                                        "class-name": {
                                            pattern: RegExp(M),
                                            inside: { punctuation: /\./ },
                                        },
                                        punctuation: /[:,]/,
                                    },
                                },
                            }),
                            (_ = /:[^}\r\n]+/.source),
                            (g = F(
                                H(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [e]),
                                2
                            )),
                            (P = H(
                                /\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source,
                                [g, _]
                            )),
                            (f = F(
                                H(
                                    /[^"'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>|\(<<self>>*\)/
                                        .source,
                                    [R]
                                ),
                                2
                            )),
                            (m = H(
                                /\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source,
                                [f, _]
                            )),
                            p.languages.insertBefore("csharp", "string", {
                                "interpolation-string": [
                                    {
                                        pattern: Y(
                                            /(^|[^\\])(?:\$@|@\$)"(?:""|\\[\s\S]|\{\{|<<0>>|[^\\{"])*"/
                                                .source,
                                            [P]
                                        ),
                                        lookbehind: !0,
                                        greedy: !0,
                                        inside: z(P, g),
                                    },
                                    {
                                        pattern: Y(
                                            /(^|[^@\\])\$"(?:\\.|\{\{|<<0>>|[^\\"{])*"/
                                                .source,
                                            [m]
                                        ),
                                        lookbehind: !0,
                                        greedy: !0,
                                        inside: z(m, f),
                                    },
                                ],
                                char: { pattern: RegExp(b), greedy: !0 },
                            }),
                            (p.languages.dotnet = p.languages.cs =
                                p.languages.csharp),
                            (j.languages.aspnet = j.languages.extend("markup", {
                                "page-directive": {
                                    pattern: /<%\s*@.*%>/,
                                    alias: "tag",
                                    inside: {
                                        "page-directive": {
                                            pattern:
                                                /<%\s*@\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,
                                            alias: "tag",
                                        },
                                        rest: j.languages.markup.tag.inside,
                                    },
                                },
                                directive: {
                                    pattern: /<%.*%>/,
                                    alias: "tag",
                                    inside: {
                                        directive: {
                                            pattern: /<%\s*?[$=%#:]{0,2}|%>/,
                                            alias: "tag",
                                        },
                                        rest: j.languages.csharp,
                                    },
                                },
                            })),
                            (j.languages.aspnet.tag.pattern =
                                /<(?!%)\/?[^\s>\/]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/),
                            j.languages.insertBefore(
                                "inside",
                                "punctuation",
                                { directive: j.languages.aspnet.directive },
                                j.languages.aspnet.tag.inside["attr-value"]
                            ),
                            j.languages.insertBefore("aspnet", "comment", {
                                "asp-comment": {
                                    pattern: /<%--[\s\S]*?--%>/,
                                    alias: ["asp", "comment"],
                                },
                            }),
                            j.languages.insertBefore(
                                "aspnet",
                                j.languages.javascript ? "script" : "tag",
                                {
                                    "asp-script": {
                                        pattern:
                                            /(<script(?=.*runat=['"]?server\b)[^>]*>)[\s\S]*?(?=<\/script>)/i,
                                        lookbehind: !0,
                                        alias: ["asp", "script"],
                                        inside: j.languages.csharp || {},
                                    },
                                }
                            ),
                            (j.languages.python = {
                                comment: {
                                    pattern: /(^|[^\\])#.*/,
                                    lookbehind: !0,
                                    greedy: !0,
                                },
                                "string-interpolation": {
                                    pattern:
                                        /(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,
                                    greedy: !0,
                                    inside: {
                                        interpolation: {
                                            pattern:
                                                /((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,
                                            lookbehind: !0,
                                            inside: {
                                                "format-spec": {
                                                    pattern:
                                                        /(:)[^:(){}]+(?=\}$)/,
                                                    lookbehind: !0,
                                                },
                                                "conversion-option": {
                                                    pattern: /![sra](?=[:}]$)/,
                                                    alias: "punctuation",
                                                },
                                                rest: null,
                                            },
                                        },
                                        string: /[\s\S]+/,
                                    },
                                },
                                "triple-quoted-string": {
                                    pattern:
                                        /(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,
                                    greedy: !0,
                                    alias: "string",
                                },
                                string: {
                                    pattern:
                                        /(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,
                                    greedy: !0,
                                },
                                function: {
                                    pattern:
                                        /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,
                                    lookbehind: !0,
                                },
                                "class-name": {
                                    pattern: /(\bclass\s+)\w+/i,
                                    lookbehind: !0,
                                },
                                decorator: {
                                    pattern: /(^[\t ]*)@\w+(?:\.\w+)*/m,
                                    lookbehind: !0,
                                    alias: ["annotation", "punctuation"],
                                    inside: { punctuation: /\./ },
                                },
                                keyword:
                                    /\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,
                                builtin:
                                    /\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,
                                boolean: /\b(?:False|None|True)\b/,
                                number: /\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,
                                operator:
                                    /[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
                                punctuation: /[{}[\];(),.:]/,
                            }),
                            (j.languages.python[
                                "string-interpolation"
                            ].inside.interpolation.inside.rest =
                                j.languages.python),
                            (j.languages.py = j.languages.python),
                            ((v = j).languages.ruby = v.languages.extend(
                                "clike",
                                {
                                    comment: {
                                        pattern: /#.*|^=begin\s[\s\S]*?^=end/m,
                                        greedy: !0,
                                    },
                                    "class-name": {
                                        pattern:
                                            /(\b(?:class|module)\s+|\bcatch\s+\()[\w.\\]+|\b[A-Z_]\w*(?=\s*\.\s*new\b)/,
                                        lookbehind: !0,
                                        inside: { punctuation: /[.\\]/ },
                                    },
                                    keyword:
                                        /\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\b/,
                                    operator:
                                        /\.{2,3}|&\.|===|<?=>|[!=]?~|(?:&&|\|\||<<|>>|\*\*|[+\-*/%<>!^&|=])=?|[?:]/,
                                    punctuation: /[(){}[\].,;]/,
                                }
                            )),
                            v.languages.insertBefore("ruby", "operator", {
                                "double-colon": {
                                    pattern: /::/,
                                    alias: "punctuation",
                                },
                            }),
                            (y = {
                                pattern:
                                    /((?:^|[^\\])(?:\\{2})*)#\{(?:[^{}]|\{[^{}]*\})*\}/,
                                lookbehind: !0,
                                inside: {
                                    content: {
                                        pattern: /^(#\{)[\s\S]+(?=\}$)/,
                                        lookbehind: !0,
                                        inside: v.languages.ruby,
                                    },
                                    delimiter: {
                                        pattern: /^#\{|\}$/,
                                        alias: "punctuation",
                                    },
                                },
                            }),
                            delete v.languages.ruby.function,
                            (w =
                                "(?:" +
                                [
                                    /([^a-zA-Z0-9\s{(\[<=])(?:(?!\1)[^\\]|\\[\s\S])*\1/
                                        .source,
                                    /\((?:[^()\\]|\\[\s\S]|\((?:[^()\\]|\\[\s\S])*\))*\)/
                                        .source,
                                    /\{(?:[^{}\\]|\\[\s\S]|\{(?:[^{}\\]|\\[\s\S])*\})*\}/
                                        .source,
                                    /\[(?:[^\[\]\\]|\\[\s\S]|\[(?:[^\[\]\\]|\\[\s\S])*\])*\]/
                                        .source,
                                    /<(?:[^<>\\]|\\[\s\S]|<(?:[^<>\\]|\\[\s\S])*>)*>/
                                        .source,
                                ].join("|") +
                                ")"),
                            (C =
                                /(?:"(?:\\.|[^"\\\r\n])*"|(?:\b[a-zA-Z_]\w*|[^\s\0-\x7F]+)[?!]?|\$.)/
                                    .source),
                            v.languages.insertBefore("ruby", "keyword", {
                                "regex-literal": [
                                    {
                                        pattern: RegExp(
                                            /%r/.source +
                                                w +
                                                /[egimnosux]{0,6}/.source
                                        ),
                                        greedy: !0,
                                        inside: {
                                            interpolation: y,
                                            regex: /[\s\S]+/,
                                        },
                                    },
                                    {
                                        pattern:
                                            /(^|[^/])\/(?!\/)(?:\[[^\r\n\]]+\]|\\.|[^[/\\\r\n])+\/[egimnosux]{0,6}(?=\s*(?:$|[\r\n,.;})#]))/,
                                        lookbehind: !0,
                                        greedy: !0,
                                        inside: {
                                            interpolation: y,
                                            regex: /[\s\S]+/,
                                        },
                                    },
                                ],
                                variable: /[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,
                                symbol: [
                                    {
                                        pattern: RegExp(/(^|[^:]):/.source + C),
                                        lookbehind: !0,
                                        greedy: !0,
                                    },
                                    {
                                        pattern: RegExp(
                                            /([\r\n{(,][ \t]*)/.source +
                                                C +
                                                /(?=:(?!:))/.source
                                        ),
                                        lookbehind: !0,
                                        greedy: !0,
                                    },
                                ],
                                "method-definition": {
                                    pattern: /(\bdef\s+)\w+(?:\s*\.\s*\w+)?/,
                                    lookbehind: !0,
                                    inside: {
                                        function: /\b\w+$/,
                                        keyword: /^self\b/,
                                        "class-name": /^\w+/,
                                        punctuation: /\./,
                                    },
                                },
                            }),
                            v.languages.insertBefore("ruby", "string", {
                                "string-literal": [
                                    {
                                        pattern: RegExp(
                                            /%[qQiIwWs]?/.source + w
                                        ),
                                        greedy: !0,
                                        inside: {
                                            interpolation: y,
                                            string: /[\s\S]+/,
                                        },
                                    },
                                    {
                                        pattern:
                                            /("|')(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|(?!\1)[^\\#\r\n])*\1/,
                                        greedy: !0,
                                        inside: {
                                            interpolation: y,
                                            string: /[\s\S]+/,
                                        },
                                    },
                                    {
                                        pattern:
                                            /<<[-~]?([a-z_]\w*)[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
                                        alias: "heredoc-string",
                                        greedy: !0,
                                        inside: {
                                            delimiter: {
                                                pattern:
                                                    /^<<[-~]?[a-z_]\w*|\b[a-z_]\w*$/i,
                                                inside: {
                                                    symbol: /\b\w+/,
                                                    punctuation: /^<<[-~]?/,
                                                },
                                            },
                                            interpolation: y,
                                            string: /[\s\S]+/,
                                        },
                                    },
                                    {
                                        pattern:
                                            /<<[-~]?'([a-z_]\w*)'[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
                                        alias: "heredoc-string",
                                        greedy: !0,
                                        inside: {
                                            delimiter: {
                                                pattern:
                                                    /^<<[-~]?'[a-z_]\w*'|\b[a-z_]\w*$/i,
                                                inside: {
                                                    symbol: /\b\w+/,
                                                    punctuation: /^<<[-~]?'|'$/,
                                                },
                                            },
                                            string: /[\s\S]+/,
                                        },
                                    },
                                ],
                                "command-literal": [
                                    {
                                        pattern: RegExp(/%x/.source + w),
                                        greedy: !0,
                                        inside: {
                                            interpolation: y,
                                            command: {
                                                pattern: /[\s\S]+/,
                                                alias: "string",
                                            },
                                        },
                                    },
                                    {
                                        pattern:
                                            /`(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|[^\\`#\r\n])*`/,
                                        greedy: !0,
                                        inside: {
                                            interpolation: y,
                                            command: {
                                                pattern: /[\s\S]+/,
                                                alias: "string",
                                            },
                                        },
                                    },
                                ],
                            }),
                            delete v.languages.ruby.string,
                            v.languages.insertBefore("ruby", "number", {
                                builtin:
                                    /\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\b/,
                                constant: /\b[A-Z][A-Z0-9_]*(?:[?!]|\b)/,
                            }),
                            (v.languages.rb = v.languages.ruby),
                            ((E = j).languages.php = E.languages.extend(
                                "clike",
                                {
                                    keyword:
                                        /\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\b/i,
                                    constant: /\b[A-Z0-9_]{2,}\b/,
                                    comment: {
                                        pattern:
                                            /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
                                        lookbehind: !0,
                                    },
                                }
                            )),
                            E.languages.insertBefore("php", "string", {
                                "shell-comment": {
                                    pattern: /(^|[^\\])#.*/,
                                    lookbehind: !0,
                                    alias: "comment",
                                },
                            }),
                            E.languages.insertBefore("php", "keyword", {
                                delimiter: {
                                    pattern: /\?>|<\?(?:php|=)?/i,
                                    alias: "important",
                                },
                                variable: /\$+(?:\w+\b|(?={))/i,
                                package: {
                                    pattern: /(\\|namespace\s+|use\s+)[\w\\]+/,
                                    lookbehind: !0,
                                    inside: { punctuation: /\\/ },
                                },
                            }),
                            E.languages.insertBefore("php", "operator", {
                                property: {
                                    pattern: /(->)[\w]+/,
                                    lookbehind: !0,
                                },
                            }),
                            E.languages.insertBefore("php", "string", {
                                "nowdoc-string": {
                                    pattern:
                                        /<<<'([^']+)'(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;/,
                                    greedy: !0,
                                    alias: "string",
                                    inside: {
                                        delimiter: {
                                            pattern: /^<<<'[^']+'|[a-z_]\w*;$/i,
                                            alias: "symbol",
                                            inside: {
                                                punctuation: /^<<<'?|[';]$/,
                                            },
                                        },
                                    },
                                },
                                "heredoc-string": {
                                    pattern:
                                        /<<<(?:"([^"]+)"(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;|([a-z_]\w*)(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\2;)/i,
                                    greedy: !0,
                                    alias: "string",
                                    inside: {
                                        delimiter: {
                                            pattern:
                                                /^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,
                                            alias: "symbol",
                                            inside: {
                                                punctuation: /^<<<"?|[";]$/,
                                            },
                                        },
                                        interpolation: null,
                                    },
                                },
                                "single-quoted-string": {
                                    pattern: /'(?:\\[\s\S]|[^\\'])*'/,
                                    greedy: !0,
                                    alias: "string",
                                },
                                "double-quoted-string": {
                                    pattern: /"(?:\\[\s\S]|[^\\"])*"/,
                                    greedy: !0,
                                    alias: "string",
                                    inside: { interpolation: null },
                                },
                            }),
                            delete E.languages.php.string,
                            (A = {
                                pattern:
                                    /{\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\{])\$+(?:\w+(?:\[.+?]|->\w+)*)/,
                                lookbehind: !0,
                                inside: { rest: E.languages.php },
                            }),
                            (E.languages.php[
                                "heredoc-string"
                            ].inside.interpolation = A),
                            (E.languages.php[
                                "double-quoted-string"
                            ].inside.interpolation = A),
                            E.hooks.add("before-tokenize", function (t) {
                                /(?:<\?php|<\?)/gi.test(t.code) &&
                                    E.languages[
                                        "markup-templating"
                                    ].buildPlaceholders(
                                        t,
                                        "php",
                                        /(?:<\?php|<\?)[\s\S]*?(?:\?>|$)/gi
                                    );
                            }),
                            E.hooks.add("after-tokenize", function (t) {
                                E.languages[
                                    "markup-templating"
                                ].tokenizePlaceholders(t, "php");
                            }),
                            (j.languages.typescript = j.languages.extend(
                                "javascript",
                                {
                                    keyword:
                                        /\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|module|declare|constructor|namespace|abstract|require|type)\b/,
                                    builtin:
                                        /\b(?:string|Function|any|number|boolean|Array|symbol|console)\b/,
                                }
                            )),
                            (j.languages.ts = j.languages.typescript),
                            (j.languages.scss = j.languages.extend("css", {
                                comment: {
                                    pattern:
                                        /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
                                    lookbehind: !0,
                                },
                                atrule: {
                                    pattern:
                                        /@[\w-]+(?:\([^()]+\)|[^(])*?(?=\s+[{;])/,
                                    inside: { rule: /@[\w-]+/ },
                                },
                                url: /(?:[-a-z]+-)*url(?=\()/i,
                                selector: {
                                    pattern:
                                        /(?=\S)[^@;{}()]?(?:[^@;{}()]|&|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}]+[:{][^}]+))/m,
                                    inside: {
                                        parent: {
                                            pattern: /&/,
                                            alias: "important",
                                        },
                                        placeholder: /%[-\w]+/,
                                        variable: /\$[-\w]+|#\{\$[-\w]+\}/,
                                    },
                                },
                            })),
                            j.languages.insertBefore("scss", "atrule", {
                                keyword: [
                                    /@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,
                                    {
                                        pattern: /( +)(?:from|through)(?= )/,
                                        lookbehind: !0,
                                    },
                                ],
                            }),
                            (j.languages.scss.property = {
                                pattern:
                                    /(?:[\w-]|\$[-\w]+|#\{\$[-\w]+\})+(?=\s*:)/i,
                                inside: { variable: /\$[-\w]+|#\{\$[-\w]+\}/ },
                            }),
                            j.languages.insertBefore("scss", "important", {
                                variable: /\$[-\w]+|#\{\$[-\w]+\}/,
                            }),
                            j.languages.insertBefore("scss", "function", {
                                placeholder: {
                                    pattern: /%[-\w]+/,
                                    alias: "selector",
                                },
                                statement: {
                                    pattern: /\B!(?:default|optional)\b/i,
                                    alias: "keyword",
                                },
                                boolean: /\b(?:true|false)\b/,
                                null: /\bnull\b/,
                                operator: {
                                    pattern:
                                        /(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|or|not)(?=\s)/,
                                    lookbehind: !0,
                                },
                            }),
                            (j.languages.scss.atrule.inside.rest =
                                j.languages.scss),
                            "undefined" != typeof self &&
                                self.Prism &&
                                self.document &&
                                ((S = "line-numbers"),
                                (k = /\n(?!$)/g),
                                (x = function (t) {
                                    var e,
                                        n,
                                        i = (
                                            (i = t)
                                                ? window.getComputedStyle
                                                    ? getComputedStyle(i)
                                                    : i.currentStyle || null
                                                : null
                                        )["white-space"];
                                    ("pre-wrap" !== i && "pre-line" !== i) ||
                                        ((i = t.querySelector("code")),
                                        (e =
                                            t.querySelector(
                                                ".line-numbers-rows"
                                            )),
                                        (n = t.querySelector(
                                            ".line-numbers-sizer"
                                        )),
                                        (t = i.textContent.split(k)),
                                        n ||
                                            (((n =
                                                document.createElement(
                                                    "span"
                                                )).className =
                                                "line-numbers-sizer"),
                                            i.appendChild(n)),
                                        (n.style.display = "block"),
                                        t.forEach(function (t, i) {
                                            (n.textContent = t || "\n"),
                                                (t =
                                                    n.getBoundingClientRect()
                                                        .height),
                                                (e.children[i].style.height =
                                                    t + "px");
                                        }),
                                        (n.textContent = ""),
                                        (n.style.display = "none"));
                                }),
                                window.addEventListener("resize", function () {
                                    Array.prototype.forEach.call(
                                        document.querySelectorAll("pre." + S),
                                        x
                                    );
                                }),
                                j.hooks.add("complete", function (t) {
                                    var e, n, i;
                                    t.code &&
                                        ((n = /\s*\bline-numbers\b\s*/),
                                        (e = t.element.parentNode)) &&
                                        /pre/i.test(e.nodeName) &&
                                        (n.test(e.className) ||
                                            n.test(t.element.className)) &&
                                        (t.element.querySelector(
                                            ".line-numbers-rows"
                                        ) ||
                                            (n.test(t.element.className) &&
                                                (t.element.className =
                                                    t.element.className.replace(
                                                        n,
                                                        " "
                                                    )),
                                            n.test(e.className) ||
                                                (e.className +=
                                                    " line-numbers"),
                                            (n = (n = t.code.match(k))
                                                ? n.length + 1
                                                : 1),
                                            (n = (n = new Array(n + 1)).join(
                                                "<span></span>"
                                            )),
                                            (i =
                                                document.createElement(
                                                    "span"
                                                )).setAttribute(
                                                "aria-hidden",
                                                "true"
                                            ),
                                            (i.className = "line-numbers-rows"),
                                            (i.innerHTML = n),
                                            e.hasAttribute("data-start") &&
                                                (e.style.counterReset =
                                                    "linenumber " +
                                                    (parseInt(
                                                        e.getAttribute(
                                                            "data-start"
                                                        ),
                                                        10
                                                    ) -
                                                        1)),
                                            t.element.appendChild(i),
                                            x(e),
                                            j.hooks.run("line-numbers", t)));
                                }),
                                j.hooks.add("line-numbers", function (t) {
                                    (t.plugins = t.plugins || {}),
                                        (t.plugins.lineNumbers = !0);
                                }),
                                (j.plugins.lineNumbers = {
                                    getLine: function (t, e) {
                                        var n, i;
                                        if (
                                            "PRE" === t.tagName &&
                                            t.classList.contains(S)
                                        )
                                            return (
                                                (n =
                                                    t.querySelector(
                                                        ".line-numbers-rows"
                                                    )),
                                                (i =
                                                    (e =
                                                        (i =
                                                            (t =
                                                                parseInt(
                                                                    t.getAttribute(
                                                                        "data-start"
                                                                    ),
                                                                    10
                                                                ) || 1) +
                                                            (n.children.length -
                                                                1)) <
                                                        (e = e < t ? t : e)
                                                            ? i
                                                            : e) - t),
                                                n.children[i]
                                            );
                                    },
                                })),
                            "undefined" != typeof self &&
                                self.Prism &&
                                self.document &&
                                ((T = []),
                                (O = {}),
                                (L = function () {}),
                                (j.plugins.toolbar = {}),
                                (M = j.plugins.toolbar.registerButton =
                                    function (t, e) {
                                        var n =
                                            "function" == typeof e
                                                ? e
                                                : function (t) {
                                                      var n;
                                                      return (
                                                          "function" ==
                                                          typeof e.onClick
                                                              ? (((n =
                                                                    document.createElement(
                                                                        "button"
                                                                    )).type =
                                                                    "button"),
                                                                n.addEventListener(
                                                                    "click",
                                                                    function () {
                                                                        e.onClick.call(
                                                                            this,
                                                                            t
                                                                        );
                                                                    }
                                                                ))
                                                              : "string" ==
                                                                typeof e.url
                                                              ? ((n =
                                                                    document.createElement(
                                                                        "a"
                                                                    )).href =
                                                                    e.url)
                                                              : (n =
                                                                    document.createElement(
                                                                        "span"
                                                                    )),
                                                          (n.textContent =
                                                              e.text),
                                                          n
                                                      );
                                                  };
                                        T.push((O[t] = n));
                                    }),
                                (e = j.plugins.toolbar.hook =
                                    function (t) {
                                        var e,
                                            n,
                                            i = t.element.parentNode;
                                        i &&
                                            /pre/i.test(i.nodeName) &&
                                            (i.parentNode.classList.contains(
                                                "code-toolbar"
                                            ) ||
                                                ((e =
                                                    document.createElement(
                                                        "div"
                                                    )).classList.add(
                                                    "code-toolbar"
                                                ),
                                                i.parentNode.insertBefore(e, i),
                                                e.appendChild(i),
                                                (n =
                                                    document.createElement(
                                                        "div"
                                                    )).classList.add("toolbar"),
                                                (T = document.body.hasAttribute(
                                                    "data-toolbar-order"
                                                )
                                                    ? document.body
                                                          .getAttribute(
                                                              "data-toolbar-order"
                                                          )
                                                          .split(",")
                                                          .map(function (t) {
                                                              return O[t] || L;
                                                          })
                                                    : T).forEach(function (e) {
                                                    var i;
                                                    (e = e(t)) &&
                                                        ((i =
                                                            document.createElement(
                                                                "div"
                                                            )).classList.add(
                                                            "toolbar-item"
                                                        ),
                                                        i.appendChild(e),
                                                        n.appendChild(i));
                                                }),
                                                e.appendChild(n)));
                                    }),
                                M("label", function (t) {
                                    if (
                                        (t = t.element.parentNode) &&
                                        /pre/i.test(t.nodeName) &&
                                        t.hasAttribute("data-label")
                                    ) {
                                        var e,
                                            n,
                                            i = t.getAttribute("data-label");
                                        try {
                                            n = document.querySelector(
                                                "template#" + i
                                            );
                                        } catch (s) {}
                                        return (
                                            n
                                                ? (e = n.content)
                                                : (t.hasAttribute("data-url")
                                                      ? ((e =
                                                            document.createElement(
                                                                "a"
                                                            )).href =
                                                            t.getAttribute(
                                                                "data-url"
                                                            ))
                                                      : (e =
                                                            document.createElement(
                                                                "span"
                                                            )),
                                                  (e.textContent = i)),
                                            e
                                        );
                                    }
                                }),
                                j.hooks.add("complete", e)),
                            ("undefined" == typeof self || self.Prism) &&
                                self.document &&
                                Function.prototype.bind)
                        ) {
                            var V,
                                K,
                                q = {
                                    gradient: {
                                        create:
                                            ((V = {}),
                                            function () {
                                                new j.plugins.Previewer(
                                                    "gradient",
                                                    function (t) {
                                                        return (
                                                            (this.firstChild.style.backgroundImage =
                                                                ""),
                                                            (this.firstChild.style.backgroundImage =
                                                                (function (t) {
                                                                    var e,
                                                                        n,
                                                                        i,
                                                                        s,
                                                                        o,
                                                                        r,
                                                                        a,
                                                                        l;
                                                                    return (
                                                                        V[t] ||
                                                                        ((o =
                                                                            (e =
                                                                                t.match(
                                                                                    /^(\b|\B-[a-z]{1,10}-)((?:repeating-)?(?:linear|radial)-gradient)/
                                                                                )) &&
                                                                            e[1]),
                                                                        (e =
                                                                            e &&
                                                                            e[2]),
                                                                        (n = t
                                                                            .replace(
                                                                                /^(?:\b|\B-[a-z]{1,10}-)(?:repeating-)?(?:linear|radial)-gradient\(|\)$/g,
                                                                                ""
                                                                            )
                                                                            .split(
                                                                                /\s*,\s*/
                                                                            )),
                                                                        0 <=
                                                                        e.indexOf(
                                                                            "linear"
                                                                        )
                                                                            ? (V[
                                                                                  t
                                                                              ] =
                                                                                  ((r =
                                                                                      e),
                                                                                  (l =
                                                                                      "180deg"),
                                                                                  /^(?:-?\d*\.?\d+(?:deg|rad)|to\b|top|right|bottom|left)/.test(
                                                                                      (a =
                                                                                          n)[0]
                                                                                  ) &&
                                                                                      (l =
                                                                                          a.shift()).indexOf(
                                                                                          "to "
                                                                                      ) <
                                                                                          0 &&
                                                                                      (0 <=
                                                                                      l.indexOf(
                                                                                          "top"
                                                                                      )
                                                                                          ? (l =
                                                                                                0 <=
                                                                                                l.indexOf(
                                                                                                    "left"
                                                                                                )
                                                                                                    ? "to bottom right"
                                                                                                    : 0 <=
                                                                                                      l.indexOf(
                                                                                                          "right"
                                                                                                      )
                                                                                                    ? "to bottom left"
                                                                                                    : "to bottom")
                                                                                          : 0 <=
                                                                                            l.indexOf(
                                                                                                "bottom"
                                                                                            )
                                                                                          ? (l =
                                                                                                0 <=
                                                                                                l.indexOf(
                                                                                                    "left"
                                                                                                )
                                                                                                    ? "to top right"
                                                                                                    : 0 <=
                                                                                                      l.indexOf(
                                                                                                          "right"
                                                                                                      )
                                                                                                    ? "to top left"
                                                                                                    : "to top")
                                                                                          : 0 <=
                                                                                            l.indexOf(
                                                                                                "left"
                                                                                            )
                                                                                          ? (l =
                                                                                                "to right")
                                                                                          : 0 <=
                                                                                            l.indexOf(
                                                                                                "right"
                                                                                            )
                                                                                          ? (l =
                                                                                                "to left")
                                                                                          : o &&
                                                                                            (0 <=
                                                                                            l.indexOf(
                                                                                                "deg"
                                                                                            )
                                                                                                ? (l =
                                                                                                      90 -
                                                                                                      parseFloat(
                                                                                                          l
                                                                                                      ) +
                                                                                                      "deg")
                                                                                                : 0 <=
                                                                                                      l.indexOf(
                                                                                                          "rad"
                                                                                                      ) &&
                                                                                                  (l =
                                                                                                      Math.PI /
                                                                                                          2 -
                                                                                                      parseFloat(
                                                                                                          l
                                                                                                      ) +
                                                                                                      "rad"))),
                                                                                  r +
                                                                                      "(" +
                                                                                      l +
                                                                                      "," +
                                                                                      a.join(
                                                                                          ","
                                                                                      ) +
                                                                                      ")"))
                                                                            : 0 <=
                                                                              e.indexOf(
                                                                                  "radial"
                                                                              )
                                                                            ? (V[
                                                                                  t
                                                                              ] =
                                                                                  ((o =
                                                                                      e),
                                                                                  (r =
                                                                                      n)[0].indexOf(
                                                                                      "at"
                                                                                  ) <
                                                                                  0
                                                                                      ? ((l =
                                                                                            "center"),
                                                                                        (a =
                                                                                            "ellipse"),
                                                                                        (i =
                                                                                            "farthest-corner"),
                                                                                        /\bcenter|top|right|bottom|left\b|^\d+/.test(
                                                                                            r[0]
                                                                                        ) &&
                                                                                            (l =
                                                                                                r
                                                                                                    .shift()
                                                                                                    .replace(
                                                                                                        /\s*-?\d+(?:rad|deg)\s*/,
                                                                                                        ""
                                                                                                    )),
                                                                                        /\bcircle|ellipse|closest|farthest|contain|cover\b/.test(
                                                                                            r[0]
                                                                                        ) &&
                                                                                            (!(s =
                                                                                                r
                                                                                                    .shift()
                                                                                                    .split(
                                                                                                        /\s+/
                                                                                                    ))[0] ||
                                                                                                ("circle" !==
                                                                                                    s[0] &&
                                                                                                    "ellipse" !==
                                                                                                        s[0]) ||
                                                                                                (a =
                                                                                                    s.shift()),
                                                                                            "cover" ===
                                                                                            (i =
                                                                                                s[0]
                                                                                                    ? s.shift()
                                                                                                    : i)
                                                                                                ? (i =
                                                                                                      "farthest-corner")
                                                                                                : "contain" ===
                                                                                                      i &&
                                                                                                  (i =
                                                                                                      "clothest-side")),
                                                                                        o +
                                                                                            "(" +
                                                                                            a +
                                                                                            " " +
                                                                                            i +
                                                                                            " at " +
                                                                                            l +
                                                                                            "," +
                                                                                            r.join(
                                                                                                ","
                                                                                            ) +
                                                                                            ")")
                                                                                      : o +
                                                                                        "(" +
                                                                                        r.join(
                                                                                            ","
                                                                                        ) +
                                                                                        ")"))
                                                                            : (V[
                                                                                  t
                                                                              ] =
                                                                                  e +
                                                                                  "(" +
                                                                                  n.join(
                                                                                      ","
                                                                                  ) +
                                                                                  ")"))
                                                                    );
                                                                })(t)),
                                                            !!this.firstChild
                                                                .style
                                                                .backgroundImage
                                                        );
                                                    },
                                                    "*",
                                                    function () {
                                                        this._elt.innerHTML =
                                                            "<div></div>";
                                                    }
                                                );
                                            }),
                                        tokens: {
                                            gradient: {
                                                pattern:
                                                    /(?:\b|\B-[a-z]{1,10}-)(?:repeating-)?(?:linear|radial)-gradient\((?:(?:rgb|hsl)a?\(.+?\)|[^\)])+\)/gi,
                                                inside: {
                                                    function: /[\w-]+(?=\()/,
                                                    punctuation: /[(),]/,
                                                },
                                            },
                                        },
                                        languages: {
                                            css: !0,
                                            less: !0,
                                            sass: [
                                                {
                                                    lang: "sass",
                                                    before: "punctuation",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "variable-line"
                                                        ],
                                                },
                                                {
                                                    lang: "sass",
                                                    before: "punctuation",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "property-line"
                                                        ],
                                                },
                                            ],
                                            scss: !0,
                                            stylus: [
                                                {
                                                    lang: "stylus",
                                                    before: "func",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "property-declaration"
                                                        ].inside,
                                                },
                                                {
                                                    lang: "stylus",
                                                    before: "func",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "variable-declaration"
                                                        ].inside,
                                                },
                                            ],
                                        },
                                    },
                                    angle: {
                                        create: function () {
                                            new j.plugins.Previewer(
                                                "angle",
                                                function (t) {
                                                    var e,
                                                        n = parseFloat(t);
                                                    t = t.match(/[a-z]+$/i);
                                                    if (!n || !t) return !1;
                                                    switch (t[0]) {
                                                        case "deg":
                                                            e = 360;
                                                            break;
                                                        case "grad":
                                                            e = 400;
                                                            break;
                                                        case "rad":
                                                            e = 2 * Math.PI;
                                                            break;
                                                        case "turn":
                                                            e = 1;
                                                    }
                                                    return (
                                                        (t = (100 * n) / e),
                                                        (t %= 100),
                                                        this[
                                                            (n < 0
                                                                ? "set"
                                                                : "remove") +
                                                                "Attribute"
                                                        ]("data-negative", ""),
                                                        (this.querySelector(
                                                            "circle"
                                                        ).style.strokeDasharray =
                                                            Math.abs(t) +
                                                            ",500"),
                                                        !0
                                                    );
                                                },
                                                "*",
                                                function () {
                                                    this._elt.innerHTML =
                                                        '<svg viewBox="0 0 64 64"><circle r="16" cy="32" cx="32"></circle></svg>';
                                                }
                                            );
                                        },
                                        tokens: {
                                            angle: /(?:\b|\B-|(?=\B\.))\d*\.?\d+(?:deg|g?rad|turn)\b/i,
                                        },
                                        languages: {
                                            css: !0,
                                            less: !0,
                                            markup: {
                                                lang: "markup",
                                                before: "punctuation",
                                                inside: "inside",
                                                root:
                                                    j.languages.markup &&
                                                    j.languages.markup.tag
                                                        .inside["attr-value"],
                                            },
                                            sass: [
                                                {
                                                    lang: "sass",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "property-line"
                                                        ],
                                                },
                                                {
                                                    lang: "sass",
                                                    before: "operator",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "variable-line"
                                                        ],
                                                },
                                            ],
                                            scss: !0,
                                            stylus: [
                                                {
                                                    lang: "stylus",
                                                    before: "func",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "property-declaration"
                                                        ].inside,
                                                },
                                                {
                                                    lang: "stylus",
                                                    before: "func",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "variable-declaration"
                                                        ].inside,
                                                },
                                            ],
                                        },
                                    },
                                    color: {
                                        create: function () {
                                            new j.plugins.Previewer(
                                                "color",
                                                function (t) {
                                                    return (
                                                        (this.style.backgroundColor =
                                                            ""),
                                                        (this.style.backgroundColor =
                                                            t),
                                                        !!this.style
                                                            .backgroundColor
                                                    );
                                                }
                                            );
                                        },
                                        tokens: {
                                            color: {
                                                pattern:
                                                    /\B#(?:[0-9a-f]{3}){1,2}\b|\b(?:rgb|hsl)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:rgb|hsl)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B|\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGray|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGray|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGray|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gray|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGray|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGray|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGray|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i,
                                                inside: {
                                                    function: /[\w-]+(?=\()/,
                                                    punctuation: /[(),]/,
                                                },
                                            },
                                        },
                                        languages: {
                                            css: !0,
                                            less: !0,
                                            markup: {
                                                lang: "markup",
                                                before: "punctuation",
                                                inside: "inside",
                                                root:
                                                    j.languages.markup &&
                                                    j.languages.markup.tag
                                                        .inside["attr-value"],
                                            },
                                            sass: [
                                                {
                                                    lang: "sass",
                                                    before: "punctuation",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "variable-line"
                                                        ],
                                                },
                                                {
                                                    lang: "sass",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "property-line"
                                                        ],
                                                },
                                            ],
                                            scss: !0,
                                            stylus: [
                                                {
                                                    lang: "stylus",
                                                    before: "hexcode",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "property-declaration"
                                                        ].inside,
                                                },
                                                {
                                                    lang: "stylus",
                                                    before: "hexcode",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "variable-declaration"
                                                        ].inside,
                                                },
                                            ],
                                        },
                                    },
                                    easing: {
                                        create: function () {
                                            new j.plugins.Previewer(
                                                "easing",
                                                function (t) {
                                                    var e;
                                                    return (
                                                        4 ===
                                                            (t = (t =
                                                                {
                                                                    linear: "0,0,1,1",
                                                                    ease: ".25,.1,.25,1",
                                                                    "ease-in":
                                                                        ".42,0,1,1",
                                                                    "ease-out":
                                                                        "0,0,.58,1",
                                                                    "ease-in-out":
                                                                        ".42,0,.58,1",
                                                                }[t] ||
                                                                t).match(
                                                                /-?\d*\.?\d+/g
                                                            )).length &&
                                                        ((t = t.map(function (
                                                            t,
                                                            e
                                                        ) {
                                                            return (
                                                                100 *
                                                                (e % 2
                                                                    ? 1 - t
                                                                    : t)
                                                            );
                                                        })),
                                                        this.querySelector(
                                                            "path"
                                                        ).setAttribute(
                                                            "d",
                                                            "M0,100 C" +
                                                                t[0] +
                                                                "," +
                                                                t[1] +
                                                                ", " +
                                                                t[2] +
                                                                "," +
                                                                t[3] +
                                                                ", 100,0"
                                                        ),
                                                        (e =
                                                            this.querySelectorAll(
                                                                "line"
                                                            ))[0].setAttribute(
                                                            "x2",
                                                            t[0]
                                                        ),
                                                        e[0].setAttribute(
                                                            "y2",
                                                            t[1]
                                                        ),
                                                        e[1].setAttribute(
                                                            "x2",
                                                            t[2]
                                                        ),
                                                        e[1].setAttribute(
                                                            "y2",
                                                            t[3]
                                                        ),
                                                        !0)
                                                    );
                                                },
                                                "*",
                                                function () {
                                                    this._elt.innerHTML =
                                                        '<svg viewBox="-20 -20 140 140" width="100" height="100"><defs><marker id="prism-previewer-easing-marker" viewBox="0 0 4 4" refX="2" refY="2" markerUnits="strokeWidth"><circle cx="2" cy="2" r="1.5" /></marker></defs><path d="M0,100 C20,50, 40,30, 100,0" /><line x1="0" y1="100" x2="20" y2="50" marker-start="url(' +
                                                        location.href +
                                                        '#prism-previewer-easing-marker)" marker-end="url(' +
                                                        location.href +
                                                        '#prism-previewer-easing-marker)" /><line x1="100" y1="0" x2="40" y2="30" marker-start="url(' +
                                                        location.href +
                                                        '#prism-previewer-easing-marker)" marker-end="url(' +
                                                        location.href +
                                                        '#prism-previewer-easing-marker)" /></svg>';
                                                }
                                            );
                                        },
                                        tokens: {
                                            easing: {
                                                pattern:
                                                    /\bcubic-bezier\((?:-?\d*\.?\d+,\s*){3}-?\d*\.?\d+\)\B|\b(?:linear|ease(?:-in)?(?:-out)?)(?=\s|[;}]|$)/i,
                                                inside: {
                                                    function: /[\w-]+(?=\()/,
                                                    punctuation: /[(),]/,
                                                },
                                            },
                                        },
                                        languages: {
                                            css: !0,
                                            less: !0,
                                            sass: [
                                                {
                                                    lang: "sass",
                                                    inside: "inside",
                                                    before: "punctuation",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "variable-line"
                                                        ],
                                                },
                                                {
                                                    lang: "sass",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "property-line"
                                                        ],
                                                },
                                            ],
                                            scss: !0,
                                            stylus: [
                                                {
                                                    lang: "stylus",
                                                    before: "hexcode",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "property-declaration"
                                                        ].inside,
                                                },
                                                {
                                                    lang: "stylus",
                                                    before: "hexcode",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "variable-declaration"
                                                        ].inside,
                                                },
                                            ],
                                        },
                                    },
                                    time: {
                                        create: function () {
                                            new j.plugins.Previewer(
                                                "time",
                                                function (t) {
                                                    var e = parseFloat(t);
                                                    t = t.match(/[a-z]+$/i);
                                                    return !(
                                                        !e ||
                                                        !t ||
                                                        ((t = t[0]),
                                                        (this.querySelector(
                                                            "circle"
                                                        ).style.animationDuration =
                                                            2 * e + t),
                                                        0)
                                                    );
                                                },
                                                "*",
                                                function () {
                                                    this._elt.innerHTML =
                                                        '<svg viewBox="0 0 64 64"><circle r="16" cy="32" cx="32"></circle></svg>';
                                                }
                                            );
                                        },
                                        tokens: {
                                            time: /(?:\b|\B-|(?=\B\.))\d*\.?\d+m?s\b/i,
                                        },
                                        languages: {
                                            css: !0,
                                            less: !0,
                                            markup: {
                                                lang: "markup",
                                                before: "punctuation",
                                                inside: "inside",
                                                root:
                                                    j.languages.markup &&
                                                    j.languages.markup.tag
                                                        .inside["attr-value"],
                                            },
                                            sass: [
                                                {
                                                    lang: "sass",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "property-line"
                                                        ],
                                                },
                                                {
                                                    lang: "sass",
                                                    before: "operator",
                                                    inside: "inside",
                                                    root:
                                                        j.languages.sass &&
                                                        j.languages.sass[
                                                            "variable-line"
                                                        ],
                                                },
                                            ],
                                            scss: !0,
                                            stylus: [
                                                {
                                                    lang: "stylus",
                                                    before: "hexcode",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "property-declaration"
                                                        ].inside,
                                                },
                                                {
                                                    lang: "stylus",
                                                    before: "hexcode",
                                                    inside: "rest",
                                                    root:
                                                        j.languages.stylus &&
                                                        j.languages.stylus[
                                                            "variable-declaration"
                                                        ].inside,
                                                },
                                            ],
                                        },
                                    },
                                },
                                U = /(?:^|\s)token(?=$|\s)/,
                                G = /(?:^|\s)active(?=$|\s)/g,
                                Z = /(?:^|\s)flipped(?=$|\s)/g,
                                Q = function (t, e, n, i) {
                                    (this._elt = null),
                                        (this._type = t),
                                        (this._clsRegexp = RegExp(
                                            "(?:^|\\s)" + t + "(?=$|\\s)"
                                        )),
                                        (this._token = null),
                                        (this.updater = e),
                                        (this._mouseout =
                                            this.mouseout.bind(this)),
                                        (this.initializer = i);
                                    var s = this;
                                    (n =
                                        "Array" !==
                                        j.util.type((n = n || ["*"]))
                                            ? [n]
                                            : n).forEach(function (t) {
                                        "string" != typeof t && (t = t.lang),
                                            Q.byLanguages[t] ||
                                                (Q.byLanguages[t] = []),
                                            Q.byLanguages[t].indexOf(s) < 0 &&
                                                Q.byLanguages[t].push(s);
                                    }),
                                        (Q.byType[t] = this);
                                };
                            for (K in ((Q.prototype.init = function () {
                                this._elt ||
                                    ((this._elt =
                                        document.createElement("div")),
                                    (this._elt.className =
                                        "prism-previewer prism-previewer-" +
                                        this._type),
                                    document.body.appendChild(this._elt),
                                    this.initializer && this.initializer());
                            }),
                            (Q.prototype.isDisabled = function (t) {
                                do {
                                    if (
                                        t.hasAttribute &&
                                        t.hasAttribute("data-previewers")
                                    )
                                        return (
                                            -1 ===
                                            (
                                                t.getAttribute(
                                                    "data-previewers"
                                                ) || ""
                                            )
                                                .split(/\s+/)
                                                .indexOf(this._type)
                                        );
                                } while ((t = t.parentNode));
                                return !1;
                            }),
                            (Q.prototype.check = function (t) {
                                if (
                                    !U.test(t.className) ||
                                    !this.isDisabled(t)
                                ) {
                                    do {
                                        if (
                                            U.test(t.className) &&
                                            this._clsRegexp.test(t.className)
                                        )
                                            break;
                                    } while ((t = t.parentNode));
                                    t &&
                                        t !== this._token &&
                                        ((this._token = t), this.show());
                                }
                            }),
                            (Q.prototype.mouseout = function () {
                                this._token.removeEventListener(
                                    "mouseout",
                                    this._mouseout,
                                    !1
                                ),
                                    (this._token = null),
                                    this.hide();
                            }),
                            (Q.prototype.show = function () {
                                var t;
                                this._elt || this.init(),
                                    this._token &&
                                        (this.updater.call(
                                            this._elt,
                                            this._token.textContent
                                        )
                                            ? (this._token.addEventListener(
                                                  "mouseout",
                                                  this._mouseout,
                                                  !1
                                              ),
                                              (t = (function (t) {
                                                  var e = 0,
                                                      n = 0,
                                                      i = t;
                                                  if (i.parentNode) {
                                                      for (
                                                          ;
                                                          (e += i.offsetLeft),
                                                              (n +=
                                                                  i.offsetTop),
                                                              (i =
                                                                  i.offsetParent) &&
                                                                  i.nodeType <
                                                                      9;

                                                      );
                                                      for (
                                                          i = t;
                                                          (e -= i.scrollLeft),
                                                              (n -=
                                                                  i.scrollTop),
                                                              (i =
                                                                  i.parentNode) &&
                                                                  !/body/i.test(
                                                                      i.nodeName
                                                                  );

                                                      );
                                                  }
                                                  return {
                                                      top: n,
                                                      right:
                                                          innerWidth -
                                                          e -
                                                          t.offsetWidth,
                                                      bottom:
                                                          innerHeight -
                                                          n -
                                                          t.offsetHeight,
                                                      left: e,
                                                  };
                                              })(this._token)),
                                              (this._elt.className +=
                                                  " active"),
                                              0 < t.top - this._elt.offsetHeight
                                                  ? ((this._elt.className =
                                                        this._elt.className.replace(
                                                            Z,
                                                            ""
                                                        )),
                                                    (this._elt.style.top =
                                                        t.top + "px"),
                                                    (this._elt.style.bottom =
                                                        ""))
                                                  : ((this._elt.className +=
                                                        " flipped"),
                                                    (this._elt.style.bottom =
                                                        t.bottom + "px"),
                                                    (this._elt.style.top = "")),
                                              (this._elt.style.left =
                                                  t.left +
                                                  Math.min(
                                                      200,
                                                      this._token.offsetWidth /
                                                          2
                                                  ) +
                                                  "px"))
                                            : this.hide());
                            }),
                            (Q.prototype.hide = function () {
                                this._elt.className =
                                    this._elt.className.replace(G, "");
                            }),
                            (Q.byLanguages = {}),
                            (Q.byType = {}),
                            (Q.initEvents = function (t, e) {
                                var n = [];
                                Q.byLanguages[e] &&
                                    (n = n.concat(Q.byLanguages[e])),
                                    Q.byLanguages["*"] &&
                                        (n = n.concat(Q.byLanguages["*"])),
                                    t.addEventListener(
                                        "mouseover",
                                        function (t) {
                                            var e = t.target;
                                            n.forEach(function (t) {
                                                t.check(e);
                                            });
                                        },
                                        !1
                                    );
                            }),
                            (j.plugins.Previewer = Q),
                            j.hooks.add("before-highlight", function (t) {
                                for (var e in q) {
                                    var n,
                                        i = q[e].languages;
                                    t.language &&
                                        i[t.language] &&
                                        !i[t.language].initialized &&
                                        ((n = i[t.language]),
                                        (n =
                                            "Array" !== j.util.type(n)
                                                ? [n]
                                                : n).forEach(function (n) {
                                            var s, o, r, a;
                                            !0 === n
                                                ? ((s = "important"),
                                                  (o = t.language))
                                                : ((s =
                                                      n.before || "important"),
                                                  (o = n.inside || n.lang),
                                                  (r = n.root || j.languages),
                                                  (a = n.skip)),
                                                (n = t.language),
                                                !a &&
                                                    j.languages[n] &&
                                                    (j.languages.insertBefore(
                                                        o,
                                                        s,
                                                        q[e].tokens,
                                                        r
                                                    ),
                                                    (t.grammar =
                                                        j.languages[n]),
                                                    (i[t.language] = {
                                                        initialized: !0,
                                                    }));
                                        }));
                                }
                            }),
                            j.hooks.add("after-highlight", function (t) {
                                (Q.byLanguages["*"] ||
                                    Q.byLanguages[t.language]) &&
                                    Q.initEvents(t.element, t.language);
                            }),
                            q))
                                q[K].create();
                        }
                        function J(t) {
                            this.defaults = D({}, t);
                        }
                        function tt(t) {
                            for (var e = 0, n = 0; n < t.length; ++n)
                                t.charCodeAt(n) == "\t".charCodeAt(0) &&
                                    (e += 3);
                            return t.length + e;
                        }
                        (D =
                            Object.assign ||
                            function (t, e) {
                                for (var n in e)
                                    e.hasOwnProperty(n) && (t[n] = e[n]);
                                return t;
                            }),
                            (J.prototype = {
                                setDefaults: function (t) {
                                    this.defaults = D(this.defaults, t);
                                },
                                normalize: function (t, e) {
                                    for (var n in (e = D(this.defaults, e))) {
                                        var i = n.replace(
                                            /-(\w)/g,
                                            function (t, e) {
                                                return e.toUpperCase();
                                            }
                                        );
                                        "normalize" !== n &&
                                            "setDefaults" !== i &&
                                            e[n] &&
                                            this[i] &&
                                            (t = this[i].call(this, t, e[n]));
                                    }
                                    return t;
                                },
                                leftTrim: function (t) {
                                    return t.replace(/^\s+/, "");
                                },
                                rightTrim: function (t) {
                                    return t.replace(/\s+$/, "");
                                },
                                tabsToSpaces: function (t, e) {
                                    return (
                                        (e = 0 | e || 4),
                                        t.replace(
                                            /\t/g,
                                            new Array(++e).join(" ")
                                        )
                                    );
                                },
                                spacesToTabs: function (t, e) {
                                    return (
                                        (e = 0 | e || 4),
                                        t.replace(
                                            new RegExp(" {" + e + "}", "g"),
                                            "\t"
                                        )
                                    );
                                },
                                removeTrailing: function (t) {
                                    return t.replace(/\s*?$/gm, "");
                                },
                                removeInitialLineFeed: function (t) {
                                    return t.replace(/^(?:\r?\n|\r)/, "");
                                },
                                removeIndent: function (t) {
                                    var e = t.match(/^[^\S\n\r]*(?=\S)/gm);
                                    return e &&
                                        e[0].length &&
                                        (e.sort(function (t, e) {
                                            return t.length - e.length;
                                        }),
                                        e[0].length)
                                        ? t.replace(
                                              new RegExp("^" + e[0], "gm"),
                                              ""
                                          )
                                        : t;
                                },
                                indent: function (t, e) {
                                    return t.replace(
                                        /^[^\S\n\r]*(?=\S)/gm,
                                        new Array(++e).join("\t") + "$&"
                                    );
                                },
                                breakLines: function (t, e) {
                                    e = (!0 !== e && 0 | e) || 80;
                                    for (
                                        var n = t.split("\n"), i = 0;
                                        i < n.length;
                                        ++i
                                    )
                                        if (!(tt(n[i]) <= e)) {
                                            for (
                                                var s = n[i].split(/(\s+)/g),
                                                    o = 0,
                                                    r = 0;
                                                r < s.length;
                                                ++r
                                            ) {
                                                var a = tt(s[r]);
                                                e < (o += a) &&
                                                    ((s[r] = "\n" + s[r]),
                                                    (o = a));
                                            }
                                            n[i] = s.join("");
                                        }
                                    return n.join("\n");
                                },
                            }),
                            t.exports && (t.exports = J),
                            void 0 !== j &&
                                ((j.plugins.NormalizeWhitespace = new J({
                                    "remove-trailing": !0,
                                    "remove-indent": !0,
                                    "left-trim": !0,
                                    "right-trim": !0,
                                })),
                                j.hooks.add(
                                    "before-sanity-check",
                                    function (t) {
                                        var e = j.plugins.NormalizeWhitespace;
                                        if (
                                            !t.settings ||
                                            !1 !==
                                                t.settings[
                                                    "whitespace-normalization"
                                                ]
                                        )
                                            if (
                                                (t.element &&
                                                    t.element.parentNode) ||
                                                !t.code
                                            ) {
                                                var n = t.element.parentNode,
                                                    i =
                                                        /\bno-whitespace-normalization\b/;
                                                if (
                                                    t.code &&
                                                    n &&
                                                    "pre" ===
                                                        n.nodeName.toLowerCase() &&
                                                    !i.test(n.className) &&
                                                    !i.test(t.element.className)
                                                ) {
                                                    for (
                                                        var s = n.childNodes,
                                                            o = "",
                                                            r = "",
                                                            a = !1,
                                                            l = 0;
                                                        l < s.length;
                                                        ++l
                                                    ) {
                                                        var c = s[l];
                                                        c == t.element
                                                            ? (a = !0)
                                                            : "#text" ===
                                                                  c.nodeName &&
                                                              (a
                                                                  ? (r +=
                                                                        c.nodeValue)
                                                                  : (o +=
                                                                        c.nodeValue),
                                                              n.removeChild(c),
                                                              --l);
                                                    }
                                                    t.element.children.length &&
                                                    j.plugins.KeepMarkup
                                                        ? ((i =
                                                              o +
                                                              t.element
                                                                  .innerHTML +
                                                              r),
                                                          (t.element.innerHTML =
                                                              e.normalize(
                                                                  i,
                                                                  t.settings
                                                              )),
                                                          (t.code =
                                                              t.element.textContent))
                                                        : ((t.code =
                                                              o + t.code + r),
                                                          (t.code = e.normalize(
                                                              t.code,
                                                              t.settings
                                                          )));
                                                }
                                            } else
                                                t.code = e.normalize(
                                                    t.code,
                                                    t.settings
                                                );
                                    }
                                )),
                            "undefined" != typeof self &&
                                self.Prism &&
                                self.document &&
                                (j.plugins.toolbar
                                    ? ((N =
                                          (N = window.ClipboardJS || void 0) ||
                                          n(117)),
                                      ($ = []),
                                      N ||
                                          ((R =
                                              document.createElement("script")),
                                          (P = document.querySelector("head")),
                                          (R.onload = function () {
                                              if ((N = window.ClipboardJS))
                                                  for (; $.length; ) $.pop()();
                                          }),
                                          (R.src =
                                              "https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js"),
                                          P.appendChild(R)),
                                      j.plugins.toolbar.registerButton(
                                          "copy-to-clipboard",
                                          function (t) {
                                              var e =
                                                  document.createElement(
                                                      "button"
                                                  );
                                              return (
                                                  (e.innerHTML = "Copy"),
                                                  (e.classList =
                                                      "btn-copy-code btn btn-sm"),
                                                  e.setAttribute(
                                                      "data-mdb-ripple-color",
                                                      "dark"
                                                  ),
                                                  e.setAttribute(
                                                      "data-mdb-ripple-unbound",
                                                      "true"
                                                  ),
                                                  N ? n() : $.push(n),
                                                  e
                                              );
                                              function n() {
                                                  var n = new N(e, {
                                                      text: function () {
                                                          return t.code;
                                                      },
                                                  });
                                                  n.on("success", function () {
                                                      (e.textContent =
                                                          "Copied!"),
                                                          i();
                                                  }),
                                                      n.on(
                                                          "error",
                                                          function () {
                                                              (e.textContent =
                                                                  "Press Ctrl+C to copy"),
                                                                  i();
                                                          }
                                                      );
                                              }
                                              function i() {
                                                  setTimeout(function () {
                                                      e.innerHTML = "Copy";
                                                  }, 5e3);
                                              }
                                          }
                                      ))
                                    : console.warn(
                                          "Copy to Clipboard plugin loaded before Toolbar plugin."
                                      ));
                    }.call(this, n(69)(t), n(36));
            },
            function (t, e) {
                t.exports = function (t) {
                    var e;
                    return (
                        t.webpackPolyfill ||
                            ((e = Object.create(t)).children ||
                                (e.children = []),
                            Object.defineProperty(e, "loaded", {
                                enumerable: !0,
                                get: function () {
                                    return e.l;
                                },
                            }),
                            Object.defineProperty(e, "id", {
                                enumerable: !0,
                                get: function () {
                                    return e.i;
                                },
                            }),
                            Object.defineProperty(e, "exports", {
                                enumerable: !0,
                            }),
                            (e.webpackPolyfill = 1)),
                        e
                    );
                };
            },
            function (t, e, n) {
                var i = {}.propertyIsEnumerable,
                    s = Object.getOwnPropertyDescriptor,
                    o = s && !i.call({ 1: 2 }, 1);
                e.f = o
                    ? function (t) {
                          return !!(t = s(this, t)) && t.enumerable;
                      }
                    : i;
            },
            function (t, e, n) {
                var i = n(1),
                    s = n(0),
                    o = n(12),
                    r = Object,
                    a = i("".split);
                t.exports = s(function () {
                    return !r("z").propertyIsEnumerable(0);
                })
                    ? function (t) {
                          return "String" == o(t) ? a(t, "") : r(t);
                      }
                    : r;
            },
            function (t, e, n) {
                var i = n(8),
                    s = n(9),
                    o = n(40),
                    r = n(44),
                    a = n(73),
                    l = ((n = n(6)), TypeError),
                    c = n("toPrimitive");
                t.exports = function (t, e) {
                    if (!s(t) || o(t)) return t;
                    var n = r(t, c);
                    if (n) {
                        if (
                            ((n = i(n, t, (e = void 0 === e ? "default" : e))),
                            !s(n) || o(n))
                        )
                            return n;
                        throw l("Can't convert object to primitive value");
                    }
                    return a(t, (e = void 0 === e ? "number" : e));
                };
            },
            function (t, e, n) {
                var i = n(8),
                    s = n(2),
                    o = n(9),
                    r = TypeError;
                t.exports = function (t, e) {
                    var n, a;
                    if (
                        "string" === e &&
                        s((n = t.toString)) &&
                        !o((a = i(n, t)))
                    )
                        return a;
                    if (s((n = t.valueOf)) && !o((a = i(n, t)))) return a;
                    if (
                        "string" !== e &&
                        s((n = t.toString)) &&
                        !o((a = i(n, t)))
                    )
                        return a;
                    throw r("Can't convert object to primitive value");
                };
            },
            function (t, e) {
                t.exports = !1;
            },
            function (t, e, n) {
                var i = n(0),
                    s = n(2),
                    o = n(5),
                    r = n(4),
                    a = n(51).CONFIGURABLE,
                    l = n(76),
                    c = (n = n(31)).enforce,
                    d = n.get,
                    u = Object.defineProperty,
                    h =
                        r &&
                        !i(function () {
                            return (
                                8 !==
                                u(function () {}, "length", { value: 8 }).length
                            );
                        }),
                    p = String(String).split("String");
                n = t.exports = function (t, e, n) {
                    "Symbol(" === String(e).slice(0, 7) &&
                        (e =
                            "[" +
                            String(e).replace(/^Symbol\(([^)]*)\)/, "$1") +
                            "]"),
                        n && n.getter && (e = "get " + e),
                        n && n.setter && (e = "set " + e),
                        (!o(t, "name") || (a && t.name !== e)) &&
                            (r
                                ? u(t, "name", { value: e, configurable: !0 })
                                : (t.name = e)),
                        h &&
                            n &&
                            o(n, "arity") &&
                            t.length !== n.arity &&
                            u(t, "length", { value: n.arity });
                    try {
                        n && o(n, "constructor") && n.constructor
                            ? r && u(t, "prototype", { writable: !1 })
                            : t.prototype && (t.prototype = void 0);
                    } catch (i) {}
                    return (
                        (n = c(t)),
                        o(n, "source") ||
                            (n.source = p.join("string" == typeof e ? e : "")),
                        t
                    );
                };
                Function.prototype.toString = n(function () {
                    return (s(this) && d(this).source) || l(this);
                }, "toString");
            },
            function (t, e, n) {
                var i = n(1),
                    s = n(2),
                    o = ((n = n(27)), i(Function.toString));
                s(n.inspectSource) ||
                    (n.inspectSource = function (t) {
                        return o(t);
                    }),
                    (t.exports = n.inspectSource);
            },
            function (t, e, n) {
                var i = n(3);
                (n = n(2)), (i = i.WeakMap);
                t.exports = n(i) && /native code/.test(String(i));
            },
            function (t, e, n) {
                var i = n(5),
                    s = n(79),
                    o = n(38),
                    r = n(10);
                t.exports = function (t, e, n) {
                    for (
                        var a = s(e), l = r.f, c = o.f, d = 0;
                        d < a.length;
                        d++
                    ) {
                        var u = a[d];
                        i(t, u) || (n && i(n, u)) || l(t, u, c(e, u));
                    }
                };
            },
            function (t, e, n) {
                var i = n(14),
                    s = n(1),
                    o = n(53),
                    r = n(82),
                    a = n(7),
                    l = s([].concat);
                t.exports =
                    i("Reflect", "ownKeys") ||
                    function (t) {
                        var e = o.f(a(t)),
                            n = r.f;
                        return n ? l(e, n(t)) : e;
                    };
            },
            function (t, e, n) {
                function i(t) {
                    return function (e, n, i) {
                        var a,
                            l = s(e),
                            c = r(l),
                            d = o(i, c);
                        if (t && n != n) {
                            for (; d < c; ) if ((a = l[d++]) != a) return !0;
                        } else
                            for (; d < c; d++)
                                if ((t || d in l) && l[d] === n)
                                    return t || d || 0;
                        return !t && -1;
                    };
                }
                var s = n(15),
                    o = n(55),
                    r = n(33);
                t.exports = { includes: i(!0), indexOf: i(!1) };
            },
            function (t, e) {
                var n = Math.ceil,
                    i = Math.floor;
                t.exports =
                    Math.trunc ||
                    function (t) {
                        return (0 < (t = +t) ? i : n)(t);
                    };
            },
            function (t, e) {
                e.f = Object.getOwnPropertySymbols;
            },
            function (t, e, n) {
                var i = n(84),
                    s = n(2),
                    o = n(12),
                    r = n(6)("toStringTag"),
                    a = Object,
                    l =
                        "Arguments" ==
                        o(
                            (function () {
                                return arguments;
                            })()
                        );
                t.exports = i
                    ? o
                    : function (t) {
                          var e;
                          return void 0 === t
                              ? "Undefined"
                              : null === t
                              ? "Null"
                              : "string" ==
                                typeof (e = (function (t, e) {
                                    try {
                                        return t[e];
                                    } catch (n) {}
                                })((t = a(t)), r))
                              ? e
                              : l
                              ? o(t)
                              : "Object" == (e = o(t)) && s(t.callee)
                              ? "Arguments"
                              : e;
                      };
            },
            function (t, e, n) {
                var i = {};
                (i[n(6)("toStringTag")] = "z"),
                    (t.exports = "[object z]" === String(i));
            },
            function (t, e, n) {
                function i() {}
                var s,
                    o = n(7),
                    r = n(86),
                    a = n(34),
                    l = n(32),
                    c = n(88),
                    d = n(49),
                    u = ((n = n(52)), "prototype"),
                    h = "script",
                    p = n("IE_PROTO"),
                    f = function (t) {
                        return "<" + h + ">" + t + "</" + h + ">";
                    },
                    g = function () {
                        try {
                            s = new ActiveXObject("htmlfile");
                        } catch (i) {}
                        g =
                            "undefined" == typeof document ||
                            (document.domain && s)
                                ? (function (t) {
                                      t.write(f("")), t.close();
                                      var e = t.parentWindow.Object;
                                      return (t = null), e;
                                  })(s)
                                : ((t = d("iframe")),
                                  (e = "java" + h + ":"),
                                  (t.style.display = "none"),
                                  c.appendChild(t),
                                  (t.src = String(e)),
                                  (e = t.contentWindow.document).open(),
                                  e.write(f("document.F=Object")),
                                  e.close(),
                                  e.F);
                        for (var t, e, n = a.length; n--; ) delete g[u][a[n]];
                        return g();
                    };
                (l[p] = !0),
                    (t.exports =
                        Object.create ||
                        function (t, e) {
                            var n;
                            return (
                                null !== t
                                    ? ((i[u] = o(t)),
                                      (n = new i()),
                                      (i[u] = null),
                                      (n[p] = t))
                                    : (n = g()),
                                void 0 === e ? n : r.f(n, e)
                            );
                        });
            },
            function (t, e, n) {
                var i = n(4),
                    s = n(50),
                    o = n(10),
                    r = n(7),
                    a = n(15),
                    l = n(87);
                e.f =
                    i && !s
                        ? Object.defineProperties
                        : function (t, e) {
                              r(t);
                              for (
                                  var n,
                                      i = a(e),
                                      s = l(e),
                                      c = s.length,
                                      d = 0;
                                  d < c;

                              )
                                  o.f(t, (n = s[d++]), i[n]);
                              return t;
                          };
            },
            function (t, e, n) {
                var i = n(54),
                    s = n(34);
                t.exports =
                    Object.keys ||
                    function (t) {
                        return i(t, s);
                    };
            },
            function (t, e, n) {
                (n = n(14)), (t.exports = n("document", "documentElement"));
            },
            function (t, e, n) {
                var i = n(90),
                    s = n(8),
                    o = n(1),
                    r = n(91),
                    a = n(0),
                    l = n(7),
                    c = n(2),
                    d = n(23),
                    u = n(18),
                    h = n(56),
                    p = n(11),
                    f = n(13),
                    g = n(93),
                    m = n(44),
                    b = n(95),
                    _ = n(96),
                    v = n(6)("replace"),
                    y = Math.max,
                    w = Math.min,
                    C = o([].concat),
                    E = o([].push),
                    A = o("".indexOf),
                    S = o("".slice),
                    k =
                        ((n = "$0" === "a".replace(/./, "$0")),
                        !!/./[v] && "" === /./[v]("a", "$0"));
                r(
                    "replace",
                    function (t, e, n) {
                        var o = k ? "$" : "$0";
                        return [
                            function (t, n) {
                                var i = f(this),
                                    o = d(t) ? void 0 : m(t, v);
                                return o ? s(o, t, i, n) : s(e, p(i), t, n);
                            },
                            function (t, s) {
                                var r = l(this),
                                    a = p(t);
                                if (
                                    "string" == typeof s &&
                                    -1 === A(s, o) &&
                                    -1 === A(s, "$<") &&
                                    (t = n(e, r, a, s)).done
                                )
                                    return t.value;
                                for (
                                    var d,
                                        f = c(s),
                                        m = (f || (s = p(s)), r.global),
                                        v =
                                            (m &&
                                                ((d = r.unicode),
                                                (r.lastIndex = 0)),
                                            []);
                                    null !== (L = _(r, a)) && (E(v, L), m);

                                )
                                    "" === p(L[0]) &&
                                        (r.lastIndex = g(a, h(r.lastIndex), d));
                                for (
                                    var k, x = "", T = 0, O = 0;
                                    O < v.length;
                                    O++
                                ) {
                                    for (
                                        var L,
                                            M = p((L = v[O])[0]),
                                            D = y(w(u(L.index), a.length), 0),
                                            N = [],
                                            $ = 1;
                                        $ < L.length;
                                        $++
                                    )
                                        E(
                                            N,
                                            void 0 === (k = L[$])
                                                ? k
                                                : String(k)
                                        );
                                    var R = L.groups,
                                        P = f
                                            ? ((P = C([M], N, D, a)),
                                              void 0 !== R && E(P, R),
                                              p(i(s, void 0, P)))
                                            : b(M, a, D, N, R, s);
                                    T <= D &&
                                        ((x += S(a, T, D) + P),
                                        (T = D + M.length));
                                }
                                return x + S(a, T);
                            },
                        ];
                    },
                    !!a(function () {
                        var t = /./;
                        return (
                            (t.exec = function () {
                                var t = [];
                                return (t.groups = { a: "7" }), t;
                            }),
                            "7" !== "".replace(t, "$<a>")
                        );
                    }) ||
                        !n ||
                        k
                );
            },
            function (t, e, n) {
                n = n(21);
                var i = Function.prototype,
                    s = i.apply,
                    o = i.call;
                t.exports =
                    ("object" == typeof Reflect && Reflect.apply) ||
                    (n
                        ? o.bind(s)
                        : function () {
                              return o.apply(s, arguments);
                          });
            },
            function (t, e, n) {
                n(37);
                var i = n(92),
                    s = n(30),
                    o = n(35),
                    r = n(0),
                    a = n(6),
                    l = n(17),
                    c = a("species"),
                    d = RegExp.prototype;
                t.exports = function (t, e, n, u) {
                    var h,
                        p = a(t),
                        f = !r(function () {
                            var e = {};
                            return (
                                (e[p] = function () {
                                    return 7;
                                }),
                                7 != ""[t](e)
                            );
                        }),
                        g =
                            f &&
                            !r(function () {
                                var e = !1,
                                    n = /a/;
                                return (
                                    "split" === t &&
                                        (((n = { constructor: {} }).constructor[
                                            c
                                        ] = function () {
                                            return n;
                                        }),
                                        (n.flags = ""),
                                        (n[p] = /./[p])),
                                    (n.exec = function () {
                                        return (e = !0), null;
                                    }),
                                    n[p](""),
                                    !e
                                );
                            });
                    (f && g && !n) ||
                        ((h = i(/./[p])),
                        (g = e(p, ""[t], function (t, e, n, s, r) {
                            t = i(t);
                            var a = e.exec;
                            return a === o || a === d.exec
                                ? f && !r
                                    ? { done: !0, value: h(e, n, s) }
                                    : { done: !0, value: t(n, e, s) }
                                : { done: !1 };
                        })),
                        s(String.prototype, t, g[0]),
                        s(d, p, g[1])),
                        u && l(d[p], "sham", !0);
                };
            },
            function (t, e, n) {
                var i = n(12),
                    s = n(1);
                t.exports = function (t) {
                    if ("Function" === i(t)) return s(t);
                };
            },
            function (t, e, n) {
                var i = n(94).charAt;
                t.exports = function (t, e, n) {
                    return e + (n ? i(t, e).length : 1);
                };
            },
            function (t, e, n) {
                function i(t) {
                    return function (e, n) {
                        (e = r(a(e))), (n = o(n));
                        var i,
                            s = e.length;
                        return n < 0 || s <= n
                            ? t
                                ? ""
                                : void 0
                            : (i = c(e, n)) < 55296 ||
                              56319 < i ||
                              n + 1 === s ||
                              (s = c(e, n + 1)) < 56320 ||
                              57343 < s
                            ? t
                                ? l(e, n)
                                : i
                            : t
                            ? d(e, n, n + 2)
                            : s - 56320 + ((i - 55296) << 10) + 65536;
                    };
                }
                var s = n(1),
                    o = n(18),
                    r = n(11),
                    a = n(13),
                    l = s("".charAt),
                    c = s("".charCodeAt),
                    d = s("".slice);
                t.exports = { codeAt: i(!1), charAt: i(!0) };
            },
            function (t, e, n) {
                var i = n(1),
                    s = n(29),
                    o = Math.floor,
                    r = i("".charAt),
                    a = i("".replace),
                    l = i("".slice),
                    c = /\$([$&'`]|\d{1,2}|<[^>]*>)/g,
                    d = /\$([$&'`]|\d{1,2})/g;
                t.exports = function (t, e, n, i, u, h) {
                    var p = n + t.length,
                        f = i.length,
                        g = d;
                    return (
                        void 0 !== u && ((u = s(u)), (g = c)),
                        a(h, g, function (s, a) {
                            var c;
                            switch (r(a, 0)) {
                                case "$":
                                    return "$";
                                case "&":
                                    return t;
                                case "`":
                                    return l(e, 0, n);
                                case "'":
                                    return l(e, p);
                                case "<":
                                    c = u[l(a, 1, -1)];
                                    break;
                                default:
                                    var d,
                                        h = +a;
                                    if (0 == h) return s;
                                    if (f < h)
                                        return 0 !== (d = o(h / 10)) && d <= f
                                            ? void 0 === i[d - 1]
                                                ? r(a, 1)
                                                : i[d - 1] + r(a, 1)
                                            : s;
                                    c = i[h - 1];
                            }
                            return void 0 === c ? "" : c;
                        })
                    );
                };
            },
            function (t, e, n) {
                var i = n(8),
                    s = n(7),
                    o = n(2),
                    r = n(12),
                    a = n(35),
                    l = TypeError;
                t.exports = function (t, e) {
                    var n = t.exec;
                    if (o(n)) return null !== (n = i(n, t, e)) && s(n), n;
                    if ("RegExp" === r(t)) return i(a, t, e);
                    throw l("RegExp#exec called on incompatible receiver");
                };
            },
            function (t, e, n) {
                var i = n(4),
                    s = n(3),
                    o = n(1),
                    r = n(57),
                    a = n(98),
                    l = n(17),
                    c = n(53).f,
                    d = n(25),
                    u = n(101),
                    h = n(11),
                    p = n(102),
                    f = n(59),
                    g = n(103),
                    m = n(30),
                    b = n(0),
                    _ = n(5),
                    v = n(31).enforce,
                    y = n(104),
                    w = n(6),
                    C = n(60),
                    E = n(61),
                    A = w("match"),
                    S = s.RegExp,
                    k = S.prototype,
                    x = s.SyntaxError,
                    T = o(k.exec),
                    O = o("".charAt),
                    L = o("".replace),
                    M = o("".indexOf),
                    D = o("".slice),
                    N = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/,
                    $ = /a/g,
                    R = /a/g,
                    P = ((n = new S($) !== $), f.MISSED_STICKY),
                    I = f.UNSUPPORTED_Y;
                if (
                    r(
                        "RegExp",
                        (w =
                            i &&
                            (!n ||
                                P ||
                                C ||
                                E ||
                                b(function () {
                                    return (
                                        (R[A] = !1),
                                        S($) != $ ||
                                            S(R) == R ||
                                            "/a/i" != S($, "i")
                                    );
                                })))
                    )
                ) {
                    let t = function (e, n) {
                        var i,
                            s,
                            o = d(k, this),
                            r = u(e),
                            c = void 0 === n,
                            f = [],
                            g = e;
                        if (!o && r && c && e.constructor === t) return e;
                        if (
                            ((r || d(k, e)) &&
                                ((e = e.source), c) &&
                                (n = p(g)),
                            (e = void 0 === e ? "" : h(e)),
                            (n = void 0 === n ? "" : h(n)),
                            (g = e),
                            (r = n =
                                C &&
                                "dotAll" in $ &&
                                (i = !!n && -1 < M(n, "s"))
                                    ? L(n, /s/g, "")
                                    : n),
                            P &&
                                "sticky" in $ &&
                                (s = !!n && -1 < M(n, "y")) &&
                                I &&
                                (n = L(n, /y/g, "")),
                            E &&
                                ((e = (c = (function (t) {
                                    for (
                                        var e,
                                            n = t.length,
                                            i = 0,
                                            s = "",
                                            o = [],
                                            r = {},
                                            a = !1,
                                            l = !1,
                                            c = 0,
                                            d = "";
                                        i <= n;
                                        i++
                                    ) {
                                        if ("\\" === (e = O(t, i)))
                                            e += O(t, ++i);
                                        else if ("]" === e) a = !1;
                                        else if (!a)
                                            switch (!0) {
                                                case "[" === e:
                                                    a = !0;
                                                    break;
                                                case "(" === e:
                                                    T(N, D(t, i + 1)) &&
                                                        ((i += 2), (l = !0)),
                                                        (s += e),
                                                        c++;
                                                    continue;
                                                case ">" === e && l:
                                                    if ("" === d || _(r, d))
                                                        throw new x(
                                                            "Invalid capture group name"
                                                        );
                                                    (r[d] = !0),
                                                        (l = !(o[o.length] = [
                                                            d,
                                                            c,
                                                        ])),
                                                        (d = "");
                                                    continue;
                                            }
                                        l ? (d += e) : (s += e);
                                    }
                                    return [s, o];
                                })(e))[0]),
                                (f = c[1])),
                            (c = a(S(e, n), o ? this : k, t)),
                            (i || s || f.length) &&
                                ((n = v(c)),
                                i &&
                                    ((n.dotAll = !0),
                                    (n.raw = t(
                                        (function (t) {
                                            for (
                                                var e,
                                                    n = t.length,
                                                    i = 0,
                                                    s = "",
                                                    o = !1;
                                                i <= n;
                                                i++
                                            )
                                                "\\" === (e = O(t, i))
                                                    ? (s += e + O(t, ++i))
                                                    : o || "." !== e
                                                    ? ("[" === e
                                                          ? (o = !0)
                                                          : "]" === e &&
                                                            (o = !1),
                                                      (s += e))
                                                    : (s += "[\\s\\S]");
                                            return s;
                                        })(e),
                                        r
                                    ))),
                                s && (n.sticky = !0),
                                f.length) &&
                                (n.groups = f),
                            e !== g)
                        )
                            try {
                                l(c, "source", "" === g ? "(?:)" : g);
                            } catch (m) {}
                        return c;
                    };
                    for (var j = c(S), W = 0; j.length > W; ) g(t, S, j[W++]);
                    ((k.constructor = t).prototype = k),
                        m(s, "RegExp", t, { constructor: !0 });
                }
                y("RegExp");
            },
            function (t, e, n) {
                var i = n(2),
                    s = n(9),
                    o = n(99);
                t.exports = function (t, e, n) {
                    return (
                        o &&
                            i((e = e.constructor)) &&
                            e !== n &&
                            s((e = e.prototype)) &&
                            e !== n.prototype &&
                            o(t, e),
                        t
                    );
                };
            },
            function (t, e, n) {
                var i = n(1),
                    s = n(7),
                    o = n(100);
                t.exports =
                    Object.setPrototypeOf ||
                    ("__proto__" in {}
                        ? (function () {
                              var t,
                                  e = !1,
                                  n = {};
                              try {
                                  (t = i(
                                      Object.getOwnPropertyDescriptor(
                                          Object.prototype,
                                          "__proto__"
                                      ).set
                                  ))(n, []),
                                      (e = n instanceof Array);
                              } catch (r) {}
                              return function (n, i) {
                                  return (
                                      s(n),
                                      o(i),
                                      e ? t(n, i) : (n.__proto__ = i),
                                      n
                                  );
                              };
                          })()
                        : void 0);
            },
            function (t, e, n) {
                var i = n(2),
                    s = String,
                    o = TypeError;
                t.exports = function (t) {
                    if ("object" == typeof t || i(t)) return t;
                    throw o("Can't set " + s(t) + " as a prototype");
                };
            },
            function (t, e, n) {
                var i = n(9),
                    s = n(12),
                    o = n(6)("match");
                t.exports = function (t) {
                    var e;
                    return (
                        i(t) && (void 0 !== (e = t[o]) ? !!e : "RegExp" == s(t))
                    );
                };
            },
            function (t, e, n) {
                var i = n(8),
                    s = n(5),
                    o = n(25),
                    r = n(58),
                    a = RegExp.prototype;
                t.exports = function (t) {
                    var e = t.flags;
                    return void 0 !== e ||
                        "flags" in a ||
                        s(t, "flags") ||
                        !o(a, t)
                        ? e
                        : i(r, t);
                };
            },
            function (t, e, n) {
                var i = n(10).f;
                t.exports = function (t, e, n) {
                    n in t ||
                        i(t, n, {
                            configurable: !0,
                            get: function () {
                                return e[n];
                            },
                            set: function (t) {
                                e[n] = t;
                            },
                        });
                };
            },
            function (t, e, n) {
                var i = n(14),
                    s = n(10),
                    o = n(6),
                    r = n(4),
                    a = o("species");
                t.exports = function (t) {
                    t = i(t);
                    var e = s.f;
                    r &&
                        t &&
                        !t[a] &&
                        e(t, a, {
                            configurable: !0,
                            get: function () {
                                return this;
                            },
                        });
                };
            },
            function (t, e, n) {
                var i = n(20),
                    s = n(106).trim;
                i(
                    { target: "String", proto: !0, forced: n(107)("trim") },
                    {
                        trim: function () {
                            return s(this);
                        },
                    }
                );
            },
            function (t, e, n) {
                function i(t) {
                    return function (e) {
                        return (
                            (e = r(o(e))),
                            1 & t && (e = a(e, l, "")),
                            2 & t ? a(e, c, "") : e
                        );
                    };
                }
                var s = n(1),
                    o = n(13),
                    r = n(11),
                    a = ((n = n(62)), s("".replace)),
                    l = ((s = "[" + n + "]"), RegExp("^" + s + s + "*")),
                    c = RegExp(s + s + "*$");
                t.exports = { start: i(1), end: i(2), trim: i(3) };
            },
            function (t, e, n) {
                var i = n(51).PROPER,
                    s = n(0),
                    o = n(62);
                t.exports = function (t) {
                    return s(function () {
                        return (
                            !!o[t]() ||
                            "â€‹Â…á Ž" !== "â€‹Â…á Ž"[t]() ||
                            (i && o[t].name !== t)
                        );
                    });
                };
            },
            function (t, e, n) {
                var i = n(20),
                    s = n(1),
                    o = n(45),
                    r = n(29),
                    a = n(33),
                    l = n(109),
                    c = n(11),
                    d = n(0),
                    u = n(110),
                    h = n(113),
                    p = n(114),
                    f = n(115),
                    g = n(43),
                    m = n(116),
                    b = [],
                    _ = s(b.sort),
                    v = s(b.push),
                    y =
                        ((n = d(function () {
                            b.sort(void 0);
                        })),
                        (s = d(function () {
                            b.sort(null);
                        })),
                        (h = h("sort")),
                        !d(function () {
                            if (g) return g < 70;
                            if (!(p && 3 < p)) {
                                if (f) return !0;
                                if (m) return m < 603;
                                for (var t, e, n, i = "", s = 65; s < 76; s++) {
                                    switch (((t = String.fromCharCode(s)), s)) {
                                        case 66:
                                        case 69:
                                        case 70:
                                        case 72:
                                            e = 3;
                                            break;
                                        case 68:
                                        case 71:
                                            e = 4;
                                            break;
                                        default:
                                            e = 2;
                                    }
                                    for (n = 0; n < 47; n++)
                                        b.push({ k: t + n, v: e });
                                }
                                for (
                                    b.sort(function (t, e) {
                                        return e.v - t.v;
                                    }),
                                        n = 0;
                                    n < b.length;
                                    n++
                                )
                                    (t = b[n].k.charAt(0)),
                                        i.charAt(i.length - 1) !== t &&
                                            (i += t);
                                return "DGBEFHACIJK" !== i;
                            }
                        }));
                i(
                    { target: "Array", proto: !0, forced: n || !s || !h || !y },
                    {
                        sort: function (t) {
                            void 0 !== t && o(t);
                            var e = r(this);
                            if (y) return void 0 === t ? _(e) : _(e, t);
                            for (var n, i, s = [], d = a(e), h = 0; h < d; h++)
                                h in e && v(s, e[h]);
                            for (
                                u(
                                    s,
                                    ((i = t),
                                    function (t, e) {
                                        return void 0 === e
                                            ? -1
                                            : void 0 === t
                                            ? 1
                                            : void 0 !== i
                                            ? +i(t, e) || 0
                                            : c(t) > c(e)
                                            ? 1
                                            : -1;
                                    })
                                ),
                                    n = a(s),
                                    h = 0;
                                h < n;

                            )
                                e[h] = s[h++];
                            for (; h < d; ) l(e, h++);
                            return e;
                        },
                    }
                );
            },
            function (t, e, n) {
                var i = n(46),
                    s = TypeError;
                t.exports = function (t, e) {
                    if (!delete t[e])
                        throw s(
                            "Cannot delete property " + i(e) + " of " + i(t)
                        );
                };
            },
            function (t, e, n) {
                var i = n(111),
                    s = Math.floor;
                t.exports = function t(e, n) {
                    var o = e.length,
                        r = s(o / 2);
                    if (o < 8) {
                        for (
                            var a, l, c = e, d = n, u = c.length, h = 1;
                            h < u;

                        ) {
                            for (a = c[(l = h)]; l && 0 < d(c[l - 1], a); )
                                c[l] = c[--l];
                            l !== h++ && (c[l] = a);
                        }
                        return c;
                    }
                    for (
                        var p = e,
                            f = t(i(e, 0, r), n),
                            g = t(i(e, r), n),
                            m = n,
                            b = f.length,
                            _ = g.length,
                            v = 0,
                            y = 0;
                        v < b || y < _;

                    )
                        p[v + y] =
                            v < b && y < _
                                ? m(f[v], g[y]) <= 0
                                    ? f[v++]
                                    : g[y++]
                                : v < b
                                ? f[v++]
                                : g[y++];
                    return p;
                };
            },
            function (t, e, n) {
                var i = n(55),
                    s = n(33),
                    o = n(112),
                    r = Array,
                    a = Math.max;
                t.exports = function (t, e, n) {
                    for (
                        var l = s(t),
                            c = i(e, l),
                            d = i(void 0 === n ? l : n, l),
                            u = r(a(d - c, 0)),
                            h = 0;
                        c < d;
                        c++, h++
                    )
                        o(u, h, t[c]);
                    return (u.length = h), u;
                };
            },
            function (t, e, n) {
                var i = n(24),
                    s = n(10),
                    o = n(22);
                t.exports = function (t, e, n) {
                    (e = i(e)) in t ? s.f(t, e, o(0, n)) : (t[e] = n);
                };
            },
            function (t, e, n) {
                var i = n(0);
                t.exports = function (t, e) {
                    var n = [][t];
                    return (
                        !!n &&
                        i(function () {
                            n.call(
                                null,
                                e ||
                                    function () {
                                        return 1;
                                    },
                                1
                            );
                        })
                    );
                };
            },
            function (t, e, n) {
                (n = n(16).match(/firefox\/(\d+)/i)),
                    (t.exports = !!n && +n[1]);
            },
            function (t, e, n) {
                (n = n(16)), (t.exports = /MSIE|Trident/.test(n));
            },
            function (t, e, n) {
                (n = n(16).match(/AppleWebKit\/(\d+)\./)),
                    (t.exports = !!n && +n[1]);
            },
            function (t, e, n) {
                /*!
                 * clipboard.js v2.0.11
                 * https://clipboardjs.com/
                 *
                 * Licensed MIT Â© Zeno Rocha
                 */
                var i;
                (i = function () {
                    return (
                        (e = {
                            686: function (t, e, n) {
                                n.d(e, {
                                    default: function () {
                                        return m;
                                    },
                                });
                                (e = n(279)), (e = n.n(e));
                                var i = n(370),
                                    s = n.n(i),
                                    o = ((i = n(817)), n.n(i));
                                function r(t) {
                                    try {
                                        document.execCommand(t);
                                    } catch (e) {}
                                }
                                var a = function (t) {
                                    return (t = o()(t)), r("cut"), t;
                                };
                                function l(t, e) {
                                    (i =
                                        "rtl" ===
                                        document.documentElement.getAttribute(
                                            "dir"
                                        )),
                                        ((n =
                                            document.createElement(
                                                "textarea"
                                            )).style.fontSize = "12pt"),
                                        (n.style.border = "0"),
                                        (n.style.padding = "0"),
                                        (n.style.margin = "0"),
                                        (n.style.position = "absolute"),
                                        (n.style[i ? "right" : "left"] =
                                            "-9999px"),
                                        (i =
                                            window.pageYOffset ||
                                            document.documentElement.scrollTop),
                                        (n.style.top = "".concat(i, "px")),
                                        n.setAttribute("readonly", ""),
                                        (n.value = t);
                                    var n,
                                        i = n;
                                    e.container.appendChild(i), (t = o()(i));
                                    return r("copy"), i.remove(), t;
                                }
                                var c = function (t) {
                                    var e =
                                            1 < arguments.length &&
                                            void 0 !== arguments[1]
                                                ? arguments[1]
                                                : { container: document.body },
                                        n = "";
                                    return (
                                        "string" == typeof t
                                            ? (n = l(t, e))
                                            : t instanceof HTMLInputElement &&
                                              ![
                                                  "text",
                                                  "search",
                                                  "url",
                                                  "tel",
                                                  "password",
                                              ].includes(
                                                  null == t ? void 0 : t.type
                                              )
                                            ? (n = l(t.value, e))
                                            : ((n = o()(t)), r("copy")),
                                        n
                                    );
                                };
                                function d(t) {
                                    return (d =
                                        "function" == typeof Symbol &&
                                        "symbol" == typeof Symbol.iterator
                                            ? function (t) {
                                                  return typeof t;
                                              }
                                            : function (t) {
                                                  return t &&
                                                      "function" ==
                                                          typeof Symbol &&
                                                      t.constructor ===
                                                          Symbol &&
                                                      t !== Symbol.prototype
                                                      ? "symbol"
                                                      : typeof t;
                                              })(t);
                                }
                                function u(t) {
                                    return (u =
                                        "function" == typeof Symbol &&
                                        "symbol" == typeof Symbol.iterator
                                            ? function (t) {
                                                  return typeof t;
                                              }
                                            : function (t) {
                                                  return t &&
                                                      "function" ==
                                                          typeof Symbol &&
                                                      t.constructor ===
                                                          Symbol &&
                                                      t !== Symbol.prototype
                                                      ? "symbol"
                                                      : typeof t;
                                              })(t);
                                }
                                function h(t, e) {
                                    for (var n = 0; n < e.length; n++) {
                                        var i = e[n];
                                        (i.enumerable = i.enumerable || !1),
                                            (i.configurable = !0),
                                            "value" in i && (i.writable = !0),
                                            Object.defineProperty(t, i.key, i);
                                    }
                                }
                                function p(t, e) {
                                    return (p =
                                        Object.setPrototypeOf ||
                                        function (t, e) {
                                            return (t.__proto__ = e), t;
                                        })(t, e);
                                }
                                function f(t) {
                                    return (f = Object.setPrototypeOf
                                        ? Object.getPrototypeOf
                                        : function (t) {
                                              return (
                                                  t.__proto__ ||
                                                  Object.getPrototypeOf(t)
                                              );
                                          })(t);
                                }
                                function g(t, e) {
                                    if (
                                        ((t = "data-clipboard-".concat(t)),
                                        e.hasAttribute(t))
                                    )
                                        return e.getAttribute(t);
                                }
                                var m = (function (t) {
                                    var e = o;
                                    if ("function" != typeof t && null !== t)
                                        throw new TypeError(
                                            "Super expression must either be null or a function"
                                        );
                                    (e.prototype = Object.create(
                                        t && t.prototype,
                                        {
                                            constructor: {
                                                value: e,
                                                writable: !0,
                                                configurable: !0,
                                            },
                                        }
                                    )),
                                        t && p(e, t);
                                    var n,
                                        i = (function (e) {
                                            var n = (function () {
                                                if (
                                                    "undefined" ==
                                                        typeof Reflect ||
                                                    !Reflect.construct
                                                )
                                                    return !1;
                                                if (Reflect.construct.sham)
                                                    return !1;
                                                if ("function" == typeof Proxy)
                                                    return !0;
                                                try {
                                                    return (
                                                        Date.prototype.toString.call(
                                                            Reflect.construct(
                                                                Date,
                                                                [],
                                                                function () {}
                                                            )
                                                        ),
                                                        !0
                                                    );
                                                } catch (t) {
                                                    return !1;
                                                }
                                            })();
                                            return function () {
                                                var t,
                                                    i = f(e);
                                                if (
                                                    ((t = n
                                                        ? ((t =
                                                              f(
                                                                  this
                                                              ).constructor),
                                                          Reflect.construct(
                                                              i,
                                                              arguments,
                                                              t
                                                          ))
                                                        : i.apply(
                                                              this,
                                                              arguments
                                                          )),
                                                    (i = this),
                                                    !t ||
                                                        ("object" !== u(t) &&
                                                            "function" !=
                                                                typeof t))
                                                ) {
                                                    if (void 0 !== i) return i;
                                                    throw new ReferenceError(
                                                        "this hasn't been initialised - super() hasn't been called"
                                                    );
                                                }
                                                return t;
                                            };
                                        })(o);
                                    function o(t, e) {
                                        var n;
                                        if (this instanceof o)
                                            return (
                                                (n =
                                                    i.call(
                                                        this
                                                    )).resolveOptions(e),
                                                n.listenClick(t),
                                                n
                                            );
                                        throw new TypeError(
                                            "Cannot call a class as a function"
                                        );
                                    }
                                    return (
                                        (e = o),
                                        (t = [
                                            {
                                                key: "copy",
                                                value: function (t) {
                                                    var e =
                                                        1 < arguments.length &&
                                                        void 0 !== arguments[1]
                                                            ? arguments[1]
                                                            : {
                                                                  container:
                                                                      document.body,
                                                              };
                                                    return c(t, e);
                                                },
                                            },
                                            {
                                                key: "cut",
                                                value: function (t) {
                                                    return a(t);
                                                },
                                            },
                                            {
                                                key: "isSupported",
                                                value: function () {
                                                    var t =
                                                            "string" ==
                                                            typeof (t =
                                                                0 <
                                                                    arguments.length &&
                                                                void 0 !==
                                                                    arguments[0]
                                                                    ? arguments[0]
                                                                    : [
                                                                          "copy",
                                                                          "cut",
                                                                      ])
                                                                ? [t]
                                                                : t,
                                                        e =
                                                            !!document.queryCommandSupported;
                                                    return (
                                                        t.forEach(function (t) {
                                                            e =
                                                                e &&
                                                                !!document.queryCommandSupported(
                                                                    t
                                                                );
                                                        }),
                                                        e
                                                    );
                                                },
                                            },
                                        ]),
                                        (n = [
                                            {
                                                key: "resolveOptions",
                                                value: function () {
                                                    var t =
                                                        0 < arguments.length &&
                                                        void 0 !== arguments[0]
                                                            ? arguments[0]
                                                            : {};
                                                    (this.action =
                                                        "function" ==
                                                        typeof t.action
                                                            ? t.action
                                                            : this
                                                                  .defaultAction),
                                                        (this.target =
                                                            "function" ==
                                                            typeof t.target
                                                                ? t.target
                                                                : this
                                                                      .defaultTarget),
                                                        (this.text =
                                                            "function" ==
                                                            typeof t.text
                                                                ? t.text
                                                                : this
                                                                      .defaultText),
                                                        (this.container =
                                                            "object" ===
                                                            u(t.container)
                                                                ? t.container
                                                                : document.body);
                                                },
                                            },
                                            {
                                                key: "listenClick",
                                                value: function (t) {
                                                    var e = this;
                                                    this.listener = s()(
                                                        t,
                                                        "click",
                                                        function (t) {
                                                            return e.onClick(t);
                                                        }
                                                    );
                                                },
                                            },
                                            {
                                                key: "onClick",
                                                value: function (t) {
                                                    var e =
                                                            t.delegateTarget ||
                                                            t.currentTarget,
                                                        n = (function () {
                                                            var t =
                                                                    void 0 ===
                                                                    (t = (i =
                                                                        0 <
                                                                            arguments.length &&
                                                                        void 0 !==
                                                                            arguments[0]
                                                                            ? arguments[0]
                                                                            : {})
                                                                        .action)
                                                                        ? "copy"
                                                                        : t,
                                                                e = i.container,
                                                                n = i.target,
                                                                i = i.text;
                                                            if (
                                                                "copy" !== t &&
                                                                "cut" !== t
                                                            )
                                                                throw new Error(
                                                                    'Invalid "action" value, use either "copy" or "cut"'
                                                                );
                                                            if (void 0 !== n) {
                                                                if (
                                                                    !n ||
                                                                    "object" !==
                                                                        d(n) ||
                                                                    1 !==
                                                                        n.nodeType
                                                                )
                                                                    throw new Error(
                                                                        'Invalid "target" value, use a valid Element'
                                                                    );
                                                                if (
                                                                    "copy" ===
                                                                        t &&
                                                                    n.hasAttribute(
                                                                        "disabled"
                                                                    )
                                                                )
                                                                    throw new Error(
                                                                        'Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute'
                                                                    );
                                                                if (
                                                                    "cut" ===
                                                                        t &&
                                                                    (n.hasAttribute(
                                                                        "readonly"
                                                                    ) ||
                                                                        n.hasAttribute(
                                                                            "disabled"
                                                                        ))
                                                                )
                                                                    throw new Error(
                                                                        'Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes'
                                                                    );
                                                            }
                                                            return i
                                                                ? c(i, {
                                                                      container:
                                                                          e,
                                                                  })
                                                                : n
                                                                ? "cut" === t
                                                                    ? a(n)
                                                                    : c(n, {
                                                                          container:
                                                                              e,
                                                                      })
                                                                : void 0;
                                                        })({
                                                            action: (t =
                                                                this.action(
                                                                    e
                                                                ) || "copy"),
                                                            container:
                                                                this.container,
                                                            target: this.target(
                                                                e
                                                            ),
                                                            text: this.text(e),
                                                        });
                                                    this.emit(
                                                        n ? "success" : "error",
                                                        {
                                                            action: t,
                                                            text: n,
                                                            trigger: e,
                                                            clearSelection:
                                                                function () {
                                                                    e &&
                                                                        e.focus(),
                                                                        window
                                                                            .getSelection()
                                                                            .removeAllRanges();
                                                                },
                                                        }
                                                    );
                                                },
                                            },
                                            {
                                                key: "defaultAction",
                                                value: function (t) {
                                                    return g("action", t);
                                                },
                                            },
                                            {
                                                key: "defaultTarget",
                                                value: function (t) {
                                                    if ((t = g("target", t)))
                                                        return document.querySelector(
                                                            t
                                                        );
                                                },
                                            },
                                            {
                                                key: "defaultText",
                                                value: function (t) {
                                                    return g("text", t);
                                                },
                                            },
                                            {
                                                key: "destroy",
                                                value: function () {
                                                    this.listener.destroy();
                                                },
                                            },
                                        ]) && h(e.prototype, n),
                                        t && h(e, t),
                                        o
                                    );
                                })(e());
                            },
                            828: function (t) {
                                var e;
                                "undefined" == typeof Element ||
                                    Element.prototype.matches ||
                                    ((e = Element.prototype).matches =
                                        e.matchesSelector ||
                                        e.mozMatchesSelector ||
                                        e.msMatchesSelector ||
                                        e.oMatchesSelector ||
                                        e.webkitMatchesSelector),
                                    (t.exports = function (t, e) {
                                        for (; t && 9 !== t.nodeType; ) {
                                            if (
                                                "function" ==
                                                    typeof t.matches &&
                                                t.matches(e)
                                            )
                                                return t;
                                            t = t.parentNode;
                                        }
                                    });
                            },
                            438: function (t, e, n) {
                                var i = n(828);
                                function s(t, e, n, s, o) {
                                    var r = function (t, e, n, s) {
                                        return function (n) {
                                            (n.delegateTarget = i(n.target, e)),
                                                n.delegateTarget &&
                                                    s.call(t, n);
                                        };
                                    }.apply(this, arguments);
                                    return (
                                        t.addEventListener(n, r, o),
                                        {
                                            destroy: function () {
                                                t.removeEventListener(n, r, o);
                                            },
                                        }
                                    );
                                }
                                t.exports = function (t, e, n, i, o) {
                                    return "function" ==
                                        typeof t.addEventListener
                                        ? s.apply(null, arguments)
                                        : "function" == typeof n
                                        ? s
                                              .bind(null, document)
                                              .apply(null, arguments)
                                        : ("string" == typeof t &&
                                              (t =
                                                  document.querySelectorAll(t)),
                                          Array.prototype.map.call(
                                              t,
                                              function (t) {
                                                  return s(t, e, n, i, o);
                                              }
                                          ));
                                };
                            },
                            879: function (t, e) {
                                (e.node = function (t) {
                                    return (
                                        void 0 !== t &&
                                        t instanceof HTMLElement &&
                                        1 === t.nodeType
                                    );
                                }),
                                    (e.nodeList = function (t) {
                                        var n =
                                            Object.prototype.toString.call(t);
                                        return (
                                            void 0 !== t &&
                                            ("[object NodeList]" === n ||
                                                "[object HTMLCollection]" ===
                                                    n) &&
                                            "length" in t &&
                                            (0 === t.length || e.node(t[0]))
                                        );
                                    }),
                                    (e.string = function (t) {
                                        return (
                                            "string" == typeof t ||
                                            t instanceof String
                                        );
                                    }),
                                    (e.fn = function (t) {
                                        return (
                                            "[object Function]" ===
                                            Object.prototype.toString.call(t)
                                        );
                                    });
                            },
                            370: function (t, e, n) {
                                var i = n(879),
                                    s = n(438);
                                t.exports = function (t, e, n) {
                                    if (!t && !e && !n)
                                        throw new Error(
                                            "Missing required arguments"
                                        );
                                    if (!i.string(e))
                                        throw new TypeError(
                                            "Second argument must be a String"
                                        );
                                    if (!i.fn(n))
                                        throw new TypeError(
                                            "Third argument must be a Function"
                                        );
                                    if (i.node(t))
                                        return (
                                            (c = e),
                                            (d = n),
                                            (l = t).addEventListener(c, d),
                                            {
                                                destroy: function () {
                                                    l.removeEventListener(c, d);
                                                },
                                            }
                                        );
                                    if (i.nodeList(t))
                                        return (
                                            (o = t),
                                            (r = e),
                                            (a = n),
                                            Array.prototype.forEach.call(
                                                o,
                                                function (t) {
                                                    t.addEventListener(r, a);
                                                }
                                            ),
                                            {
                                                destroy: function () {
                                                    Array.prototype.forEach.call(
                                                        o,
                                                        function (t) {
                                                            t.removeEventListener(
                                                                r,
                                                                a
                                                            );
                                                        }
                                                    );
                                                },
                                            }
                                        );
                                    if (i.string(t))
                                        return s(document.body, t, e, n);
                                    throw new TypeError(
                                        "First argument must be a String, HTMLElement, HTMLCollection, or NodeList"
                                    );
                                    var o, r, a, l, c, d;
                                };
                            },
                            817: function (t) {
                                t.exports = function (t) {
                                    var e, n;
                                    return "SELECT" === t.nodeName
                                        ? (t.focus(), t.value)
                                        : "INPUT" === t.nodeName ||
                                          "TEXTAREA" === t.nodeName
                                        ? ((e = t.hasAttribute("readonly")) ||
                                              t.setAttribute("readonly", ""),
                                          t.select(),
                                          t.setSelectionRange(
                                              0,
                                              t.value.length
                                          ),
                                          e || t.removeAttribute("readonly"),
                                          t.value)
                                        : (t.hasAttribute("contenteditable") &&
                                              t.focus(),
                                          (e = window.getSelection()),
                                          (n =
                                              document.createRange()).selectNodeContents(
                                              t
                                          ),
                                          e.removeAllRanges(),
                                          e.addRange(n),
                                          e.toString());
                                };
                            },
                            279: function (t) {
                                function e() {}
                                (e.prototype = {
                                    on: function (t, e, n) {
                                        var i = this.e || (this.e = {});
                                        return (
                                            (i[t] || (i[t] = [])).push({
                                                fn: e,
                                                ctx: n,
                                            }),
                                            this
                                        );
                                    },
                                    once: function (t, e, n) {
                                        var i = this;
                                        function s() {
                                            i.off(t, s), e.apply(n, arguments);
                                        }
                                        return (s._ = e), this.on(t, s, n);
                                    },
                                    emit: function (t) {
                                        for (
                                            var e = [].slice.call(arguments, 1),
                                                n = (
                                                    (this.e || (this.e = {}))[
                                                        t
                                                    ] || []
                                                ).slice(),
                                                i = 0,
                                                s = n.length;
                                            i < s;
                                            i++
                                        )
                                            n[i].fn.apply(n[i].ctx, e);
                                        return this;
                                    },
                                    off: function (t, e) {
                                        var n = this.e || (this.e = {}),
                                            i = n[t],
                                            s = [];
                                        if (i && e)
                                            for (
                                                var o = 0, r = i.length;
                                                o < r;
                                                o++
                                            )
                                                i[o].fn !== e &&
                                                    i[o].fn._ !== e &&
                                                    s.push(i[o]);
                                        return (
                                            s.length ? (n[t] = s) : delete n[t],
                                            this
                                        );
                                    },
                                }),
                                    (t.exports = e),
                                    (t.exports.TinyEmitter = e);
                            },
                        }),
                        (n = {}),
                        (t.n = function (e) {
                            var n =
                                e && e.__esModule
                                    ? function () {
                                          return e.default;
                                      }
                                    : function () {
                                          return e;
                                      };
                            return t.d(n, { a: n }), n;
                        }),
                        (t.d = function (e, n) {
                            for (var i in n)
                                t.o(n, i) &&
                                    !t.o(e, i) &&
                                    Object.defineProperty(e, i, {
                                        enumerable: !0,
                                        get: n[i],
                                    });
                        }),
                        (t.o = function (t, e) {
                            return Object.prototype.hasOwnProperty.call(t, e);
                        }),
                        t(686).default
                    );
                    function t(i) {
                        var s;
                        return (
                            n[i] ||
                            ((s = n[i] = { exports: {} }),
                            e[i](s, s.exports, t),
                            s)
                        ).exports;
                    }
                    var e, n;
                }),
                    (t.exports = i());
            },
        ]);
});
